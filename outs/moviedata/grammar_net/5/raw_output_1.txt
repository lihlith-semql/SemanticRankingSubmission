{"index": 0, "beams": [{"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.08721229285946354, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.17002193223995893, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.2686388219910222, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.2955285662396122, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.33970377745055225, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3514484613715176, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35624902656235835, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35967061749518814, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36219160733050365, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3644268141106048, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3646291721914073, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37067255935004106, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3783381870471892, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37842602759394534, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.392467099405044, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.0662984509319902, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.19701753527109733, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.2629424298504114, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.2793199846279126, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3271205622080984, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.372708733101282, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3870155686172535, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(production_company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.38923600135961406, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.name,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.40238517731071305, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4063220487702689, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4133951876708687, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.movie_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4237370171784947, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.44503516931963083, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_average)", "score": -0.44545356054339946, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.budget)", "score": -0.45412850513622677, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.12458763775840753, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.17181085755605874, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.2631422075539158, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.3032952711342667, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.310365427351567, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.3232177170574518, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.32945254679362174, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3334794525917443, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.3390769233751291, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.34929893689806035, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.35051849093191784, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.35854640391961873, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))", "score": -0.36169837640893454, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.370440936855103, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3761338915906951, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),cast.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3160900902742613, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3202396832175727, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.334336641463707, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.35791052933379025, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3626953071237436, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3774993004980376, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3799469281958147, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.38208909872044483, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3840513392181567, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38524076062883816, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3856320397260031, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3871491255456453, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3875403772096132, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.39197733495846804, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.39236861405563295, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.budget),movie.budget))", "score": -0.17232549264736008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,The Last Legion),movie.budget),movie.budget))", "score": -0.4056779805541737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.revenue),movie.budget))", "score": -0.5102246317983372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,<=,The Last Legion),movie.budget),movie.budget))", "score": -0.5334770733461482, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.vote_count),movie.budget))", "score": -0.5692328724981053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.5831674464904356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,The Last Legion),movie.budget),movie.budget))", "score": -0.5852933589339955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,The Last Legion), movie.id),movie.budget)", "score": -0.5866680843910748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.6039354901783484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.6217856741785635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget),movie.budget))", "score": -0.6235410336657418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6276648576744561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.title),movie.budget))", "score": -0.6366174135328038, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),getData(movie),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.6419585655355435, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget),movie.budget))", "score": -0.6443090773536546, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.2564828964672535, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.26236433311486396, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),oscar.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.28021724165224193, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3090762823908031, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3283137820931939, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3325473756377704, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.34208795918786494, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.35418138896497425, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.person_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3647899835439915, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.36610521400438545, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3661212481504352, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id),person.gender,=,f), genre.name),genre.name))", "score": -0.3692922124593424, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.39026142613808973, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.3947037078392263, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.39806163624389107, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.0314633964046752, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.20862757064123177, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3478550136685315, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(has_keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3681971690707991, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,497), keyword.name),keyword.name))", "score": -0.38741980322571873, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,production_company.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.39166953061637627, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.40567994492717213, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.movie_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.41196766737141455, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), oscar.sub_category),keyword.name))", "score": -0.4123105431743921, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42104906100158623, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42444001566289974, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4281735019605553, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.keyword_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4295105228874387, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.movie_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4312899957052656, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),oscar.sub_category))", "score": -0.44116946060892376, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.07328116269491147, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.32134225603658706, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.41848198910884093, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.4549646319792373, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.birth_place))", "score": -0.5452796852187021, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.5830831482523983, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.5868859888341375, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.gender))", "score": -0.6157322859362466, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6280842191772535, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6383567197056046, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6421596577504618, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6444262616845402, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6681607796781464, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6872709228628082, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.714574355748482, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.048880213505959585, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))", "score": -0.12637686363275458, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,nl), country.name),country.name))", "score": -0.27841661761160597, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,nl), country.name),country.name))", "score": -0.3198826854228213, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33171299435139584, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,nl),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3692317057566612, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), movie.status),country.name))", "score": -0.3864117626334822, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4130155644605306, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.42193403763204884, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),movie.status))", "score": -0.4230332462558451, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4264000265336194, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.birth_place))", "score": -0.43225088266498635, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.43987242913508745, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.4461761322080796, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),production_country.iso_3166_1))", "score": -0.4492350182587201, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3518520520858275, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3543871489950701, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.3706360384087583, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.37317113531800095, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.39561328993621864, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3981483868454613, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.4017650072330533, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.4032002240032065, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.40430010414229595, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.40641903244495925, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.4069658703126819, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.40895416132458046, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.4349609346622986, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),filter(merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),person.death_day,>,40),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),None))", "score": -0.47311207770591257, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),filter(merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),person.death_day,>,40),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),None))", "score": -0.4827442788754661, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.10502007835020777, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.2662855782400584, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.33533463858475443, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.4753169701289153, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.47873882435669657, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.id))", "score": -0.5124894180189585, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.541785924215219, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.vote_average))", "score": -0.5885844030271983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5991111847397406, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6365824700187659, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.title))", "score": -0.6865198411833262, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.original_language))", "score": -0.6925560631643748, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6976231171138352, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.status))", "score": -0.7030514241050696, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.7056315303634619, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.012841115607443498, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.5189221900836856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.6153173487582535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.6607215743460984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.original_language),movie.original_language))", "score": -0.6795764964954287, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.7291078370944888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.7491373758712143, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.765773833514686, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.7949360616221384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,48000000), movie.original_language),movie.original_language))", "score": -0.7975433475985483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,48000000), movie.original_language),movie.original_language))", "score": -0.7976911671175912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.824794293166633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.vote_average),movie.original_language))", "score": -0.8263347189822525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.8352617662349076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.8502179391398386, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.06929192345255246, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,No Language), movie.id),movie.budget)", "score": -0.19922902568973272, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.2499586258545434, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.4496864783545275, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5136927558809993, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5649421451887502, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5842330284045572, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,No Language), movie.id),movie.budget)", "score": -0.634542486167338, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.6400958301016978, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6516626368299527, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.budget),movie.budget)", "score": -0.6793034642924001, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),oscar.number)", "score": -0.6823268880432409, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.vote_count)", "score": -0.6910081117002727, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6981362237555684, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),person.death_day)", "score": -0.7125767698327425, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.08860228652338265, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.12664364719967125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.5094010799584794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6823760408014213, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6880036675595512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7059034248457069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7115310516038369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7253881484604311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7342416768154492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7355023219358924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7368605678794594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.741129939695297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7467782691164757, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7848196297927643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.popularity),movie.revenue))", "score": -0.7930401378471288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.028691176736174384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,5500000), movie.popularity),movie.popularity))", "score": -0.5541669839913084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.id),movie.popularity)", "score": -0.5763444044406967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.popularity),movie.popularity))", "score": -0.6183763115586771, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,5500000), movie.popularity),movie.popularity))", "score": -0.6993234867150022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,5500000), movie.popularity),movie.popularity))", "score": -0.721767243641807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,5500000), movie.popularity),movie.popularity))", "score": -0.7257810204209818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.release_date))", "score": -0.7318068467466219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,5500000), movie.popularity),movie.popularity))", "score": -0.7507789248520567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.status))", "score": -0.7734356247274263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,5500000), movie.popularity),movie.popularity))", "score": -0.8131446211518778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.vote_average),movie.popularity))", "score": -0.8197353065515927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.status),movie.popularity))", "score": -0.8322971046472958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,5500000), movie.popularity),movie.popularity))", "score": -0.8415477245034708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.revenue))", "score": -0.8773807607976778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.02500824543455014, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.2800925812884636, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.35454256196714407, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.36631572903149595, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.3716989414712773, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),company.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.3783363681882445, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),production_company.company_id))", "score": -0.3785873865653046, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.39157918309551926, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40813477335929976, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.4147257934125281, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.42696869081970745, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.id),company.name))", "score": -0.42697931734529454, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.status,=,Rumored), company.name),company.name))", "score": -0.43785053654996553, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.id))", "score": -0.43956382187361404, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4439722835959123, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.10433498483802665, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.1388744585643139, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.1607284959579312, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2388490447934539, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.24826905640976218, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2694569222203103, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.28722374926622635, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2883093462547983, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3189172306272282, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(has_genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.34340932938519836, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3695296243483451, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3717774681651797, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3779677145250654, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3933600284119141, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.42156723978966393, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1347943752938867, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1682536159090935, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.187125186346754, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.19488442416565463, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.23582542799157583, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.26609980432185093, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.28072200339801, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.2840556209958052, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.3171127375140751, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.32886592813850923, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3330752563725846, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.33615940453157717, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3476974554487437, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.3768530384510873, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3896915938671992, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.049272449437602776, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.21868465357357061, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.23602438721304217, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.runtime)", "score": -0.2945064297674714, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.36428120341325987, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3736462348560461, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.release_date),movie.runtime)", "score": -0.3829210435980669, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.name,production_company.company_id), movie.id),movie.runtime)", "score": -0.4060766623343066, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4228264066503214, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.42499967145932144, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.43061538617245776, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4373109866359432, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name), movie.id),movie.runtime)", "score": -0.4402302576782066, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4570134573285844, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.4731585967556353, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.11644425779031886, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.1571456267219663, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.20328934945452104, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.21345627258595656, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.24399071838616845, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.32258150796006596, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.33968887165145945, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<,260095987), genre.name),genre.name))", "score": -0.34886584756005523, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_country.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.35414641396946134, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),language.iso_639_1,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3568375390035005, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_average,>,Italy), genre.name),genre.name))", "score": -0.36878009633662356, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3861591740815331, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<,260095987), genre.name),genre.name))", "score": -0.3895672259057538, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), person.death_place),genre.name))", "score": -0.39334770894660914, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3940794551146398, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.239221257877902, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1), country.name),country.name))", "score": -0.2827602451578336, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.29193261884721045, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.3166743959162346, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3256590651917765, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.33789287579589444, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3525512556710563, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.37463250973427603, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.38102783328451656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.38132810733883477, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.3824094957892772, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<,1934-03-28), country.name),country.name))", "score": -0.38249855111534636, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.3838801874720656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3858201078197267, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.39152642539428545, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.1614595289763592, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2228425672466652, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2336523936689903, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2468121870911907, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2525759778577701, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2531651165010237, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.movie_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2786490070835376, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.runtime,>,2013-05-09), movie.id),movie.popularity)", "score": -0.28863929313099307, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3081952253614967, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3139590161280761, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3145481547713297, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3190050517838218, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.32476883319305294, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3253579718363066, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.338517765258507, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.19245052483893232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.22361497727251844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3486616179070552, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.37335295562661486, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.404517408060201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4093210264763911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.45362185088015394, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>,1984-05-01),movie.revenue), movie.revenue))", "score": -0.5069421017615241, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5124147399983485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,!=,1984-05-01),movie.revenue), movie.revenue))", "score": -0.5156382853238028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5295640486947377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5435791924319346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5644924507432734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5746888087087427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.590223457380489, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.02972378727281466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.runtime),movie.runtime))", "score": -0.43987157434457913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.4479040750884451, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.704253168485593, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.release_date))", "score": -0.7053461190662347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.title))", "score": -0.721502315660473, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.7363425806979649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime)", "score": -0.80749617339754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8222690538386814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.title),movie.runtime))", "score": -0.8540297278086655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8570878234604606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8962063738727011, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.vote_average),movie.runtime))", "score": -0.9187166818301193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.id))", "score": -0.9258343693218194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,<,2012-04-19),movie.runtime), movie.runtime))", "score": -0.9282343346130801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.10991480678057997, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.28922189390356084, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.2981109599911332, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.314170492424711, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.333839158141901, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.334498778093956, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.34272822422947335, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3641066955756892, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.36421763232516025, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3731066984127326, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.38443498124493425, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3911436666931199, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4088349055622258, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4114719796354249, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.41772397164979813, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.02610099496996554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.3137094396606699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.3771266359344736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7240318972126261, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_average))", "score": -0.7361145407867298, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_average),movie.vote_count))", "score": -0.7595999290442705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.title))", "score": -0.7697864563178882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7772881108776346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.title),movie.vote_count))", "score": -0.7930777718520403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7935555856183782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.795879511113526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8129889051870123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8405303675190225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8498578946546331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.9128832499936834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.09214502924742263, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.18772448180347812, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.26556977914787855, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2865424604004459, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2908524130193322, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.305154962733584, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3051994457393637, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.32133592567624997, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3443553572830964, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3454980896899849, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.3695585938378971, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.37462722323622805, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3821219129565014, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.39023713919970027, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),crew.movie_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.41445967279586476, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.03888398852723185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.4120832176558906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.48346956809163705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.id),movie.original_language)", "score": -0.5652945855355955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6330823305906961, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6422050984256202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.651310542380088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), language.name),movie.original_language))", "score": -0.6946012817934388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.revenue)", "score": -0.7356994367898332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7674747113051126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.7788910457462236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.8054832013003761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.vote_average),movie.original_language))", "score": -0.8120896214531967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.id),movie.revenue)", "score": -0.8175244542337916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.title))", "score": -0.8213964440074051, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.02723477534891572, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.name),person.birth_day))", "score": -0.4843088787602028, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.gender),person.birth_day))", "score": -0.5717485350178322, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.5753186502115568, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.name))", "score": -0.5875710820400855, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.5976005353586515, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.death_day))", "score": -0.6104068135464331, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6173792042391142, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_place))", "score": -0.6205455636227271, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_place),person.birth_day))", "score": -0.6326673430012306, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.gender))", "score": -0.639248607083573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6601624049799284, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),crew.person_id))", "score": -0.6616598343098303, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.id))", "score": -0.7430729245388648, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.death_day),person.birth_day))", "score": -0.7643652957485756, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.13380857342042213, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.155079181246286, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.15539668821039232, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.15904648834773658, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.24827282992250282, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2591452957491552, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2749123463767662, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.29870354863958837, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.30620388244030927, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3183558318619202, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.343395250260147, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.category,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34764493145878966, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.35767636727372015, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.year,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.36579973975699626, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,), movie.title),movie.title)", "score": -0.41434765141116175, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))", "score": -0.03590064553281991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,32.8412), movie.status),movie.status))", "score": -0.3768846770908567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.title),movie.status))", "score": -0.41856849157920806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.title))", "score": -0.48964309796429006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), country.name),movie.status))", "score": -0.6210522946130368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.popularity))", "score": -0.6327055107030901, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.vote_average),movie.status))", "score": -0.6436821516763302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,32.8412), movie.status),movie.status))", "score": -0.650602318921301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.original_language),movie.status))", "score": -0.6511939462434384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.sub_category),movie.status))", "score": -0.6748056110154721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,32.8412), movie.status),movie.status))", "score": -0.6770803114559385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.popularity),movie.status))", "score": -0.6886483129273984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.category),movie.status))", "score": -0.7096191343080136, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.release_date))", "score": -0.7107920061025652, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,32.8412), movie.status),movie.status))", "score": -0.738113202729437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.1590736246985102, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.16879269112932, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.21325334155969872, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.21789080892840643, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.24603678906247753, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.2785781154669547, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2908395832062606, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.homepage,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.29955071265131245, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.3066800993011009, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3207556923576121, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.33335590146147476, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.34576343484128674, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3740538138442596, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,>,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3855191568641691, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),oscar.sub_category,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.38674559805303227, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.16985739540715186, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.20558735675432757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.20653599658669938, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.20946219380112996, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.2899744872813324, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.3150550549434574, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.31597889757774344, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.317981252157888, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3228363228193886, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3257044486285081, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),movie.revenue))", "score": -0.3346893187460276, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.35170885892491915, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.35856628416656433, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),movie.revenue))", "score": -0.3704192800932033, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3759463962835912, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.028436998730106022, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,7.2), movie.id),movie.runtime)", "score": -0.486680253457403, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,7.2), movie.id),movie.runtime)", "score": -0.5099600308737255, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,7.2), movie.id),movie.runtime)", "score": -0.6505456692187059, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.6836295226820682, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.6943441022275529, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,7.2), movie.id),movie.runtime)", "score": -0.7091655928007461, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.7307225952224284, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,7.2), movie.id),movie.runtime)", "score": -0.7337361227200679, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.7459793170706626, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,7.2), movie.id),movie.runtime)", "score": -0.7984822001451369, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.8059495712319437, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,7.2), movie.id),movie.runtime)", "score": -0.833249192729706, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,7.2),movie.runtime)", "score": -0.895560664849423, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,7.2),movie.runtime)", "score": -0.9582105455216197, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.04400641919346526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.2450377538916655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.3855237816271287, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.3972530603083254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.40833047021504115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.42005974889623793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.46923935472227624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.48096863340347296, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.4920460433101887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.5037753219913854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.530695978630202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.532338990830684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5424252722631271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5440682844636091, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.5535026821698429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.028908210311783478, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.vote_average))", "score": -0.4219500128820073, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.vote_average))", "score": -0.4698535506322514, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.title),movie.vote_average))", "score": -0.5864398483827244, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.6551701430871617, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.vote_average))", "score": -0.6624578837945592, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.runtime))", "score": -0.7218166753591504, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),movie.status,movie.id),movie.id,production_country.movie_id),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7246277714376941, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.vote_average))", "score": -0.7551738624169957, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7600698697788175, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_count))", "score": -0.8110315367521252, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.status))", "score": -0.8225052520574536, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.popularity))", "score": -0.8293871447385754, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8424697745067533, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.original_language),movie.vote_average))", "score": -0.8490626220300328, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.04730806603883304, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.19508465931095145, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.30117768215948193, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,<,1962-03-17), movie.id),movie.runtime)", "score": -0.30207972315439635, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,person.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.316883200574543, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,<,1962-03-17), movie.id),movie.runtime)", "score": -0.32371966499841226, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.35005581531903096, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39852860762056186, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39871389289689774, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.runtime),movie.runtime)", "score": -0.4028389789121888, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,person.birth_day),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4290414703113252, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.movie_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.44051491760020145, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,>,1962-03-17), movie.id),movie.runtime)", "score": -0.4438768238925916, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.4535926050414289, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,<,1962-03-17), movie.id),movie.runtime)", "score": -0.45382616707562456, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.11837558297851634, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.15373095173851967, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.26121891883699927, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.sub_category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.27923364840560244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.28699996569264236, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.29417256007712805, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.33555285292053344, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),country.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.346416672142357, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36054472682442057, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.36603783103354925, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3663993449965458, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),country.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.36832369223995326, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),company.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3687303155673314, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3718528981416636, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),crew.movie_id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.41105291942444455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.02281871227751253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7252911000250606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7347536382658291, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.release_date))", "score": -0.7360679781922954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7766308322825353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7874673739352147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),person.birth_day))", "score": -0.7975999391564983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), person.birth_day),movie.runtime))", "score": -0.8315952549965004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1965-03-02),movie.runtime), movie.runtime))", "score": -0.8392293859506026, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.id),movie.runtime)", "score": -0.8406322994319887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.844447928124282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.year),movie.runtime))", "score": -0.8529364000351052, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8710490042503807, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.status))", "score": -0.8792583621034282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.popularity),movie.runtime))", "score": -0.9108957181961159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.number))", "score": -0.11688434019735394, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.number))", "score": -0.14111348527226555, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.number))", "score": -0.1872736925621916, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.number))", "score": -0.20401965930646584, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.sub_category),oscar.number))", "score": -0.22824880438137746, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.number),oscar.number))", "score": -0.2744090116713035, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.category))", "score": -0.28502880898065064, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.category))", "score": -0.3092579540555623, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), movie.title),oscar.number))", "score": -0.3396516424530522, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.sub_category))", "score": -0.3481602778724478, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.category))", "score": -0.3554181613454883, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.id),oscar.number))", "score": -0.35763197515696366, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), company.name),oscar.number))", "score": -0.366043821947413, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.category))", "score": -0.37216412808976257, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.sub_category))", "score": -0.3723894229473594, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.39040101660066284, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1957-04-28), person.name),person.name))", "score": -0.394870682808687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.4153582517465111, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.42766151917749085, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.4389761496859137, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1957-04-28), person.name),person.name))", "score": -0.4634978167741792, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.4660740558465477, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.49859479707083665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.504053946264321, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.name),person.name))", "score": -0.5367914430826204, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.5420251552422997, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1957-04-28),person.name), person.name))", "score": -0.5424639840202872, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1957-04-28), person.name),person.name))", "score": -0.5493421554128872, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))", "score": -0.5602835416357266, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1957-04-28),person.name), person.name))", "score": -0.5664867189188953, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.036330391326396344, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.25881808066158724, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.2840630013994562, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.31569005925157834, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3616998017616094, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.3935020254794847, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(genre),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.39566587456046515, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.budget),person.death_place))", "score": -0.3995625731631762, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,has_genre.movie_id), person.death_place),person.death_place))", "score": -0.4037794226723224, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4372105375831415, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4396404193053079, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),has_genre.genre_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.44919223016530435, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.4543856050171672, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.revenue),person.death_place))", "score": -0.4584526952464886, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.46013219694866764, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),person.name))", "score": -0.49079082396201557, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_count))", "score": -0.5193640389697975, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.original_language))", "score": -0.5229600467937416, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), keyword.name),person.name))", "score": -0.5509782680528588, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_average))", "score": -0.5548805543439812, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5583833400812854, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5699999513980459, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.571349159921708, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr),language.name), language.name))", "score": -0.578265442750095, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5829634321236359, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.5829657712384685, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),language.name))", "score": -0.5945800434403965, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.5959292519640585, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr),language.name), language.name))", "score": -0.5979042300210181, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5985492732233572, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.15759851594262544, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.1581553927177017, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.1786425274099238, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.2048415417035325, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2997999759816535, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.30035685275672974, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.30392982036482263, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.30653737417775384, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.31586460673650457, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3208439874489519, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3232275306168162, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3234921178605566, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.32583508031818526, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.34278982400098806, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.34704300174256053, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.16658296631053893, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2242033411073003, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.24055733112651823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2596284124695108, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2981777059232796, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2997182256873401, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3113042197072007, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,<,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3208874866743089, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32559253726928405, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32597100448222277, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32598359746082745, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),person.gender,<,f), person.birth_day),person.birth_day))", "score": -0.342198638758999, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.34721274586280443, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.gender,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3480104993803366, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3784625156616364, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.03373464924516156, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.death_place),person.birth_place))", "score": -0.47752091923030093, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.death_place))", "score": -0.5028259659302421, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5118349583935924, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5731263936613686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.name),person.birth_place))", "score": -0.6224448446300812, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.gender),person.birth_place))", "score": -0.6255867842701264, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.6631626391899772, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.6646525653195567, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.6889593506348319, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),company.name))", "score": -0.704015901137609, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,>,1942-11-12),person.birth_place), person.birth_place))", "score": -0.7108580317508313, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),country.name))", "score": -0.7135006094467826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_day))", "score": -0.717350235034246, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1942-11-12), person.birth_place),person.birth_place))", "score": -0.7193050773930736, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.20347037634586515, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2567209860937696, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.26755268671680316, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2801192888201618, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2842245026191837, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.29095098944319536, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.30933606460149865, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3195095426124679, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3201677652245322, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.32218566606181465, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.32578032303100407, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.33006353030946867, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.33034117534074325, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3373947890618427, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.title,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3382731098068202, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.revenue),movie.revenue))", "score": -0.08775421157042729, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.3205784756646608, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))", "score": -0.37559629901807057, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.42921576157534846, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.revenue,<=,1910),movie.revenue),movie.revenue))", "score": -0.48371585197310196, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.5239360399292251, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,1910),movie.revenue),movie.revenue))", "score": -0.5446697265797411, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.popularity),movie.revenue))", "score": -0.5496480606452678, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5692000521827549, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_count),movie.revenue))", "score": -0.5693563364402507, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.revenue))", "score": -0.5747172436107755, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.revenue))", "score": -0.5949394534127085, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,<=,1910),movie.revenue),movie.revenue))", "score": -0.6042779583440279, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.6084205631123041, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.revenue),movie.revenue))", "score": -0.6123009414368425, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.2922837900675137, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3114900938079768, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.31223557446677175, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3377985617279383, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.3420651312464748, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(has_genre),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3484302392268008, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),keyword.id,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.36457470612331416, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),language.iso_639_1,production_company.company_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3664910147561661, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3830341863112284, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.38622721531396387, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.3875798953827352, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),language.iso_639_1,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3939955380775356, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),keyword.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.4055437385919588, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.40557400808908567, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.4119289810711637, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.10132758373219986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_average))", "score": -0.3116604542155983, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_count))", "score": -0.38738723153073806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.year))", "score": -0.3969023382087471, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_day))", "score": -0.41836644762952346, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.revenue))", "score": -0.4185126280208351, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.number))", "score": -0.47102724069554824, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),language.name))", "score": -0.5025241231342079, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1993-12-17), person.name),person.name))", "score": -0.5743493452464463, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_place))", "score": -0.597956136407447, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), movie.vote_average),person.name))", "score": -0.6404922079091193, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),keyword.name))", "score": -0.6468225275893928, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.runtime))", "score": -0.6572816526313545, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1993-12-17), person.name),person.name))", "score": -0.6642176355962874, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.tagline))", "score": -0.6668508207221748, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.0642861798461046, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.19407727548634884, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.budget),movie.budget)", "score": -0.20005733371228943, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.2800915751504425, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.321992844792956, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.budget)", "score": -0.35695674333920396, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.37645879539160676, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4075647703896958, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist),movie.budget,=,crime novelist), movie.id),movie.budget)", "score": -0.408594161855121, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.budget)", "score": -0.4373117111591992, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.4474462138346774, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.name,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4532353801268442, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.46295181019360204, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.47396892782413635, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.47397908097227737, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.03945197800573332, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22481178499875523, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,187),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.27729982827752864, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3009493714552611, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.35308014844459185, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3579730103793621, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3634876508028514, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3713412354984696, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37560173976264916, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<=,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3790744497130585, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), person.death_place),genre.name))", "score": -0.38701342504438646, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.3925538239731877, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4019298047230556, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(person),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41365616103357283, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41885966533527663, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)", "score": -0.030187149524840532, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1983-07-29), movie.id),movie.budget)", "score": -0.5759200989290844, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(filter(getData(movie),movie.release_date,<,1983-07-29),movie.budget)", "score": -0.577341192423629, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.revenue)", "score": -0.588393444833695, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.budget),movie.budget)", "score": -0.5904966187398552, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,1983-07-29), movie.id),movie.budget)", "score": -0.6277524578141862, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.vote_count)", "score": -0.7773573715994818, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.release_date)", "score": -0.815621439269215, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1983-07-29), movie.id),movie.budget)", "score": -0.8435285271851695, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1983-07-29), movie.id),movie.budget)", "score": -0.8531022772535661, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.release_date),movie.budget)", "score": -0.8601828131906674, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),person.death_day)", "score": -0.8646236768994371, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.runtime)", "score": -0.8768522305783706, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,<,1983-07-29), movie.id),movie.budget)", "score": -0.8962000353746242, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),oscar_nominee.movie_id)", "score": -0.9177714997667299, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.07221487194328802, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_place),person.birth_day))", "score": -0.29961238086252706, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.name),person.birth_day))", "score": -0.3159266489747097, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.gender),person.birth_day))", "score": -0.5128745216134121, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5270747796821524, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_place))", "score": -0.5516672929006745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), oscar.year),person.birth_day))", "score": -0.5839083570244838, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.6006741182136466, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.name))", "score": -0.6260714729505708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.status),person.birth_day))", "score": -0.629196919799142, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.6331289068984916, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.death_day))", "score": -0.6418799360471894, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.runtime),person.birth_day))", "score": -0.650433458686166, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), crew.person_id),person.birth_day))", "score": -0.6698406714203884, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.gender))", "score": -0.6812000473219086, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.08588607121419045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.18193693343710038, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.4092118013472028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.4177333142251882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),country.name))", "score": -0.5020401466281328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5137841764480982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.5181243903012284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.5491869824756803, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),genre.name))", "score": -0.5609502482802782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5939005276771948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.5943640965924715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),keyword.name))", "score": -0.5991531300933275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.619990867744491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), keyword.name),movie.original_language))", "score": -0.6274715091676626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.6580995714297059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.17048196657801507, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.22108597880221106, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.24565412020254565, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.26219869671950474, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2740923286408167, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2804858898807166, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.29047181597101857, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3067549901453005, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.number,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3290450289800067, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33131540748002236, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3373708503440353, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.33995168645568374, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.36580905878230635, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3661548920791248, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.oscar_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.36633312699322496, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))", "score": -0.024341283198737074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,105000000), movie.original_language),movie.original_language))", "score": -0.45353071142017143, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,105000000), movie.original_language),movie.original_language))", "score": -0.5852468733864953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), language.name),movie.original_language))", "score": -0.6521662537197699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.vote_average),movie.original_language))", "score": -0.7612617675404181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language)", "score": -0.761288187727921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name))", "score": -0.7799228567819227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,105000000), movie.original_language),movie.original_language))", "score": -0.7826850746714626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,105000000), movie.original_language),movie.original_language))", "score": -0.78788438783522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,105000000), movie.original_language),movie.original_language))", "score": -0.8058610682564904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,105000000), movie.original_language),movie.original_language))", "score": -0.8132299517237698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.title))", "score": -0.8185526866654982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,105000000), movie.original_language),movie.original_language))", "score": -0.8212033634263207, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,105000000), movie.original_language),movie.original_language))", "score": -0.8288420621611294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.title),movie.original_language))", "score": -0.8366992983574164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.07651987822332908, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.16665522164091867, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.16701120202809688, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2038700458844067, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.21765443583192126, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3051349183584457, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.movie_id),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3765759132996656, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3807261613318021, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.38357403214573466, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.birth_place,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.40070870711144213, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.gender,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.42974651408429165, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.43100184177434764, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4355343663320797, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4460125940323547, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.45442189083711887, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.19848117677975097, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.2324493348460237, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.27612982018399634, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.3100979782502691, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.3748514026265184, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.45250004603076377, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5235088605295459, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5574770185958187, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6011575039337913, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6136814791570941, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6274712055783311, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.death_day))", "score": -0.635125662000064, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6476496372233669, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6586581943884084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6608315080266038, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1581275228025086, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.19974869991051125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.20361373276002043, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.24523490986802307, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.26900281087965244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28081410477466673, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2831528251818701, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),language.iso_639_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.31310083592657595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3204089681394024, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3286390351393819, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33833878629502423, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.34876239352762634, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3501500707759873, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id), country.name),country.name))", "score": -0.35684852328466377, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.36203014884689516, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.17180914954951731, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.26837391184380976, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.31805557535699336, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.33429046125820605, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.4308552235524985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.name))", "score": -0.4517394542854163, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.4805368870656821, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_place))", "score": -0.4830278955560061, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.name))", "score": -0.4951015055339667, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_place))", "score": -0.5250663362603518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.death_day))", "score": -0.5483042165797087, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.birth_place),person.name))", "score": -0.5910507977168891, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.death_day))", "score": -0.5916662678282592, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.birth_day))", "score": -0.5979858800928923, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1963-11-10), person.death_place),person.name))", "score": -0.6039878675874206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.27616960376235067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.31023170918014653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3247002566321272, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3297600101029463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3372208347324485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.36617916859880634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3771694473064967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3783932908510406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.38080789529867765, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3834530077731904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.38586761775850464, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_average,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.38723006907161756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3901978165948662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),getData(movie),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.43060833523099495, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.43569175043651864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.06428148464267856, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.11593413721868653, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.325397351561692, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3514622915017107, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.35479300753723814, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.36229324556773873, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.36911260116281486, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3924532711007965, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41224422589159543, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41731957670150066, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4223559669161347, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),movie.title,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.43461968111509985, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4376530240382862, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.43879117120277417, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.44063979303585493, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.03412161430052971, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.25179146803694075, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.2551775090156415, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.29296528959574863, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.35029920110114965, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.368432286476275, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3784529793835455, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.38903331243660855, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.39247562697695654, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),person.death_place))", "score": -0.39395786919567366, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), person.death_place),genre.name))", "score": -0.40351291447445764, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.4185870595297064, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.43103156184521085, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,has_genre.movie_id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.43287674561413864, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2005-01-13), genre.name),genre.name))", "score": -0.434279571762424, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.1178228438816749, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.16986080816185706, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2270299353673781, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.24988771013463143, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.261981743427499, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.28211298636048454, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.29126298558078767, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.30192567441481355, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3131091131185856, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3140197077076812, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.3341509506406667, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,=,War), company.name),company.name))", "score": -0.35279189278868917, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.35909480162033464, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),movie.title,=,War), company.name),company.name))", "score": -0.36484431819044383, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3711888349132022, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.13935692334609043, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.21221097620122967, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.21277992035416668, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.24789313188901443, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.28678552820497816, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3207471847441537, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.vote_average,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.34224128214486005, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3501646122230113, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3503449090972839, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),spoken_language.iso_639_1,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.35346692459380746, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.3572960388405817, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.revenue,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.36926555426102636, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.37181661700710594, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),person.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.38321999968408704, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.38820400617630846, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.24667489914380736, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.27752340392115693, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2861507736642277, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2918121170496851, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29414473791548484, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.birth_place),person.birth_place))", "score": -0.2975873451282314, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3074070310796661, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.31208347985382007, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3168413671513793, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_country),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3190995389672496, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),has_keyword.keyword_id,person.id), person.birth_place),person.birth_place))", "score": -0.34130016706342026, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.34283792202967434, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3565798330706017, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3614870846088514, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.death_place),person.birth_place))", "score": -0.37445178532654205, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.16967979216541973, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19191600011646465, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.22317182973095612, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.26887765528097807, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.27469520826635957, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.34225380356606067, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.35260599343753635, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.3559370528771097, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.36135344891886384, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.3613750813282629, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.37484220138858126, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.category),oscar.number)", "score": -0.3781732608281546, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3829722826349063, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.birth_place),oscar.number)", "score": -0.38909447701549166, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.39624906406203325, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.0454513506323809, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.23641044963183222, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2616910441681689, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2624185209979723, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.keyword_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2996784111158564, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3116205272041361, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3214769280663079, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.32921019583985717, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3548119255471093, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(has_keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.38362873523511815, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),oscar.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.4029880785798662, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.415322208110729, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),oscar.sub_category,=,brain scan), movie.title),movie.title))", "score": -0.4155256964090142, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.42155279513823724, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,=,brain scan), movie.title),movie.title))", "score": -0.424538908358241, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2425143473917398, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.24454631470034044, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.26195970441180605, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.26350228850002466, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2638523510702911, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2747642956671288, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.28294764552009094, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.284063645556773, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.29225870769169116, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,??????),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30319135434887423, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3046199023434814, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3137582077504299, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.32736278757595916, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.33383254786642713, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3339695113740791, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_count))", "score": -0.26449931722163456, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_count))", "score": -0.39444441657542484, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.release_date),movie.vote_count))", "score": -0.42581451993464725, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.budget),movie.vote_count))", "score": -0.4295660958814551, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_average))", "score": -0.44070685964106815, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_average),movie.vote_count))", "score": -0.4786796079206397, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_count),movie.vote_count))", "score": -0.5017681823301245, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.title), movie.id))", "score": -0.5320780931288027, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.original_language),movie.vote_count))", "score": -0.5376204059648444, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.title))", "score": -0.5531733141469886, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.id),movie.vote_count))", "score": -0.553830663971894, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_average))", "score": -0.5706519589948584, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.vote_average), movie.id))", "score": -0.5776133446270251, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.release_date), movie.id))", "score": -0.5842263011509203, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.runtime), movie.id))", "score": -0.5847366659218096, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)", "score": -0.030703703750276177, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,136),movie.budget)", "score": -0.42460135301387825, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.budget),movie.budget)", "score": -0.7012733348009048, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.release_date),movie.budget)", "score": -0.7275399480426779, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,136), movie.id),movie.budget)", "score": -0.7555613468332483, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,136), movie.id),movie.budget)", "score": -0.7933726001070573, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,136), movie.id),movie.budget)", "score": -0.8832943571684659, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.revenue)", "score": -0.9201417188152945, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.release_date)", "score": -0.9503386459019892, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,136), movie.id),movie.budget)", "score": -0.9798471114716545, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.title),movie.budget)", "score": -0.9892616640303343, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,136), movie.id),movie.budget)", "score": -0.9949437607545042, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),oscar.number)", "score": -1.0071150523252368, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,136), movie.id),movie.budget)", "score": -1.0090735968742408, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,136),movie.budget)", "score": -1.0100990791048474, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.1648117582226405, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.24880128902441356, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), person.death_place),genre.name))", "score": -0.2687471116805682, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), person.death_place),genre.name))", "score": -0.35273664248234127, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.37022304567285946, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.4114615748549113, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.41619411249183397, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.42161065185689, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,1994-04-10), genre.name),genre.name))", "score": -0.44520141793888357, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,!=,1994-04-10), genre.name),genre.name))", "score": -0.49117248918799983, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1994-04-10), genre.name),genre.name))", "score": -0.496589002006816, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,1994-04-10), genre.name),genre.name))", "score": -0.5069845956578508, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), person.death_place),genre.name))", "score": -0.515396928312839, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1994-04-10), genre.name),genre.name))", "score": -0.5195119594136486, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.5371513091772347, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.10413827466254588, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.445972596280626, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.45516173633222934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.name),person.death_day))", "score": -0.4731958182383096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4784802412468707, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.name))", "score": -0.48594204055552837, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5440815305191791, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.name), person.death_day))", "score": -0.5462714197346941, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.5558079155016458, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.5837919997284189, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6100137745816028, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6228572642285144, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.6350092040229356, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6478907028067624, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.653781925313524, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.2199776475681574, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.2353374814047129, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.title))", "score": -0.24506656875746557, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.title))", "score": -0.36764697780745337, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.title))", "score": -0.4224448656095774, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.budget),movie.title))", "score": -0.44279311647551367, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.release_date))", "score": -0.45200559547083685, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.release_date))", "score": -0.46736542930739233, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.budget)", "score": -0.4727547280817627, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.release_date))", "score": -0.477094516660145, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.status),movie.title))", "score": -0.5174688552870066, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.vote_average),movie.title))", "score": -0.5504745697035105, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.5863728761105449, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.release_date))", "score": -0.5996749257101328, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.6017327099471004, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.15407947669128058, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.1703610183118951, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,genre.id), genre.name),genre.name))", "score": -0.18771243364390577, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.20038532747213442, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.20716038585707566, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.2142902283073271, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22610981491492482, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24199577401670416, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24784786987942722, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.25188242673175126, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.255243728524516, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.25939774977895724, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.26610606351056415, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.2769977396446528, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.29158591831892255, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.13504991680383682, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_day))", "score": -0.3763478174805641, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.name))", "score": -0.4204102586954832, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.death_day))", "score": -0.43581733852624893, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.45510938577353954, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.4905777256935835, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.5152393262833357, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.5409247558563948, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_place))", "score": -0.5445242300629616, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_place),person.name))", "score": -0.5865961741656065, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),oscar.year))", "score": -0.6169197335839272, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.630612863227725, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,Christopher J. Wood), person.name),person.name))", "score": -0.6462436597794294, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.birth_day))", "score": -0.6617081593722105, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), oscar.year),person.name))", "score": -0.6698620449751616, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.14505569042233712, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.15433425996766997, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.20852552396036167, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.21780409350569455, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.2501336527533352, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.2539555340291958, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3065092688906149, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.3103311501664755, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.year)", "score": -0.3295633713688574, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.number)", "score": -0.35596469039652584, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.35761580590560577, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.year)", "score": -0.3668943754509386, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3776872109138078, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.38696578045914065, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3927604178658698, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.1939530216586718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count))", "score": -0.22255710442186682, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.title))", "score": -0.30187445063711493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_average))", "score": -0.3141469799411425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_count))", "score": -0.34275106270433753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.runtime))", "score": -0.3708651431334147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_average))", "score": -0.3824295692575106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.41103365202070563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.title))", "score": -0.42206840891958564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.title))", "score": -0.49035099823595374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.runtime))", "score": -0.4910591014158854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_average))", "score": -0.5512060814035067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.runtime))", "score": -0.5593416907322535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_count))", "score": -0.5798101641667017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.original_language))", "score": -0.6482229002249369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.27636486641151325, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.28080017233545856, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3052545595284239, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3090284132221545, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.30968986545236915, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.31346371914609983, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3154307721150128, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3165124312218565, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3198660780389581, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3382049322574381, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.36460773106300515, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.popularity),movie.popularity)", "score": -0.36876548060037007, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3904775049339315, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3926224868097, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.39757479765502973, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.009214465513650794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.6049235004538787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.budget),movie.budget))", "score": -0.645941152011801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.release_date))", "score": -0.6671012311780942, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.budget),movie.budget))", "score": -0.6830888527983916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,6.4), movie.budget),movie.budget))", "score": -0.7130198224986088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.title))", "score": -0.7373473316038144, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.title),movie.budget))", "score": -0.805407220213965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.release_date),movie.budget))", "score": -0.8247960151129519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.833214601589134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.original_language))", "score": -0.8338811069334042, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.revenue))", "score": -0.8589359193647397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), person.death_place),movie.budget))", "score": -0.8948374331885134, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,6.4), movie.budget),movie.budget))", "score": -0.9067740782702458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.id))", "score": -0.9214850335920346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))", "score": -0.029409067075903295, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,6), movie.vote_count),movie.vote_count))", "score": -0.3049945918137382, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6), movie.vote_count),movie.vote_count))", "score": -0.5329452770056378, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6), movie.vote_count),movie.vote_count))", "score": -0.5363327281775128, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6), movie.vote_count),movie.vote_count))", "score": -0.616576375276054, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,6), movie.vote_count),movie.vote_count))", "score": -0.7099324551636528, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.budget),movie.vote_count))", "score": -0.7758815027300443, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.title),movie.vote_count))", "score": -0.7783006764475431, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.budget))", "score": -0.7808713733211334, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.title))", "score": -0.7857228933826264, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,6), movie.vote_count),movie.vote_count))", "score": -0.7859440532738518, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_average),movie.vote_count))", "score": -0.8040879703585233, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,6), movie.vote_count),movie.vote_count))", "score": -0.8085308017434727, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,6), movie.vote_count),movie.vote_count))", "score": -0.8119182529153477, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_average))", "score": -0.8225043236270722, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.0757494200340513, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.17975789808802936, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.18111462770094258, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.2354487229309595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), person.birth_place),company.name))", "score": -0.2649327953096396, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.31178382343521177, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),country.name))", "score": -0.3269170440507747, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), person.birth_place),company.name))", "score": -0.3371083231647867, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), person.birth_place),company.name))", "score": -0.3488993014162334, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),person.birth_place))", "score": -0.36087967406925037, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.3946982833772796, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),genre.name))", "score": -0.4082419709047523, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.41203309265408444, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4183250032608686, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.215464),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4212978758342133, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)", "score": -0.039758869150062756, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.3757394031733027, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.popularity)", "score": -0.4586517960824944, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,Post Production), movie.id),movie.popularity)", "score": -0.6015762351713859, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.id),movie.popularity)", "score": -0.6341313778375919, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.id),movie.popularity)", "score": -0.6717338034720537, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity)", "score": -0.6803944827737408, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity))", "score": -0.6995726296700013, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Post Production),movie.popularity)", "score": -0.7481714102903236, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,>=,Post Production),movie.popularity)", "score": -0.7577307463273852, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Post Production), movie.id),movie.popularity)", "score": -0.7984318720344371, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.id),movie.popularity)", "score": -0.8162237616882743, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Post Production), movie.id),movie.popularity)", "score": -0.8268806755544769, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,null,Post Production), movie.id),movie.popularity)", "score": -0.8673857303030166, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.revenue)", "score": -0.8682489104944969, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.name))", "score": -0.1846523745698505, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.name))", "score": -0.19026129152916837, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.id))", "score": -0.4533753341092961, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,2014-01-01), person.name),person.name))", "score": -0.5624132151497179, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.birth_day))", "score": -0.5651816040990525, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,2014-01-01),person.name), person.name))", "score": -0.5691891249298351, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.gender))", "score": -0.5729041045560734, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.birth_day))", "score": -0.5763626640691655, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,2014-01-01), person.name),person.name))", "score": -0.602725713957625, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.gender))", "score": -0.6697919876096421, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,2014-01-01),person.name), person.name))", "score": -0.6725697454094188, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.birth_day), person.name))", "score": -0.6780111046537058, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), oscar_winner.person_id))", "score": -0.6858498400106328, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.death_day))", "score": -0.70792805608653, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,>,2014-01-01),person.name), person.name))", "score": -0.7152525942801731, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.01441328102373518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6066926259681383, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6193222556432193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.title))", "score": -0.6493167913577054, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.06387), movie.release_date),movie.release_date))", "score": -0.6500144398596603, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.06387), movie.release_date),movie.release_date))", "score": -0.6708845293906052, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.title),movie.release_date))", "score": -0.6762514036672655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.budget),movie.release_date))", "score": -0.6933064979093615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7186350809934083, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.budget))", "score": -0.7398729956767056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7664030181767885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7971042978169862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7980585085751954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,6.06387), movie.release_date),movie.release_date))", "score": -0.7993193662550766, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.id),movie.release_date))", "score": -0.7998741787450854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.09411161889752248, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.18936060763589482, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2653125543570819, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.27862633123572433, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.29430755268962516, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.30020111650443576, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3121139854784604, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.31332838738761565, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.31535026863131516, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3329558645067063, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33773332203291917, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.338406765492902, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33935887648727336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.vote_count))", "score": -0.34960168069823017, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.37061432320560594, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.10344762525528495, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.29627042178379154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.budget),movie.budget))", "score": -0.5249779460300488, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.budget),movie.budget))", "score": -0.6623237368930859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.6947220488423055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget)", "score": -0.7123718371925584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,0.5), movie.budget),movie.budget))", "score": -0.7500005156780389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,0.5), movie.budget),movie.budget))", "score": -0.7825644252170605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.8176046383887297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.id),movie.budget)", "score": -0.833453635113229, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.release_date))", "score": -0.8577364525572193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.title))", "score": -0.8969507655874622, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.id),movie.budget)", "score": -0.8997509052637666, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.release_date),movie.budget))", "score": -0.8998580744537321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.title),movie.budget))", "score": -0.9315904394770769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2476215678238087, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.26434942857883903, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2797603012309979, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.title,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29053674059911255, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2922957549532168, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29648816198602823, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30856819713856953, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3140889334370771, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.title,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3226754742831856, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32443448863728985, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.40030001975875235, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.406466458074455, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4112627800894923, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4174292184051949, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.44077220666032013, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.07518331116208626, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.19629044778711924, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2530980931481713, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.27235647245539407, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.2976259083948737, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.30769965929480125, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3079039645712935, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.31815142175879535, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3339573777728975, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3367848736446906, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.34466263694632693, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34868473463678645, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3514696280506485, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(has_keyword),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.37349311660889445, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3742584291301495, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.07358404908882221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.2583745448719128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,140), movie.id),movie.vote_count)", "score": -0.42840430214330094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,140), movie.vote_count),movie.vote_count))", "score": -0.5256877272258862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.548943641675578, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.635166846133783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.6415702287777094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.6469327240120037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,140), movie.vote_count),movie.vote_count))", "score": -0.6471384792457684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,140), movie.vote_count),movie.vote_count))", "score": -0.6806733586927294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.7158329068498459, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar_winner.movie_id,=,140), movie.vote_count),movie.vote_count))", "score": -0.7197164921890362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,140), movie.id),movie.vote_count)", "score": -0.7464019349896439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count)", "score": -0.7505630206193392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,140), movie.vote_count),movie.vote_count))", "score": -0.7638095746151521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.budget))", "score": -0.060540381440659985, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.29433382078423165, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5712657872863989, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.575155203635981, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),genre.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5837237356790798, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6199891859775318, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.625028029179393, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.636708797808664, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.6405982141582461, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.revenue),movie.budget))", "score": -0.6491197215800639, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.revenue))", "score": -0.6645918352005538, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.vote_count),movie.budget))", "score": -0.6929603087191936, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), person.death_day),movie.budget))", "score": -0.7017592655902263, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.vote_count))", "score": -0.7034874421951827, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.release_date))", "score": -0.7299379569885787, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.08717833757638693, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.2841149470374238, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.29722688575977435, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Austria),movie.budget),movie.status))", "score": -0.305779146913314, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),person.birth_place,=,Austria),movie.budget),movie.status))", "score": -0.3337204052055545, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.35076158600226776, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,Austria),movie.budget),movie.status))", "score": -0.3515944188040109, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,Austria),movie.budget),movie.status))", "score": -0.362137283513754, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.release_date),movie.status))", "score": -0.37678815898408025, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.39856723355798057, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.42299805841841004, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.iso_3166_1,=,Austria),movie.budget),movie.status))", "score": -0.4233559058100706, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.title),movie.status))", "score": -0.4242251864202685, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),oscar.category,=,Austria),movie.budget),movie.status))", "score": -0.42490008500964066, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.4327973993573759, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.2567729043634027, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.25854810645538245, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.2919308635311767, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2932864514589276, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.3070023430255242, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.308777545117504, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.33164432414782025, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.33341952623980003, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.3364369245669219, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.33821212665890166, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.34216030219329824, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.34351589012104916, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),company.name))", "score": -0.3668022833155943, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.title))", "score": -0.3681578712433452, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.3715948837346959, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.13235414526372982, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.15030406326298076, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.3477554839965394, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.36698182887285713, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.41416021747500686, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4333865623513246, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4422866141180175, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.44563720716375566, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.46151295899433525, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4648635520400734, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.47155438493464624, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.budget),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4866068262296959, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.revenue),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.49065031644897183, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4907807204536158, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.5020552293853396, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.14741697813587962, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.25038728396611987, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.3839120110424119, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.39305026735382853, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.48688231687265215, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.4960205731840688, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.5322652868853766, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.5481386324318009, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), movie.revenue),person.name))", "score": -0.5573429102005321, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1972-10-24), person.name),person.name))", "score": -0.5830938629733282, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,1972-10-24), person.name),person.name))", "score": -0.5861037187205511, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),cast.person_id))", "score": -0.6026839455516892, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), language.name),person.name))", "score": -0.6209584707321483, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.6352355927156168, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.6511089382620412, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.10509203900261617, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.1485281312677003, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.2229417249378608, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.23157547694092762, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.2868740014710224, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.3094730300962319, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.33202736918277087, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.35030837009222193, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3787950137686876, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.3808637218106623, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.38388662376639243, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.39478117616737646, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.39546171908927397, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.4254933307098625, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.4297530323689532, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.18470131763995912, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.19086095125796695, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,1991-09-21), company.name),company.name))", "score": -0.2596355766908263, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.30028907523345977, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3045182197517347, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.31055963684986393, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,156), company.name),company.name))", "score": -0.33825846612431537, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3433677584662101, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.34952739208421796, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),person.death_place,<,1991-09-21), company.name),company.name))", "score": -0.357327662175086, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.36551747697144144, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,1991-09-21), company.name),company.name))", "score": -0.3779788508493991, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.39852633617680516, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,156), company.name),company.name))", "score": -0.4046859747787224, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),movie.vote_count,<,156),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4124331905946858, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.18899702031681684, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22231636434391103, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.24225341533683922, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2755727593639334, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.28065207634062506, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.28278591612608417, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30268171806937944, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3035924178743411, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.31397142036771925, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.31610526015317836, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3310742173076477, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3339084802555414, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.33600107099136756, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3360423200410005, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),person.id,crew.movie_id),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.43700319027238715, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.0369333159556305, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), genre.name),company.name))", "score": -0.3420098635810909, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3540156261993432, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), movie.title),company.name))", "score": -0.3619369954866893, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.364509808969699, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.371818190313103, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.3898484285419531, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),person.birth_place))", "score": -0.4010689903105477, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),movie.title))", "score": -0.40694892250039244, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41158263230659425, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41523234294318423, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),production_company.company_id))", "score": -0.41831237779822633, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4224864342149053, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.42251965114070084, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.42317717069939825, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))", "score": -0.14405257381440606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,!=,2013-10-04), movie.title),movie.title))", "score": -0.25770075000764336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2013-10-04), movie.title),movie.title))", "score": -0.2678327200555941, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2013-10-04), movie.title),movie.title))", "score": -0.3117652026558062, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,=,2013-10-04), movie.title),movie.title))", "score": -0.3814808962488314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2013-10-04), movie.title),movie.title))", "score": -0.42137134946824517, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2013-10-04), movie.title),movie.title))", "score": -0.43554534889699426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,2013-10-04), movie.title),movie.title))", "score": -0.47123079873563256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2013-10-04), movie.title),movie.title))", "score": -0.5111055163288256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2013-10-04), movie.title),movie.title))", "score": -0.5350195256614825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2013-10-04), movie.title),movie.title))", "score": -0.5890839783096453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2013-10-04), movie.title),movie.title))", "score": -0.5950109449768206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,2013-10-04), movie.title),movie.title))", "score": -0.6238899615855189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,2013-10-04), movie.title),movie.title))", "score": -0.6247536775917979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2013-10-04), movie.title),movie.title))", "score": -0.6258359191269847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.13175624389146603, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.1843850008668187, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.22195322272447673, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.2263331943951207, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.2680657651308572, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1957), movie.id),movie.budget)", "score": -0.2789619513704734, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.31234010014915775, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>=,1957), movie.id),movie.budget)", "score": -0.31653017322813143, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,=,1957), movie.id),movie.budget)", "score": -0.3196412317704014, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.3206945221062099, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.name,<=,1957), movie.id),movie.budget)", "score": -0.33067590903196237, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.3556301362764405, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.35826276267856433, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.3626427343492083, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.36496887583920684, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.131109567679232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title))", "score": -0.14236935446388088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3345764452426407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.39987102182931267, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,!=,no), movie.title),movie.title))", "score": -0.41113080861396156, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.46131798657006584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),language.name,!=,no), movie.title),movie.title))", "score": -0.47257777335471474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.5112761353722546, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.5960074710807142, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,no), movie.title),movie.title))", "score": -0.6412019006384071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),spoken_language.movie_id,!=,no), movie.title),movie.title))", "score": -0.6495331994665321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.6529657001432781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.6599950115613783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,!=,no), movie.title),movie.title))", "score": -0.6635372511518653, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,no), movie.title),movie.title))", "score": -0.7042581982968841, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.original_language,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.17091772003129632, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,=,es), language.name),language.name))", "score": -0.17228144496995113, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,=,es), language.name),language.name))", "score": -0.2304089159396517, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es), language.name),language.name))", "score": -0.2340520788161617, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,!=,es), language.name),language.name))", "score": -0.2367234605385467, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),language.name,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.25647220065647774, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2708583073263143, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,es), language.name),language.name))", "score": -0.2948509315082473, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,es), language.name),language.name))", "score": -0.30934282702066657, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.32308582554506143, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.3348923980207016, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.3561119605987928, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.36791854126893875, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3682595331752872, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.40618566936755157, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.03444752343323426, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.43939526076321606, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.519304376786941, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.7995669523079414, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.8754721023237823, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.runtime)", "score": -0.8998589979958934, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.9103983923685723, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(country),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9128277348285543, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Post Production), movie.id),movie.runtime)", "score": -0.9390880831409519, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9497450581626892, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date)", "score": -0.9636973619035293, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.runtime)", "score": -0.9640281440651011, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.9648108799241227, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.9803643862831024, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -0.9967290397374081, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.09001840457452828, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), genre.name),company.name))", "score": -0.23730668867761975, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.birth_place),company.name))", "score": -0.24740904211048564, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), keyword.name),company.name))", "score": -0.24833242541121567, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2723707998722774, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.2794587141634383, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,10037390), company.name),company.name))", "score": -0.32544311570901524, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3314190496714711, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,10037390), company.name),company.name))", "score": -0.33682209422346543, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,10037390), company.name),company.name))", "score": -0.34442632146980523, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.3540051575787641, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,<=,10037390),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35777648261895745, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.death_place),company.name))", "score": -0.36046687923862397, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), country.name),company.name))", "score": -0.3653930196349151, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),person.birth_place))", "score": -0.3802366309130893, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.012996800371183781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.49391493376970175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.6280248480725277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7593634917975578, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.7678544138434518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7808333232642326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.title))", "score": -0.7873757259330887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8161552170640789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8319524719954643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8633021905661735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.8639697806320328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.24827), movie.original_language),movie.original_language))", "score": -0.8863050061154354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.9048892472746957, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.24827), movie.original_language),movie.original_language))", "score": -0.9463741972685966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),genre.name))", "score": -0.9675301687202591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.10325928214389431, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11822108018933054, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1597135306691316, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.23239677508794915, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.29335489608219567, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3508349439246397, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.36579674197007594, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3688478426003965, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),country.name,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37232153445018734, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38903323404819257, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3908437443697475, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3966026031093842, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3992803866634506, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.40447754856399737, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4067743080877793, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.title))", "score": -0.23826612086122623, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.release_date))", "score": -0.27602429241960635, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.title))", "score": -0.3155567675930797, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.release_date))", "score": -0.35331493915145984, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))", "score": -0.365585091720277, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.original_language))", "score": -0.3941855386001407, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.release_date))", "score": -0.4033432632786571, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.status))", "score": -0.43799176366155734, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.original_language))", "score": -0.4714761853319942, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.popularity),movie.release_date))", "score": -0.4990009068909162, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.status))", "score": -0.5152824103934108, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.original_language))", "score": -0.5215045094591915, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.release_date),movie.title))", "score": -0.523738402138406, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.release_date),movie.release_date))", "score": -0.5502857780882656, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),language.name,!=,nb), movie.popularity),movie.release_date))", "score": -0.5579951727459793, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.12883299610984977, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.revenue))", "score": -0.2940376999176806, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.budget))", "score": -0.3803171666659182, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.budget))", "score": -0.40373326859844383, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.4125916214979952, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.budget))", "score": -0.43169257252884563, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.vote_count))", "score": -0.44176824412716087, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.revenue))", "score": -0.545521870473749, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_day))", "score": -0.558137700179941, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.revenue))", "score": -0.5689379724062746, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.revenue))", "score": -0.577796325305826, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.revenue))", "score": -0.5968972763366764, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.6027655187717755, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.6451475091434948, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.vote_count),movie.budget))", "score": -0.683176743084914, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.13648054045063118, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19947842790859863, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.20148660330377516, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.22842982281248894, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.2403724214534238, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.number)", "score": -0.33242600705665387, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),oscar.number)", "score": -0.33798105523360555, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_winner.oscar_id),oscar.number)", "score": -0.34386167107479726, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.id),oscar.number)", "score": -0.3452064615220199, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3476644429442785, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.36593716479037, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3782095487862256, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.39236234371683437, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(crew),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.4009277548777524, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.runtime),oscar.number)", "score": -0.4141145728100506, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.14707824522592478, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.2908514459440399, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.30809889993216116, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3146550520251789, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3147324241194226, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3267404414032602, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33135263885182004, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33197987749469915, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33340288700957404, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.33967679575422305, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3434380313451953, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.title,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.36652345524582464, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3678947750332906, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),movie.title,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37064680409294387, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37201797173356693, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.12466951818602824, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.22082890752174317, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.category))", "score": -0.234651308464921, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.number))", "score": -0.25766805665302644, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),genre.name))", "score": -0.277470502310532, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.2839373396765527, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.category))", "score": -0.28664522384589786, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.category))", "score": -0.29637211390699997, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.30759372058768536, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.number))", "score": -0.3096619720340033, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.category))", "score": -0.31088476203330423, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.number))", "score": -0.3193888620951054, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05),oscar_nominee.person_id,movie.id), oscar.number),oscar.number))", "score": -0.32731034966693284, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.33331532724918794, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.number))", "score": -0.3339015102214097, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)", "score": -0.030860142983478212, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.revenue)", "score": -0.4473923866350866, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.budget)", "score": -0.6493227446873242, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.popularity)", "score": -0.6937447878502342, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,151), movie.id),movie.revenue)", "score": -0.7148695270681809, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,151), movie.id),movie.revenue)", "score": -0.8271690612750588, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_count)", "score": -0.8452954099982597, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.revenue),movie.revenue)", "score": -0.864701359900659, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_average)", "score": -0.9041695394817084, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,151), movie.id),movie.revenue)", "score": -0.9153094022099212, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,151), movie.id),movie.revenue)", "score": -0.96292555392303, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,151), movie.id),movie.revenue)", "score": -0.9900688303493963, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),cast.movie_id)", "score": -1.003401268127735, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,151), movie.id),movie.revenue)", "score": -1.014108219867862, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,151),movie.revenue)", "score": -1.024070537277528, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.16040440990888497, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.17207938834291692, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.24883779598554648, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.25090033042481646, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.26257530885884844, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.2753678773858909, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.budget))", "score": -0.2858560776153251, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.3173352319594993, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.32901021039353123, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.3369753593482953, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.339333716501478, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.release_date))", "score": -0.3453258793136544, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.367698616411041, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar_nominee.oscar_id,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.40373864070845267, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.4057686180361608, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.010135169239219977, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1584), movie.revenue),movie.revenue))", "score": -0.538434164463979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.budget),movie.revenue))", "score": -0.7116067253336951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1584), movie.revenue),movie.revenue))", "score": -0.7317106294030964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.popularity),movie.revenue))", "score": -0.7599572979197546, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.budget))", "score": -0.798297365061444, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1584), movie.revenue),movie.revenue))", "score": -0.8007371591920673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.818946588828112, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1584), movie.revenue),movie.revenue))", "score": -0.8254292773599445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.popularity))", "score": -0.8428170875231444, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_count))", "score": -0.863853354803723, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_average))", "score": -0.8770461276690185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,1584), movie.revenue),movie.revenue))", "score": -0.891792975813587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,1584), movie.revenue),movie.revenue))", "score": -0.8948578466479375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.id),movie.revenue))", "score": -0.897896929858689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.10641377741938252, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.10877341266845382, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21557162344963302, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.21793125869870433, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3229300832442085, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3252897184932798, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3702313089774131, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37259094422648437, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37680168469132375, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37762090649973606, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.389189037270007, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39154867251907827, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4137290808311329, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41608871608020426, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42137695854080637, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.034108450414350955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.3722107716384926, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.5925686641239736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.6030758652996155, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7288913684424188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7346145649316895, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.7390075312105182, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.runtime))", "score": -0.7505865974926564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8176996846559632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8338356156709779, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.runtime),movie.vote_average))", "score": -0.8384349928346637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.popularity),movie.vote_average))", "score": -0.8431451306787494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.8739919348263356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.original_language))", "score": -0.8905613704228017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8946550446089532, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.03084318929904839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.runtime),movie.runtime))", "score": -0.29664883048826596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.runtime),movie.runtime))", "score": -0.615007669046463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.runtime),movie.runtime))", "score": -0.63034155996138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,0.553752), movie.runtime),movie.runtime))", "score": -0.6715084615498199, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7505901745389565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.release_date))", "score": -0.7766628905301332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8117006114553078, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.821971445424424, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), oscar.year),movie.runtime))", "score": -0.8352540041887551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8448557547162636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),person.birth_day))", "score": -0.8450247689252137, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,<=,0.553752),movie.runtime), movie.runtime))", "score": -0.8532933946553385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8630804194253869, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,0.553752), movie.runtime),movie.runtime))", "score": -0.8672968149985536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.09554166055994776, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2651817396530689, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.birth_day,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2681714828204514, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.2788763258671855, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3057486892243938, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.30888798431533476, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31287156945773537, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.31644677187485043, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.33766113462133074, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3440049397915108, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.34645843032299967, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.36767279306948003, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),movie.release_date,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.38409897539393023, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38647178928444087, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,Released), genre.name),genre.name))", "score": -0.4036461588629866, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.024262855422421126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.39561052586577716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.43875955011390033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.revenue))", "score": -0.6267209100878972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.vote_average),movie.popularity))", "score": -0.700385048181488, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),person.gender))", "score": -0.709124808327033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.release_date))", "score": -0.711493496910407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.7440940729466092, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.7451279308988887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.revenue),movie.popularity))", "score": -0.7618777892894286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,26500000), movie.popularity),movie.popularity))", "score": -0.7709650140131998, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,26500000), movie.popularity),movie.popularity))", "score": -0.8081035952891398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.status),movie.popularity))", "score": -0.8102672241038817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,26500000), movie.popularity),movie.popularity))", "score": -0.8148224096621561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.vote_average))", "score": -0.8338819193995732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.2547029986526468, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.3578833039830783, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.39798058764892713, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.4004838301025653, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.40049595761701584, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.41139867179811673, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.4128410860736022, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.41889600194827414, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4380302754883382, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4385543419179468, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.4514959554639655, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.4529383687011365, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.person_id),movie.popularity),movie.runtime))", "score": -0.45847306409934635, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.46228546943495064, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.46867579101544293, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.01618580391368596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,515), movie.vote_average),movie.vote_average))", "score": -0.4170668219376239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_count))", "score": -0.6214256941966596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.popularity),movie.vote_average))", "score": -0.6531537651244435, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,515), movie.vote_average),movie.vote_average))", "score": -0.7056609784413013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.runtime))", "score": -0.7503560244731489, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.8017054305819329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.status),movie.vote_average))", "score": -0.8426696538153919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_count),movie.vote_average))", "score": -0.8500069855872425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,515), movie.vote_average),movie.vote_average))", "score": -0.8681743483102764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,515), movie.vote_average),movie.vote_average))", "score": -0.8698496614742908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.popularity))", "score": -0.872294133871037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), person.name),movie.vote_average))", "score": -0.8765132307235035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.runtime),movie.vote_average))", "score": -0.8807198881331715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.status))", "score": -0.9039769231967512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.10790817554573705, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.1568275482111718, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.2501629577215384, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.2534516538667826, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.2535448038730165, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.28190071936970973, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3041109235247074, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,>,special effects), person.death_place),person.death_place))", "score": -0.3315547645886706, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.33870149531103005, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.34070496981056414, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.3455662928032273, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,<,special effects), person.death_place),person.death_place))", "score": -0.34673293850886905, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.35972816289423887, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), genre.name),person.death_place))", "score": -0.36071295456180985, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.4093005359691825, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(getData(person),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.26372886437457055, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3046017665556939, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3363797801027913, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.34293978777950157, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3462335006914352, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.36666490676969177, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.374717801326599, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.37801151423853263, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3836985802082323, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.38457152191524296, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3984429203167892, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.40812498897272215, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.40829663038384656, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4151065196509785, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.43438522071809005, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.172932888061041, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.20823941627168097, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.3292749623360578, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_count))", "score": -0.38734589019441046, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.4252975086274091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.4494076470436994, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.number))", "score": -0.4970506826939527, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_day))", "score": -0.532614062220091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5774399737420026, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.original_language))", "score": -0.5816349486412946, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.iso_639_1))", "score": -0.5922423104348127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_place))", "score": -0.5982169012131635, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))", "score": -0.6056790157745127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.tagline))", "score": -0.6171407202782575, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),keyword.name))", "score": -0.6189961532654706, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.12165520814574832, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.1317585751141397, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.2287694076459878, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.26026802890791273, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.2661791901337312, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.2767329041264515, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28042490796354497, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3116461068240159, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3238128244117434, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3300596187861285, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.35422530997413415, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3563783588541276, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.35643707248938417, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.tagline,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3589525778450269, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3595146919480908, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.010468730171851348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5033182970951476, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5218126104122441, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5667413667757902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5852356800928868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6140392322464938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6325335455635903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6706915280426275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6774623019271364, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6811860431589669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.689185841359724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.695956615244233, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6996803564760635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), movie.original_language),movie.original_language))", "score": -0.7079624211570444, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id), movie.original_language),movie.original_language))", "score": -0.7122423633602669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.021167895145481452, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))", "score": -0.5308515297656413, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5481195590400603, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2009-03-29), person.gender),person.gender))", "score": -0.5917379128222819, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2009-03-29), person.gender),person.gender))", "score": -0.5991806256060954, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,2009-03-29), person.gender),person.gender))", "score": -0.6333326241874602, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),movie.popularity))", "score": -0.6796822220494505, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),genre.name))", "score": -0.7022231489827391, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.name),person.gender))", "score": -0.7166799023689236, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.birth_place),person.gender))", "score": -0.7704904392303433, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), movie.popularity),person.gender))", "score": -0.7744294717849698, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2009-03-29), person.gender),person.gender))", "score": -0.7964832650905009, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),oscar.category))", "score": -0.8223768741299864, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,2009-03-29),person.gender), person.gender))", "score": -0.8421715404692804, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),country.name))", "score": -0.8559876352956053, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.023007616828799198, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.4563984763272432, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count)", "score": -0.5774982724256332, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.5784006131147075, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.6890092068970262, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.6925966125879639, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.7368962525510803, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.budget)", "score": -0.7522570956988082, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.7844620056886892, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.7865584775347539, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8342950150481451, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,7.4), movie.id),movie.vote_count)", "score": -0.8411357922694067, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.budget),movie.vote_count)", "score": -0.8416324543894752, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,7.4), movie.id),movie.vote_count)", "score": -0.8498313551523982, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.8742742815131723, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.03585237908365655, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.24545688777381117, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2730243592168964, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2930086273691185, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id), movie.title),movie.title))", "score": -0.31910883732932765, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.32331760490108796, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3328797825440667, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3433018730533101, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.36336003672211237, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.37309721165358917, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(movie),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3822304484406816, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.3842142528467764, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.39530596536655715, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.39692569443370207, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.4001392410237802, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12076835669141993, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.27333850828116635, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.27431997073995545, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29134822500762675, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.30379777938926783, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3045625658311926, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3187746797878561, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32393420005039836, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),person.death_day,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.32998343175255423, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.33156021058050045, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),person.birth_place))", "score": -0.3385731216139221, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,cast.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3516106632338563, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3517806635543542, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3551168695550949, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.355271776936492, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.09213928304255145, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.16076508016629873, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.2572308005517978, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.32958672909107384, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.3768450711252328, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4090767878088971, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4091034120165564, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(movie),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.4360960282531462, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4586904033144646, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.46517309617592323, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.47233278319440875, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.47524064988821546, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.name,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.5090544615583866, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity)", "score": -0.5176663707959058, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Deutsch), movie.id),movie.popularity)", "score": -0.5277411087939388, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.05828411651547421, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18580572180115673, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2616112059580114, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.27586049101884685, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2879039553514204, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.2895369554315963, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3530920774573539, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.37467834306117304, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.38890476056105816, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.39407800789462966, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,null,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.40741369140767136, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.movie_id,language.iso_639_1), language.name),language.name))", "score": -0.40781627638398016, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4096803336209432, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.41440090872660384, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.4170585607172788, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))", "score": -0.01593825085365097, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.popularity))", "score": -0.5271372925890319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.popularity),movie.status))", "score": -0.5852990716630302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.title))", "score": -0.6125409733904235, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,177), movie.status),movie.status))", "score": -0.6457091075535573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.original_language))", "score": -0.655009103978955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.vote_average))", "score": -0.6630912553919188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), country.name),movie.status))", "score": -0.6952429979974113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),country.name))", "score": -0.7024258505953185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.original_language),movie.status))", "score": -0.7168137401276908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.iso_3166_1))", "score": -0.7576716076982848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.vote_average),movie.status))", "score": -0.7753915756875358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.release_date))", "score": -0.7868490945947997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.movie_id))", "score": -0.7969215643061034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,177), movie.status),movie.status))", "score": -0.8206092220898427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.15409887097694056, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.19004097409092155, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2363632669762639, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.27230537009024486, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.28859927177397215, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2987563108763332, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3016421051982009, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.30789109488302796, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.31179914430056194, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.32201011162634036, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.34383319799700895, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.34702330314973046, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),production_country.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3482617226890491, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3549028433491993, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.4421678931872731, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.06054016670548342, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.13413142615521748, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.26021731996984954, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.27785625806098196, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3258824755189426, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3338085794195836, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3467398928860838, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3739924324849467, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,!=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3797242894025911, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.category),oscar.sub_category))", "score": -0.3817280264470743, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,<=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3918652877354567, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39451808539833283, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39947373496867666, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.4000320171375875, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.category))", "score": -0.4013886374268031, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)", "score": -0.11051681569960169, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_count)", "score": -0.25881083016376955, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count)", "score": -0.47258366496259696, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count)", "score": -0.48445068031684874, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.id),movie.vote_count)", "score": -0.5077671891769153, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_average)", "score": -0.5353128345629513, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,72000000),movie.vote_count)", "score": -0.5988472878537351, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count))", "score": -0.6215231350761314, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_average)", "score": -0.6342353031537581, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count))", "score": -0.7013992189567944, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,72000000), movie.id),movie.vote_count)", "score": -0.7177499181343909, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.budget)", "score": -0.793899673611399, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.runtime)", "score": -0.8117865929788877, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.revenue)", "score": -0.844048648997533, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.vote_count),movie.vote_count)", "score": -0.8698340384399106, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.006727813939505722, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Post Production), movie.title),movie.title))", "score": -0.8217384630333981, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.title),movie.title))", "score": -0.8399744444977841, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.vote_count))", "score": -0.8714066782486043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Post Production), movie.title),movie.title))", "score": -0.8719154502978199, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.8863934199180221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.budget))", "score": -0.8920097985756001, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.title),movie.title))", "score": -0.9031973296296201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.budget),movie.title))", "score": -0.9280044886036194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.title),movie.title))", "score": -0.931581359494885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,=,Post Production), movie.title),movie.title))", "score": -0.933846276391705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.runtime))", "score": -0.9382810631286702, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Post Production), movie.title),movie.title))", "score": -0.9397767001282773, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9424364536025678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), company.name),movie.title))", "score": -0.9593348952694214, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.14062532598571634, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.18949699309843324, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.21048967503039748, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.213890459757706, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.22482960654881343, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.2688695548512566, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.27766266902940656, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3331693506046927, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.vote_average)", "score": -0.3396206311651737, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.35179543336778346, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.iso_639_1),movie.vote_average)", "score": -0.3667847339974826, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3677103447170692, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.popularity)", "score": -0.3800669518182629, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.40283970421743903, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.popularity)", "score": -0.40624048894474757, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.07778830410113598, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.08226239678105803, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.30130587711058643, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31694476311429065, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.3280405640723569, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3494341149006855, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37238846780707674, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4084856115416667, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4090496144771891, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4313563404586596, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.4314278321433589, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43370977530905624, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4376591293995945, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.446225058388323, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.46859952706018854, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.05080757522252688, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.18831973347781808, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.id),movie.popularity)", "score": -0.20189105173202052, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.id),movie.popularity)", "score": -0.30732383505291705, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)", "score": -0.31850315408045793, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.3377385619649892, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,<,sound editing), movie.id),movie.popularity)", "score": -0.3393747437998352, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.3394032099873117, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,>,sound editing), movie.id),movie.popularity)", "score": -0.3587875596428186, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,sound editing), movie.id),movie.popularity)", "score": -0.3959559113874472, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.popularity),movie.popularity)", "score": -0.39748869591134717, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),country.name,!=,sound editing), movie.id),movie.popularity)", "score": -0.4353594347512322, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.4448359933082082, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.4617329456606716, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.46731129398246346, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.11864332272792347, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.12883390203568013, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.22392554169062598, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.25673014125678456, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.2575645587536333, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.26208608385109056, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.29531109748027695, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.2995579051007225, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3215580226921027, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3228460280523339, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3393904282860683, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.34825315082774494, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar.category,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3775933800559035, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.388530646950439, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.40938642288204424, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)", "score": -0.028087171843053357, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime)", "score": -0.45476769710398834, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.id),movie.runtime)", "score": -0.5597343711200218, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.id),movie.runtime)", "score": -0.7160478024385512, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,!=,Released),movie.runtime)", "score": -0.7246344804426342, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.7650868244203025, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,>=,Released),movie.runtime)", "score": -0.8337887299233189, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.id),movie.runtime)", "score": -0.8640797601924952, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),country.name,!=,Released), movie.id),movie.runtime)", "score": -0.8814148941258789, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.9345379416091955, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.9514283559156101, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Released), movie.id),movie.runtime)", "score": -0.959441633074159, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_average)", "score": -0.9743774618123923, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),oscar.year)", "score": -0.9843584595383037, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_count)", "score": -1.0184710612645256, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.08170419594245416, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.17116785577946808, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.18073732906942053, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.2714220395126867, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.31376541778013495, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<=,1999-12-16), genre.name),genre.name))", "score": -0.31690388910320233, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.3476494680883193, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3525244854593871, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.3546143669156445, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,1999-12-16), genre.name),genre.name))", "score": -0.3608856993497006, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3713485035202008, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.40867495392584535, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.40898549267070716, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.41644492128842253, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.43846006821643035, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.2409716958354693, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.26231530876248144, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.id))", "score": -0.35457133859745227, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.title))", "score": -0.39257502168766223, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.title))", "score": -0.41450909833656624, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.budget))", "score": -0.6128403952752706, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.7041606137499912, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.budget))", "score": -0.7529476818745025, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.vote_count))", "score": -0.7715343347226735, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.vote_count))", "score": -0.8047094719659071, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.budget))", "score": -0.8194975631486159, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.vote_count),movie.title))", "score": -0.8312140034686308, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.id))", "score": -0.8409295317833312, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.vote_count))", "score": -0.8428178367612418, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.vote_count))", "score": -0.8445982274715789, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.11095634070687747, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), movie.title),oscar.number))", "score": -0.23260699390694495, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.235144059914693, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.sub_category),oscar.number))", "score": -0.2603591129981195, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.27427543750784367, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.2836269463648077, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.29417728229057816, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.29754010099267675, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.keyword_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.30355525934280037, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.sub_category))", "score": -0.31069341519285687, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3110916435378184, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3118461309631881, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), company.name),oscar.number))", "score": -0.31271287827076777, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),movie.id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.31970607428235576, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,kampfjet), oscar.number),oscar.number))", "score": -0.3231674635419133, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))", "score": -0.09658098821455496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),movie.original_language))", "score": -0.1690184683066036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),language.name))", "score": -0.4703158135052945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5345893711310055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),language.name))", "score": -0.5427532935973431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),movie.original_language))", "score": -0.579175517279921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), language.name),movie.original_language))", "score": -0.5798015719738032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6242700805579353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), language.name),movie.original_language))", "score": -0.6260919586231652, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),language.name))", "score": -0.630055903247044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),language.name)", "score": -0.6461549484052037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), language.name),movie.original_language))", "score": -0.6522390520658519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.tagline,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6539880842428829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.title),movie.original_language))", "score": -0.655800474294665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6561583489637997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.13381360836734896, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.2079930645829094, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.20896142912434193, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2277272968389631, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.24708224349301386, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.2593590981917936, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.295560491760123, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.3111795002234292, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.31261993664396953, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3290469418407472, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.35585997538525305, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.363985995172401, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.37070830808697425, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3763961345735752, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.38632731655028046, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.0440667506081964, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.23042752173866496, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.2665155540218487, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.2735774494405428, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.runtime),movie.runtime)", "score": -0.3275122781411204, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.34536994779713337, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1985-05-13), movie.id),movie.runtime)", "score": -0.35106538455282427, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.id,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.3873564894397329, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.3921989184140158, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4057520787340182, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(getData(person),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.42296487896598856, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.movie_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.42730923668553894, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,!=,1985-05-13), movie.id),movie.runtime)", "score": -0.4340218764547794, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.45399195648123275, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.45993822035834436, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.0220254897211877, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,495303), company.name),company.name))", "score": -0.2771438881041991, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),person.birth_place))", "score": -0.35882309920675637, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,495303), company.name),company.name))", "score": -0.3658002210633414, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.37010671116775506, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,495303), company.name),company.name))", "score": -0.370176456827172, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),production_company.company_id))", "score": -0.39319961681477766, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), person.birth_place),company.name))", "score": -0.4006295352893468, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),movie.title))", "score": -0.4042382186799528, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,495303), company.name),company.name))", "score": -0.41428274215023186, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), movie.title),company.name))", "score": -0.41533739318077045, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4255682823304179, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4302065100308523, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4320611944723374, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4325662660705067, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.21218222363178738, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.21476729993313257, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2468793706556293, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2503423282720123, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.26932799557031845, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.28771446594732103, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.33842778529198747, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.34101285266382825, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.title,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.3511852897599176, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36380360038270465, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3659903086985795, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37336800593140057, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37555466998059744, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3854133248043182, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.38760003312019314, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.16194069101720976, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.18118717337304646, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.3341391954948504, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.33465321515367413, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.377927894953604, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.39108660572158793, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.revenue),movie.revenue))", "score": -0.42977360957901334, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.43053632829837396, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.4326186442634281, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.popularity),movie.revenue))", "score": -0.44267985287347267, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.4607628002711041, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.47043497322412686, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4788846848618212, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.popularity)", "score": -0.5390345495445703, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.5506404190900684, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6196022521639627, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6216080519430603, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6254050538699976, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6274108536490952, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6289260005623609, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6299968860006526, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6309318003414586, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,oscar_nominee.oscar_id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6316073607963822, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6320026857797504, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6323167747311095, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,oscar_nominee.oscar_id),oscar.number,None,87),None,None,139), None),None))", "score": -0.63361316057548, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6343225745102071, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6347288134679591, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6357996989062508, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(person),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6367345544493497, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.07462208748614395, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.13885230683898908, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.2227591823142516, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.2788571189704169, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.28698940166709674, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.30964637027971337, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.3148203627207257, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.31707154810028626, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.33261369914228217, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3543089507276559, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.36686991291608406, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),movie.title))", "score": -0.37905058207357084, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3813017674531314, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.3846025021397045, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.418539170080501, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.14523848737691028, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.15114439791785025, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.gender))", "score": -0.23312442311962878, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.name),person.gender))", "score": -0.23903033366056875, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.name))", "score": -0.31093060136736694, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.name))", "score": -0.3168365119083069, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,>=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.32249685492132246, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.33823047979943616, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.34413639034037613, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.gender),person.gender))", "score": -0.34529823432615203, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.name),person.gender))", "score": -0.351204144867092, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3747925859553297, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,<=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.376850383400662, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.38069850092641144, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.name))", "score": -0.39881653711008547, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.20396260177873723, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.22087062746121103, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.2467140702742818, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.2601921927019341, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.2640192624062018, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.26581610456487154, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.27000533024320095, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.28082853839223665, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.2899103456132004, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.2958487730562717, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.31272465867372495, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.3131539468028502, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3135046512842427, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3217244902339597, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.341248954444931, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.02890581048268359, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.runtime), movie.runtime))", "score": -0.6938473827322014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.release_date))", "score": -0.7589752781641437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.runtime))", "score": -0.841853105041082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.runtime),movie.runtime))", "score": -0.8454007402615389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),person.birth_day))", "score": -0.8486079085123492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.status))", "score": -0.8505381453287555, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), person.birth_day),movie.runtime))", "score": -0.8604820003238274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime))", "score": -0.8723856002642453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.title))", "score": -0.9029393303644611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.runtime))", "score": -0.9065724839892937, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime))", "score": -0.925221287223394, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.9262871290989502, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.runtime),movie.runtime))", "score": -0.9376726642803987, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.runtime))", "score": -0.946304165336187, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))", "score": -0.1922538195794914, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.gender))", "score": -0.2651379619783256, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))", "score": -0.34464805098832585, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.gender))", "score": -0.4175321933871601, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.name))", "score": -0.45049797641695477, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.name))", "score": -0.5031583904346917, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.gender))", "score": -0.523382118815789, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.id))", "score": -0.5527985160297249, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.gender))", "score": -0.5760425328335259, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.name))", "score": -0.6028922078257892, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.name))", "score": -0.6555526218435261, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), language.name))", "score": -0.6566951637214515, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.popularity))", "score": -0.666601574892411, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.gender))", "score": -0.6757763502246235, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.revenue))", "score": -0.6784528856223915, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.1632594397983217, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.17583487349356033, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.1788322010635818, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.25662439113881264, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.2580919771443097, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.28187223802206685, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),filter(getData(person),person.birth_day,>,31.8267),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.30350506297212404, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3106576602424657, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3182098578071685, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.33521534910156137, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.3440834594677575, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.34628837630428244, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.34708078703777895, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.356653828798241, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.35678992995111714, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.22546878556245553, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.23898017380050124, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects),movie.runtime),movie.popularity))", "score": -0.2574960521736169, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.25996433752249143, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.26694710454986553, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.3096305134336476, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.34628067119547956, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.3634053992497327, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3934419983569582, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id),movie.runtime),movie.popularity))", "score": -0.4006871515841215, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects),movie.runtime),movie.popularity))", "score": -0.4044027642932688, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.4050428992143935, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.4060888081335148, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.40887683867289837, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.4229720543035428, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.13723346032202244, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.16309502281594454, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.27860126051095707, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.291303681844777, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.32024317024312804, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.35088809883307315, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.36681699771552445, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.4223497063181112, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04),person.gender,>,1947-09-04), movie.title),movie.title))", "score": -0.4361454995531146, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.44869711649827965, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.id),oscar.number)", "score": -0.45312794168092174, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.45770391727352416, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.46010775489944405, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.48337396913038455, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(oscar_winner),movie.id,crew.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4857778925801003, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.10509120608438483, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.15570149960075358, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.20240195381417228, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2211029011243703, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23620832737791578, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.25430609680316524, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.27171319464073906, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.31841364885415774, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,>=,160), genre.name),genre.name))", "score": -0.3361278729122642, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3448435408354271, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.37031779184315067, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>=,160), genre.name),genre.name))", "score": -0.3750014096681987, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<=,160), genre.name),genre.name))", "score": -0.38823166577592383, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,>=,160), genre.name),genre.name))", "score": -0.40609715065501717, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.40655792111386807, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.019246340518293437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.4349820667630411, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.4867763573056436, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6441843402790255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.7256825260337791, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),person.gender))", "score": -0.7280563605236239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.popularity))", "score": -0.7577363529926515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.7701095396405435, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.7718944826847292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.popularity),movie.popularity))", "score": -0.7734327966099954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.release_date))", "score": -0.7946494710849947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.popularity),movie.popularity))", "score": -0.8141738230115152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,Released), movie.popularity),movie.popularity))", "score": -0.8143685750183067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.popularity),movie.popularity))", "score": -0.8178138426956139, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.8458554041790194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.22419895725709194, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.24224813436346246, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.25638307746628836, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.30179443895195546, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3023810529661211, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3151109042646816, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3159498859780441, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3204302300724916, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.32553955833937015, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3300092774438342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33399906308441457, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33456517760545923, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.348058467563746, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3481340192007818, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>=,2017-08-13), company.name),company.name))", "score": -0.34818153413212183, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.17397894337175246, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.225036378140641, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.24952953302218195, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.26945362983442206, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>,63), movie.id),movie.vote_count)", "score": -0.28288601465728197, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.29109426128664534, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.33127663596122536, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>=,63), movie.id),movie.vote_count)", "score": -0.3322605444930948, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,63),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.33479959782516855, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.340414725055673, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.3425668991760502, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3478747432266742, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.number,>=,63),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.34900929252178964, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3576558682444479, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.3624909959882903, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3151272016331557, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3248456360798043, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3646184561654664, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3654640645869779, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3708756592249001, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.37128639828914106, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.37800793826728263, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3856053577150447, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3868401740230323, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3905828334861489, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3955590189784747, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.40832710566949304, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.416732925448968, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.vote_count),movie.budget))", "score": -0.4179486846164989, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.budget))", "score": -0.4204575713403994, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.03348052864748752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.47688003060616263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,13100000), movie.popularity),movie.popularity))", "score": -0.5168826467343024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,13100000), movie.popularity),movie.popularity))", "score": -0.5645633823223761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.vote_average),movie.popularity))", "score": -0.5969338993527344, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.release_date))", "score": -0.6056385225601844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.status))", "score": -0.6558071560211829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.revenue))", "score": -0.7365932053871802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,13100000), movie.popularity),movie.popularity))", "score": -0.743499734227953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.revenue),movie.popularity))", "score": -0.7564396838643006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),person.gender))", "score": -0.7822110838242224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity)", "score": -0.7867546659333922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.vote_average))", "score": -0.8075279182739905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))", "score": -0.8148597858598805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.runtime),movie.popularity))", "score": -0.8290004114605836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.08965355211740172, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.22224957881575055, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.2370502463306717, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.2681148678437478, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.26842638832624943, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.3535470785781638, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.3633866575776755, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.3811148631873454, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.38293681339568686, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa), movie.id),movie.popularity)", "score": -0.3982667236082693, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name),movie.vote_average),movie.popularity))", "score": -0.4031117520717101, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.vote_average))", "score": -0.4236594477090336, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.name,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4280506842096403, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.42978380160447205, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.id))", "score": -0.4487319588647772, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.21460412702562157, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.number))", "score": -0.24034162017536215, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.2464584508746991, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.25574320198825734, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.2698740415117167, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.genre_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3123996474441789, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3239493015988567, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3258940073190626, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3326413002042526, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.33517875843262085, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.34192605131781084, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.34866522196765753, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.3493095456344623, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.35354196566199725, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.3560568385196523, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.07280959351191996, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))", "score": -0.3911803015798796, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.birth_day))", "score": -0.5055500471426058, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.gender))", "score": -0.5655288302732515, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.death_day))", "score": -0.5837167703939485, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.birth_day),person.name))", "score": -0.6475096223803121, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.6779771787041682, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),movie.revenue))", "score": -0.6835599744154024, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar.year))", "score": -0.6850608193708467, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.id))", "score": -0.6851051585108507, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,>,Topanga, Kalifornien), person.name),person.name))", "score": -0.713822725105274, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), oscar.year),person.name))", "score": -0.7169276950808126, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar_winner.person_id))", "score": -0.7369116747213411, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.id))", "score": -0.7433117830587435, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.gender))", "score": -0.7728199498087633, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.17810893522619772, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.25521275152207407, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.28555845960211035, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.2864130248148832, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.30549627335441565, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.31115966464671885, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.32470816330810853, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,!=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3476732935424599, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3583554709902987, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3583812587077393, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.36144318647906043, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3666166756116024, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3749916576597272, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3758567535857369, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.38184007310643076, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.049787123556130214, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Post Production), country.name),country.name))", "score": -0.1506072755940849, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.31548067529558843, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.3593898761032104, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), person.birth_place),country.name))", "score": -0.3883795025159252, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.39438087208952516, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4169475883449689, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.42315549320257495, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.4232918352444076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4248335710131516, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.425828348885894, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42833236041187484, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.4285577060430491, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(language),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.43043293976616226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.43078253401751276, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.038194079092135, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,136),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.18744165448806224, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.24242206055961493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3517854607359206, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3534517256427995, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.3862264108790072, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39810766058828667, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39992972471946925, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.41500755676017137, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.41831536222982685, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4239312712630852, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4246229742106847, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.42507787140805764, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.43515176561046043, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.4369344192008273, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.12520874004587995, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.13665286537525254, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.2215402575845067, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.23214710508837733, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.2717516591676944, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.32924683339972705, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3397065332163074, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.3449966845090047, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.3580384687377867, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), movie.title),oscar.number)", "score": -0.38959911425375016, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.425200855642072, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.43040765181605445, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.43664498097144455, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.sub_category),oscar.number)", "score": -0.4410077365391636, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.44185177714542706, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.2300282307243569, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.324050267872685, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_place))", "score": -0.32487374191669366, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3267095498256876, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3471899476459172, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.34722916970793727, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.34984922959891984, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3498884516609399, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.35103350380805926, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3545380923897228, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.35526934197701476, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3571973743427254, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_day),person.death_place))", "score": -0.4036347361868286, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_day),person.death_place))", "score": -0.40629401813983124, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2014),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(filter(getData(person),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.41064559191915273, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3293083380044069, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3394261039003459, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.34438793054621025, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.36234336980833476, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3698081355315322, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Mexico),getData(production_country),person.id,production_country.iso_3166_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3716003729485286, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3780333189821439, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Mexico),getData(production_company),person.id,production_country.iso_3166_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38230703315427955, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Mexico),getData(production_country),person.id,production_country.iso_3166_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3830200459142441, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.38549809205947794, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3871874352931767, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Mexico),getData(production_company),person.id,production_country.iso_3166_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3937267111039045, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3973052011891156, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.4059575860974492, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,production_country.iso_3166_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.42876033024469684, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.0634930987479935, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16156566915488949, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,>=,200000), country.name),country.name))", "score": -0.22261071082233205, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2539739157246485, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2907601114627049, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,200000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3094403937581485, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>=,200000), country.name),country.name))", "score": -0.33247273231045055, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3474540528061563, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3522328998502622, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3539315225123251, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.35511926123027115, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,200000), country.name),country.name))", "score": -0.36019394546304234, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar_nominee.movie_id,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37413749722924283, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,>=,200000), country.name),country.name))", "score": -0.3844407227789167, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3976002975598767, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.1747920191538717, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.18463913440119864, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.22383539147654968, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2336825067238766, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.25089136347185337, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2591074312456028, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2999347357945314, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,2016-03-17), oscar.number),oscar.number))", "score": -0.31334502067920816, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3260849365391778, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.year),oscar.number))", "score": -0.33548910625923184, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3364143613164736, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.category),oscar.number))", "score": -0.34302240278324236, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.year),oscar.number))", "score": -0.3453362364582871, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.category),oscar.number))", "score": -0.3528695329822976, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>=,2016-03-17), oscar.number),oscar.number))", "score": -0.3567425201512801, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.12499053114007108, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.21282107258962815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2199536007723224, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.23682084687754254, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.24652814242178003, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.25625708383751267, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2633896120202069, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.27687723831917777, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.28400976650187204, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32031324956706225, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3206643393113931, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32744577774975653, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3583584532099525, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.365346710772887, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3698334211561367, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), movie.title),movie.title))", "score": -0.11989973713278039, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.12710775493052626, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.19365340677233853, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2223753224892458, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)), movie.title),movie.title))", "score": -0.25695907207297575, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)), movie.title),movie.title))", "score": -0.26439657121225174, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,documentary (feature)), movie.title),movie.title))", "score": -0.27446132160212716, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3019899909139108, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.302047203979262, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,documentary (feature)), movie.title),movie.title))", "score": -0.3069573326492851, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3193242560274084, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,<=,documentary (feature)), movie.title),movie.title))", "score": -0.32653227382515426, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.33071190663081806, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.396280649439189, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,<=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.4004394445529945, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.18561064049500536, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.20845515052274843, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.21913423177634483, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2689966720801063, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),language.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.29351218607999935, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),keyword.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3158202174171517, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.3163491931967521, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),genre.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3186719451748672, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), oscar.year),movie.runtime))", "score": -0.3455224528604823, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),movie.original_language,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3469016184428855, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3471740380844112, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.3498727844780916, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3967007212824884, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3999328000402206, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.40195139995726126, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.06616800426854752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.22951609044685028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.38603180236532353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.4211905723287694, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.4816545803041663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.491213171979859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.5493798885436263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6450026664824691, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6699606493057217, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(country),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.6753687817545142, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6844584658683743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(genre),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.7158209640474524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),cast.movie_id))", "score": -0.7334154761338141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,nb), movie.revenue),movie.revenue))", "score": -0.7537436202110257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),person.name))", "score": -0.7693846738839056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.10151372243360166, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.15346141364818597, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.18781374681183352, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.21282600334511828, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.25644169623691704, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.31940987826294565, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.32479749165193145, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.34927094575273815, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.35083869046662125, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3562909190534411, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37336829426156964, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.40643734202897275, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4107535187296688, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4155759384327442, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.4195193526723182, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.06492152512785547, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.15809181679033457, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,35841901),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.22814397094763755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.31362261993157386, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.34074997326028844, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.34152748202238215, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3443906471803013, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3556939826860425, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.35750719816289034, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3935569980222883, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.40651809256278987, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,35841901), company.name),company.name))", "score": -0.407691903823667, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,35841901), company.name),company.name))", "score": -0.4184955664127026, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,=,35841901),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41998258126550153, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.42742117541554137, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.04518755280625768, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.1600380868994161, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.27520161278781335, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.3375372814767484, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,=,2100), country.name),country.name))", "score": -0.34878989961244766, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.35497309629012824, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.3602587047881179, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), movie.status),country.name))", "score": -0.3709403789945208, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<=,2100), country.name),country.name))", "score": -0.3891327422963685, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), oscar.sub_category),country.name))", "score": -0.39131336036366343, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,2100), country.name),country.name))", "score": -0.4003725915176292, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),movie.status))", "score": -0.40192254139212624, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<=,2100), country.name),country.name))", "score": -0.4091418849856427, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.4230223772221799, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),person.birth_place))", "score": -0.42673587153619263, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.08569151074070652, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.19754407686500877, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2454187047024012, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.death_place),person.birth_place))", "score": -0.2992778493004911, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3184506995192594, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),person.name,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3254859370241676, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.36267987802299484, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.movie_id,person.id), person.birth_place),person.birth_place))", "score": -0.38744779339978425, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.person_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.40360576404548193, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.death_place))", "score": -0.4085661369775598, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,1990),getData(person),oscar_winner.person_id,person.id), person.death_place),person.birth_place))", "score": -0.4111304154247934, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.4176933880322606, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),person.name,=,1990), person.birth_place),person.birth_place))", "score": -0.4178190744821906, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.4260934228587628, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.4274554506358509, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.05553093242633622, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.2948533633878249, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.29616298416500214, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3696515972308896, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.37096121800806686, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.38383939192453514, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.38514901270171237, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3855540339790879, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.38686365475626516, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4029403422690659, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.41996584984886554, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.42127547062604276, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.45113810907426816, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4524477380195192, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4586375465788164, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))", "score": -0.13371750075748423, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_place))", "score": -0.18449498821428278, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_place))", "score": -0.3027226488702581, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,m),person.death_place), person.death_place))", "score": -0.5586900399503065, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,m), person.death_place),person.death_place))", "score": -0.5659120848067687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,m),person.death_place), person.death_place))", "score": -0.5977755026397062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,m), person.death_place),person.death_place))", "score": -0.6166895722635672, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.death_place), person.death_place))", "score": -0.6190572665509535, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,=,m), person.death_place),person.death_place))", "score": -0.6245258312337683, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.name))", "score": -0.6288612952121184, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,m), person.death_place),person.death_place))", "score": -0.6385161738508032, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_day))", "score": -0.6505271067508147, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.6639199128039763, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_day),person.death_place))", "score": -0.6748323120773421, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.name))", "score": -0.679638782668917, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.0787527981447056, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1927-07-04), person.name),person.name))", "score": -0.4129021951230243, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_place))", "score": -0.43296525173354894, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1927-07-04), person.name),person.name))", "score": -0.45006101217586547, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),movie.revenue))", "score": -0.48158428363967687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.name))", "score": -0.5462957738782279, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_day))", "score": -0.6233317285077646, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>=,1927-07-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.6321395708078409, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),cast.person_id))", "score": -0.6508345037000254, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_place))", "score": -0.6587778522516601, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>=,1927-07-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.6630685139128633, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),language.name))", "score": -0.6633443265454844, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.6653944862773642, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1927-07-04), person.name),person.name))", "score": -0.6819112327648327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.runtime,>=,1927-07-04), person.name),person.name))", "score": -0.7198770669056103, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.12408987710669506, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.2081806184499348, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.2285428247081136, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.24019885484369655, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.2511848149149202, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,89), movie.id),movie.popularity)", "score": -0.2810133052576231, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.29852095866285516, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.29869224644372355, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_place,<,89), movie.id),movie.popularity)", "score": -0.31331386408497963, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.3303560047288264, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.34708056558525013, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.popularity),movie.popularity)", "score": -0.3556377625163387, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.3654272347672158, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.popularity),movie.popularity)", "score": -0.36729379265192164, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar_nominee),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.38515409339088824, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.vote_count))", "score": -0.2388992669621075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.original_language))", "score": -0.2647571327725018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.30151132369428524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.36126736426740536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.original_language))", "score": -0.38712523007779964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.4238794209995831, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.vote_count))", "score": -0.44447962069898495, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.original_language))", "score": -0.47033748650937923, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.vote_count))", "score": -0.48119637990384945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.budget))", "score": -0.49143502736478695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.original_language))", "score": -0.5070542457142437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))", "score": -0.5070916774311627, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.title))", "score": -0.5438084366360272, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), language.name),movie.vote_count))", "score": -0.5498543741741742, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5678552154583639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.3756421884136216, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.38869175040599657, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.4191900571422593, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.44333938194904476, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.443819482861727, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.id))", "score": -0.5121359048644081, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.5841087369481102, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5886925445483939, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_average))", "score": -0.6020662604132667, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.6203770941356197, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.628063329084398, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.6322404132770316, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.id))", "score": -0.6529052598634735, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.6565655978010909, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.6734720548229234, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.034000448241390195, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.32610282917912287, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.4302518468687931, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.47953759875713725, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5151505998709149, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5336964579694243, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5644363517592591, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5829822098577685, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6185952109715461, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.runtime)", "score": -0.6206563085513878, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6251118375473956, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_count)", "score": -0.6438697716184868, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6493200919209078, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,pl), movie.id),movie.vote_average)", "score": -0.6613309670867463, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6678809722172385, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.09798039531737886, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.141221582458799, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.23441771865959635, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.24184745263163324, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.2753762748028185, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), movie.title),company.name))", "score": -0.28185268127497254, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.3008874933446754, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), genre.name),company.name))", "score": -0.3134808807192413, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.33092243176903674, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.34045409458077724, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.3619684690251701, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,>,2012-08-06), company.name),company.name))", "score": -0.38402777778422365, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), keyword.name),company.name))", "score": -0.38504537247894943, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), country.name),company.name))", "score": -0.38776338736574445, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>,2012-08-06), company.name),company.name))", "score": -0.3909865015390946, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.11371264844255735, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.12977748487197208, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.19316407638923425, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.24327665106211493, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3111764105197206, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3195250303274225, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3250617895357102, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.33086998576007187, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.342453565987695, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,362), keyword.name),keyword.name))", "score": -0.3428275820875329, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.death_place))", "score": -0.36476108513326094, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.name))", "score": -0.38115298166017775, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3973167778427431, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3979040873731832, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),person.name))", "score": -0.40956329218375986, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.1527627558334444, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.16416941249415024, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.1768772659918658, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.18212459167317963, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.22060713718282365, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.2704138721927375, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2824015074670474, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.30651601762546876, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),country.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.32158628551952506, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.32812807839650426, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),oscar.category,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3417371091775389, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),country.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.3475400228718802, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.35024588881642665, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3529708645029675, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3572924576630261, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2248528135322138, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.23092412419034158, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.250398297016201, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2824271819681067, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.28849849262623445, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.30797266545209384, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.31600693906729915, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3220782497254269, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3415524225512863, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.373581307503192, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3747633132078141, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3776868890555878, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.3788308397497811, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3796526134294789, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.38490215040790887, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.19051759265857982, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.title),movie.vote_count))", "score": -0.5053353155453806, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.6), movie.vote_count),movie.vote_count))", "score": -0.5053845340808039, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.title))", "score": -0.5105072645892506, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), oscar.number),movie.vote_count))", "score": -0.5462113464673166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.6), movie.vote_count),movie.vote_count))", "score": -0.5603495235045557, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,=,5.6),movie.vote_count),movie.vote_count))", "score": -0.5806805396641721, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.budget),movie.vote_count))", "score": -0.5810457909901743, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.vote_count))", "score": -0.6545229865098562, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count),movie.vote_count))", "score": -0.663366603773437, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(spoken_language),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.vote_count))", "score": -0.6652690262454307, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), person.death_day),movie.vote_count))", "score": -0.6707302773793344, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(spoken_language),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_count),movie.vote_count))", "score": -0.6741126390788699, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),oscar.number))", "score": -0.6758897988547687, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.vote_count))", "score": -0.7125164434772023, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.045704322208621306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,tr), movie.id),movie.popularity)", "score": -0.29924239015883697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.46710116158925935, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.4746642433416264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5712042757143398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5868120715581525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6087413714355316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.id),movie.popularity)", "score": -0.6102763971470397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6236686763974707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.6400202964704058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.6696835938781278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.673456005715081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.release_date))", "score": -0.6874264330072037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.7070473771546714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.status))", "score": -0.7544054836434952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.030666532167430916, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.23279212456772738, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,>,0.041651), country.name),country.name))", "score": -0.2838023806587751, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), movie.status),country.name))", "score": -0.3318009178990072, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.35867810751004614, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), person.birth_place),country.name))", "score": -0.37055335230065467, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.3976083597710389, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.gender,<,0.041651), country.name),country.name))", "score": -0.4002142959484799, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,0.041651), country.name),country.name))", "score": -0.40074924442246546, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.category),country.name))", "score": -0.402586147728693, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),movie.status))", "score": -0.402763755710074, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.sub_category),country.name))", "score": -0.4036823065568299, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), genre.name),country.name))", "score": -0.41065850389821307, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), production_country.movie_id),country.name))", "score": -0.41392560937892603, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.movie_id,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.4144761952841192, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.09421286801079987, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.24227807269427784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.45267901834991203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.budget)", "score": -0.47983991506223206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.4997506024779401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.5272033758954336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5542244846176145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),oscar.number)", "score": -0.5590325109049332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5595467881536743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.6086084686763563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,spoken_language.movie_id), movie.title),movie.title))", "score": -0.623523722976717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,10.4764), movie.title),movie.title))", "score": -0.6278844599073636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title)", "score": -0.6507262755490899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,movie.id), movie.title),movie.title))", "score": -0.6691454822867221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.runtime)", "score": -0.6859237669299603, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.027620298718829872, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.42286126774342847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5822198585847218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6060804835760791, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.6601579384187062, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.vote_count),movie.revenue))", "score": -0.703049193998595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), person.death_day),movie.revenue))", "score": -0.7093954793417652, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.7605996542843059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.7670554629767139, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7709793396534224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7742968745769758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.name))", "score": -0.8007953115047712, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,69), movie.revenue),movie.revenue))", "score": -0.8103342656286259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), person.death_place),movie.revenue))", "score": -0.8196376673186023, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.8227547951282759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.1930088231669196, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.19766482877518407, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.22816345308318475, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.2969179324337047, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name)", "score": -0.38218563177482656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.39117301079031436, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,5.2),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.40074539814875687, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.402758792068898, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.4135888465723397, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),person.name))", "score": -0.4247492462505059, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),person.name))", "score": -0.42548140444767524, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.42752590880263597, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.4487134139454793, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), person.name),language.name))", "score": -0.4538510732014723, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),person.name))", "score": -0.4599038761667711, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.10794914614911318, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.20272424155154084, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.21458260994946596, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.25592502327537375, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2755163740742488, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.2850856160717237, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2859600145273041, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.31109457436020355, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.32389527989710415, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.3248847427177321, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.326653575414789, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3414002674128828, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.3517250164096488, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),person.death_place,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.35256541956808934, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(getData(genre),genre.name,!=,Action),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.39143537838378245, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.17073080206407512, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.20311211764203743, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.20355520054291745, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.21063733165244805, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.23433638791829473, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.id),oscar.number)", "score": -0.24031165317490732, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),oscar.number)", "score": -0.27532261474211644, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.35948237849756415, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.36333728825520284, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.runtime),oscar.number)", "score": -0.3647165110301159, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.39186369407552646, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.sub_category),oscar.number)", "score": -0.40350375093416024, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.year)", "score": -0.4154093075197628, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.4527933005117891, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.454468970078996, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.013035049210884608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.release_date),movie.budget))", "score": -0.555404869854101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.release_date))", "score": -0.6611784601263935, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.budget))", "score": -0.6731362026330316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.revenue),movie.budget))", "score": -0.6880009453889215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.revenue))", "score": -0.6981741690688068, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.budget),movie.budget))", "score": -0.71625111195317, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.title),movie.budget))", "score": -0.7461139243241632, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.title))", "score": -0.7811655902914936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Rumored), movie.budget),movie.budget))", "score": -0.7908007273363182, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.budget),movie.budget))", "score": -0.8128241071390221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Rumored), movie.budget),movie.budget))", "score": -0.8154249558137963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.vote_count))", "score": -0.8193951153807575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.budget),movie.budget))", "score": -0.8217368559417082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.vote_count),movie.budget))", "score": -0.845906464397558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.13315099056133264, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.15614111268513972, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.2157084577658454, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.2518048696961285, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.31604813755081557, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.3183140267921388, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(getData(person),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.32751198645699525, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Labenne), movie.id),movie.vote_average)", "score": -0.32778362446784737, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.33903825967462264, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.3413041489159459, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3668096708519595, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.38979979297576656, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3931660013023501, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.gender,!=,Labenne), movie.id),movie.vote_average)", "score": -0.39876354545086, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.3996427993179929, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)", "score": -0.03333472023286535, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<=,177), movie.id),movie.vote_count)", "score": -0.4325042562942431, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,177), movie.id),movie.vote_count)", "score": -0.49179238125503755, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.vote_count),movie.vote_count)", "score": -0.5745643060715874, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<=,177),movie.vote_count)", "score": -0.6712721231075071, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_average)", "score": -0.7345410348070208, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<,177),movie.vote_count)", "score": -0.7368398435337241, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.budget)", "score": -0.7871598443374892, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.budget),movie.vote_count)", "score": -0.7878724806801474, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.runtime)", "score": -0.8004035080451968, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,177), movie.id),movie.vote_count)", "score": -0.9247299581297672, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,177), movie.id),movie.vote_count)", "score": -0.9295666327390261, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.revenue)", "score": -0.9417107528629304, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.revenue),movie.vote_count)", "score": -0.9467873113094424, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),person.death_day)", "score": -0.9556187487163023, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.13809390803195845, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.17181309893088945, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.26135457966283965, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.2689912680242425, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.2702997566687505, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.2750654873199918, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.28938175486696727, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.3027104589231735, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3107835258989833, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.32986552409720005, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.35604883234177764, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.title))", "score": -0.35907124696343795, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects), movie.title),movie.title))", "score": -0.3669760086563025, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.38190470885493116, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.title,=,visual effects), movie.title),movie.title))", "score": -0.3918207396449396, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.028087576429193607, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.33481126210150447, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.37237989175106073, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3729116643996421, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3780656534593472, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),company.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.39997580319033277, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4054782375350459, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4101919311077412, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42390893727030826, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4262355298919726, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),person.death_place,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42626850855920834, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42851991350766827, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.43089945276053654, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.43365813524086266, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(has_keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.43411929444356867, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.24101501094440128, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.2569650680593304, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3079344144535132, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.31504772311305296, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.32388447156844236, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),oscar.number)", "score": -0.32693104266952633, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.32831915140072565, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.3309977802279821, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.3428810997844554, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.34426920851565473, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.375603381252026, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.movie_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3787376857156958, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3819671266221649, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.39155343836695516, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.39385044617863824, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.10149141484159237, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.14674772259410981, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.1749013540912873, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.19257382738621004, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.2866392876971745, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.30280718172947196, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.306205427158093, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.3252615848754083, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,7.1), company.name),company.name))", "score": -0.3480634894819894, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.3514617349106105, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,<=,virginity), company.name),company.name))", "score": -0.36351056137597854, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<=,7.1), company.name),company.name))", "score": -0.3643272668638891, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,7.1), company.name),company.name))", "score": -0.37456355234148747, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.38438709405838917, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,virginity), company.name),company.name))", "score": -0.3896598326842451, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)", "score": -0.03843105991360915, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,127), movie.id),movie.popularity)", "score": -0.41150845965696464, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,=,127),movie.popularity)", "score": -0.46064032654846815, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,127), movie.id),movie.popularity)", "score": -0.5570974843705045, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,127),movie.popularity)", "score": -0.706622754394847, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity)", "score": -0.7203845638481982, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,127),movie.popularity)", "score": -0.7957642740912002, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,127), movie.id),movie.popularity)", "score": -0.8635973390642598, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.runtime)", "score": -0.8842688927986522, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.revenue)", "score": -0.8876059434608509, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,127), movie.id),movie.popularity)", "score": -0.9027560737169944, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,127), movie.id),movie.popularity)", "score": -0.9122577449924467, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,127), movie.id),movie.popularity)", "score": -0.9246819748771418, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,127), movie.id),movie.popularity)", "score": -0.9329661990356161, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,null,127), movie.id),movie.popularity)", "score": -0.9507579635680397, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.22085853097528202, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.22652656505611654, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2836310848183441, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.296726624110113, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3023946581909476, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.33914688783992664, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.34595368737735455, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3556030991418311, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.35590966985465705, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.36487060233380236, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3705386364146369, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.3716222462255401, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.38459455333411363, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.3889548164988264, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.40673763510189254, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.32425051275640726, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3278595821119082, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.33249634122035965, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3712078342214227, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.37484177561868504, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.37947853472713655, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.38254631484106444, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.38349918073499684, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.38514642704343577, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.38718307394951595, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.38813593984344835, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.38947390858083963, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.3897831861518873, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.39421866620105145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.39885542530950296, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.054994431905672644, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), company.name),company.name))", "score": -0.11027122628698638, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Original Sin), company.name),company.name))", "score": -0.26110772608402355, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Original Sin), company.name),company.name))", "score": -0.35611652787032666, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Original Sin), company.name),company.name))", "score": -0.3688841608903884, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Original Sin), company.name),company.name))", "score": -0.37547904707292623, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), movie.title),company.name))", "score": -0.37610307351417976, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,=,Original Sin),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3920042267358885, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),movie.title))", "score": -0.4057491490525969, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,Original Sin), company.name),company.name))", "score": -0.4085298890701467, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41429559729668697, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41470969150432224, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.4281082145974125, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), movie.title),company.name))", "score": -0.43137987703266084, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.43556723695728716, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.1065373561807142, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.261452104188242, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.27691509878195636, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2884097355051166, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2998855015409776, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.30481068231297725, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.31391624361191994, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(spoken_language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33307590386372676, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,>,ar), language.name),language.name))", "score": -0.3339720403457937, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.333991904547536, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.3407036000753713, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), person.name),language.name))", "score": -0.3430012988221284, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.34345047150089714, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.34507408462115896, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),person.name))", "score": -0.36453417768352503, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.048656205297366806, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.2795482705708709, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.32875260593258376, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2),company.name), company.name))", "score": -0.3458756913933591, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,5.2), company.name),company.name))", "score": -0.376474141913873, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),person.birth_place))", "score": -0.3855194589617635, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), movie.title),company.name))", "score": -0.39614196904070964, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.3961429835431654, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,5.2), company.name),company.name))", "score": -0.39758905946923134, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),movie.title))", "score": -0.41582598764335377, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.42049246944657565, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), person.birth_place),company.name))", "score": -0.4231540671274063, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.4243643331160411, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.4333007262692558, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),production_company.company_id))", "score": -0.43832160939966625, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_day))", "score": -0.23055848860531114, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.29384208597184625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_place))", "score": -0.3568930887558963, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_place),person.birth_day))", "score": -0.47128118328691926, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_day))", "score": -0.4848763533809688, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.gender))", "score": -0.48682692283182405, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_day))", "score": -0.4880024083831813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_place), person.birth_day))", "score": -0.4993353673198726, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.5299457436049124, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.birth_day), person.birth_day))", "score": -0.5539817680546548, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.name))", "score": -0.5910808705666568, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.birth_day))", "score": -0.6060155288869282, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_place))", "score": -0.611210953531554, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_place))", "score": -0.6143370085337665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.id))", "score": -0.6199333035328891, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.03003081655697315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.32637880718903034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.title))", "score": -0.48264731582821696, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.title),movie.release_date))", "score": -0.5342898310591409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.budget),movie.release_date))", "score": -0.5700233520437905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,424), movie.release_date),movie.release_date))", "score": -0.6027510610838362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.6100330201406905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.budget))", "score": -0.6707990330141911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.7592449726034829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,424), movie.release_date),movie.release_date))", "score": -0.7629618864120857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.title))", "score": -0.7789953064602742, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.runtime),movie.release_date))", "score": -0.7900178374220559, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.title),movie.release_date))", "score": -0.830637821691198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.id),movie.release_date))", "score": -0.8409218729902932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.status),movie.release_date))", "score": -0.8520267547537514, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.015755778302263934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_count))", "score": -0.5400003047034261, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,160583018), movie.vote_average),movie.vote_average))", "score": -0.5467866637118277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_count),movie.vote_average))", "score": -0.5575737670369563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,160583018), movie.vote_average),movie.vote_average))", "score": -0.573045489967626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.runtime),movie.vote_average))", "score": -0.6767508700795588, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.6807745436381083, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.runtime))", "score": -0.7344392986342427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.7944276310226996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.8246042109749396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.original_language))", "score": -0.8307753057524678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.popularity))", "score": -0.8600287885710713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.popularity),movie.vote_average))", "score": -0.8625543430753169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), person.name),movie.vote_average))", "score": -0.8711575582929072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.title))", "score": -0.8791754097983357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)", "score": -0.02860675565013927, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,3.7), movie.id),movie.popularity)", "score": -0.4132870423761083, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,3.7), movie.id),movie.popularity)", "score": -0.5277823009904125, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,3.7), movie.id),movie.popularity)", "score": -0.6177325033788231, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,3.7),movie.popularity)", "score": -0.6823148564991439, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,3.7), movie.id),movie.popularity)", "score": -0.7026168921221172, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,3.7), movie.id),movie.popularity)", "score": -0.752784510598882, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.runtime)", "score": -0.7872633406255856, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,3.7), movie.id),movie.popularity)", "score": -0.8226595650114408, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.release_date)", "score": -0.8510257760574083, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,3.7), movie.id),movie.popularity)", "score": -0.8567949388349432, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.revenue)", "score": -0.8713942909821125, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.popularity),movie.popularity)", "score": -0.9103874407624967, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.popularity,=,3.7),movie.popularity)", "score": -0.9150889938095027, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,3.7), movie.id),movie.popularity)", "score": -0.9233099004505969, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.1626496647367672, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.1629481953502019, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.16379129582652638, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.1945650184006302, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.2952836755608981, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.2958684034040771, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.31774811340171044, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3185912138780349, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.32887721423187144, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.33070684746783097, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.331217889668531, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3383377670037529, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.33894227571393426, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3453985329324778, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3507727267647554, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
