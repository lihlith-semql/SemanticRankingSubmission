{"index": 0, "beams": [{"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.08766162681342358, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.16901928250250736, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.27029818696730357, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.29973461576227967, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3402433661471065, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.35165584265638733, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3566213177822837, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36222520791421553, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3640586249071243, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.36559447504583537, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3667794922370853, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37397627468088357, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??? / ???), movie.id),movie.popularity)", "score": -0.37819837852988947, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3810922898825038, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of movies that are not spoken on ??? / ??? ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.gender,!=,??? / ???), movie.id),movie.popularity)", "score": -0.3982384592567102, "correct_code": "avg(distinct(merge(filter(getData(language),language.name,!=,??? / ???),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.07892485025759541, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.1814458656718372, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.2383644600466673, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.27864220438000076, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.3112739392119411, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.38405101984590534, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(production_company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4007918613539891, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.name,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4122896414344374, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.4124344881272292, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.41885427602705233, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(getData(company),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4192441533403743, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Paramount Pictures), movie.vote_count),movie.vote_count)", "score": -0.4238538511330621, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.movie_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_count)", "score": -0.4345856125000467, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Paramount Pictures),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4481683066424104, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies produced by the company Paramount Pictures?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Paramount Pictures), movie.id),movie.vote_average)", "score": -0.4585031466506575, "correct_code": "avg(distinct(merge(filter(getData(company),company.name,=,Paramount Pictures),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.12138572262873719, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.16892156423773508, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.269742374173368, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.28553307277935763, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.31405842532284745, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>,1992-11-20), oscar.year),oscar.year))", "score": -0.31727821578236587, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.3252314310428491, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.runtime))", "score": -0.3301383269034721, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3311180976018887, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.sub_category))", "score": -0.3330689143883555, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),person.name))", "score": -0.3504201359558447, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), person.name),oscar.year))", "score": -0.3615942669318453, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),oscar.year))", "score": -0.3724407526552468, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,!=,1992-11-20), oscar.year),oscar.number))", "score": -0.372767272651847, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}, {"orig_question": "In how many distinct years were oscars won by a person that did not die in 1992-11-20 ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,1992-11-20), oscar.year),movie.vote_average))", "score": -0.3737874501192004, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1992-11-20),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),cast.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3156759783124362, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3259427491393859, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3335395881748695, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3660627623584225, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.36996778929726554, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3791358612565142, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.38329791598806595, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,2006-03-07), genre.name),genre.name))", "score": -0.3844711338656287, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3887188688807732, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.38906207082252986, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3897639526704633, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),genre.name))", "score": -0.390107173173985, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,has_genre.genre_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,=,2006-03-07), genre.name),genre.name))", "score": -0.3957373006566674, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.death_day,=,2006-03-07), genre.name),None))", "score": -0.4529796385678541, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre in which a person was part of the cast and died at 2006-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(filter(getData(person),person.birth_day,=,2006-03-07),getData(cast),person.id,cast.person_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),cast.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id),person.birth_day,=,2006-03-07), genre.name),None))", "score": -0.45324623297137534, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,=,2006-03-07),getData(movie),cast.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.budget),movie.budget))", "score": -0.15917193908171612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,The Last Legion),movie.budget),movie.budget))", "score": -0.38122735377328354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.revenue),movie.budget))", "score": -0.45701203886346775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.vote_count),movie.budget))", "score": -0.5185082668431278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,<=,The Last Legion),movie.budget),movie.budget))", "score": -0.5280183946706529, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.5502800040582849, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,The Last Legion),movie.budget),movie.budget))", "score": -0.5576635694123979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.5753579022663703, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,=,The Last Legion), movie.id),movie.budget)", "score": -0.589068885193396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.5921285493302133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.revenue),movie.budget))", "score": -0.5953568777803777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget),movie.budget))", "score": -0.5989057269153697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,=,The Last Legion),movie.title),movie.budget))", "score": -0.6109491700299259, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.revenue),movie.budget))", "score": -0.6204347714891004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}, {"orig_question": "What is the budget of The Last Legion?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.budget,=,The Last Legion),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget),movie.budget))", "score": -0.623983625123455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,The Last Legion), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.2476997095952299, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.24798150735459712, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),oscar.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.2731547413385106, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.2945712506888574, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.31843802595805903, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3210917447365188, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3345200192527899, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.34855931184698535, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.35355383059324064, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.3544187945708299, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id),person.gender,=,f), genre.name),genre.name))", "score": -0.35753325597075225, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.3650807669811353, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id),person.gender,=,f), genre.name),genre.name))", "score": -0.37692194743857443, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),oscar.id,oscar_winner.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.3790088729273289, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there movie genres with a female oscar winner?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,f), genre.name),genre.name))", "score": -0.38194674565914793, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,f),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.031319748325822835, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.22706519764937494, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(has_keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.36777027572728477, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.37702716094425875, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,497), keyword.name),keyword.name))", "score": -0.38284445366249165, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,production_company.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.3924495958838127, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.407114144155932, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), oscar.sub_category),keyword.name))", "score": -0.40800356031405316, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.movie_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4120195584110307, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42104403427248577, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.4236776365465786, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42802359796781475, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.keyword_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.42897261739119147, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,has_keyword.movie_id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),keyword.name))", "score": -0.43069186679314175, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "How many distinct keywords do the movies with a vote count of at least 497 have ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,497), keyword.name),has_keyword.keyword_id))", "score": -0.43660847072712056, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,497),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.0698104609909933, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.329309275111882, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.4098597147676628, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.4544941389176529, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.birth_place))", "score": -0.5367788306612056, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.5809943547277588, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.5848324595145398, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan), person.name),person.gender))", "score": -0.6066236726182979, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6286697310570162, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6369760710458219, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Zehner, Saskatchewan), person.birth_place),person.name))", "score": -0.6408142157038783, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6434661544730268, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6473044688608882, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6634306290361565, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}, {"orig_question": "Who was born in Zehner, Saskatchewan?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Zehner, Saskatchewan), person.name),person.name))", "score": -0.6768037655565422, "correct_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Zehner, Saskatchewan),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.06618620723738648, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))", "score": -0.10605886405174061, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,nl), country.name),country.name))", "score": -0.22755149721201673, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,nl),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.26607848499775527, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,nl), country.name),country.name))", "score": -0.31723092666279096, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,nl),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33433941488120017, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.original_language,=,nl),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3573584366859637, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), movie.status),country.name))", "score": -0.4114944966527584, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.42916435450275825, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.44408509607128477, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),movie.status))", "score": -0.44678571919074767, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.45737453167352077, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,nl), country.name),person.birth_place))", "score": -0.4581880534123899, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.original_language,=,nl), country.name),country.name))", "score": -0.46305883724959784, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}, {"orig_question": "In how many countries were movies produced in which the original language is nl?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))", "score": -0.46739303514547864, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,nl), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.341717439007001, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.35408984904840474, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.3552528794260383, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.36762528946744205, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.3817398935544087, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.3884733902348371, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.39411230359581245, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.395275333973446, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.oscar_id), person.death_day),person.death_day))", "score": -0.39773207183606646, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.40084580027624084, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_day))", "score": -0.4020088306538744, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar.id), person.death_day),person.death_day))", "score": -0.40668554101588683, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar_winner),getData(oscar),movie.id,oscar_winner.movie_id),oscar.id,movie.id), person.death_day),person.death_day))", "score": -0.40764777212067704, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),getData(oscar),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),person.death_day))", "score": -0.4080653235339615, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}, {"orig_question": "When are the deathdays of the oscar winners with an oscar number less than 40?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<,40),merge(getData(oscar),filter(merge(getData(oscar_winner),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),person.death_day,>,40),oscar.id,oscar.id),oscar_winner.movie_id,movie.id), person.death_day),None))", "score": -0.47584455042246315, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,<,40), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.10753689716511872, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.28799956302100327, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.32289504270011093, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.4659430907195201, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.46950231223308947, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.id))", "score": -0.5108450577681651, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.5480511608620873, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.55703433555027, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.vote_average))", "score": -0.5951648579066386, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.649964978088974, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.6848604577680817, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.title))", "score": -0.689606569809257, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.original_language))", "score": -0.7005527244036784, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.7007216147467261, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.status))", "score": -0.7285138267179718, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))", "score": -0.012389914849336492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,48000000), movie.original_language),movie.original_language))", "score": -0.5208405174962536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), language.name),movie.original_language))", "score": -0.6163882899745659, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),language.name))", "score": -0.666664425534691, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,48000000), movie.original_language),movie.original_language))", "score": -0.6824029006711498, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,48000000), movie.original_language),movie.original_language))", "score": -0.7255145826093212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.revenue))", "score": -0.7528368274397508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,48000000), movie.original_language),movie.original_language))", "score": -0.766245238151896, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,48000000), movie.original_language),movie.original_language))", "score": -0.7924037497905374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,=,48000000), movie.original_language),movie.original_language))", "score": -0.797568492260325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,48000000), movie.original_language),movie.original_language))", "score": -0.8030008595851541, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,48000000), movie.original_language),movie.original_language))", "score": -0.8244339149860025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.vote_average),movie.original_language))", "score": -0.8272345352634147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.popularity),movie.original_language))", "score": -0.8342094707950309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with a budget of 48000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,48000000), movie.original_language),movie.original_language))", "score": -0.8520927200042934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,48000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.05679918183490156, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,No Language), movie.id),movie.budget)", "score": -0.23122367580330389, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.25852299387937255, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.47664353092591305, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5714208996655172, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.5932403707416075, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,No Language), movie.id),movie.budget)", "score": -0.6543302755270637, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,No Language), movie.id),movie.budget)", "score": -0.6572375367872957, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.6689973723664916, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),oscar.number)", "score": -0.6885933798661176, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.vote_count)", "score": -0.6964201426589868, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.budget),movie.budget)", "score": -0.6965509455560427, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,No Language), movie.id),movie.budget)", "score": -0.7043992348575783, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,No Language), movie.budget),movie.budget)", "score": -0.7120679474938721, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}, {"orig_question": "What is the sum of the budgets from movies with No Language?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),person.death_day)", "score": -0.7202611687204128, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,No Language), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.09298134582058992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.13065756844298448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.5116443707229337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6589044762573768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6632653660102603, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.683781990294804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.6881428800476874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7064355466037332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7095604170604989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7107964363566167, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7125911000612092, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7169519942788449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.budget),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7171432157313378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),movie.id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7233686121120004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies that were released on 2004-03-05 or later?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<=,2004-03-05), movie.revenue),movie.revenue))", "score": -0.7591523877199506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2004-03-05), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))", "score": -0.13904087561604683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.id),movie.popularity)", "score": -0.2030456693345228, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.budget,=,5500000),movie.popularity)", "score": -0.40997982574357994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,5500000),movie.popularity)", "score": -0.5947704145455481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity)", "score": -0.6055583772322566, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.original_language,=,5500000),movie.popularity)", "score": -0.6236862987702825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,5500000), movie.popularity),movie.popularity))", "score": -0.6509163914197416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.popularity),movie.popularity))", "score": -0.7238759763022244, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.title,=,5500000),movie.popularity)", "score": -0.7712197435160106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,5500000), movie.id),movie.popularity)", "score": -0.8048533696896687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,5500000), movie.popularity),movie.popularity))", "score": -0.8141915566702664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.release_date))", "score": -0.8456238085818768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,5500000), movie.id),movie.popularity)", "score": -0.8767157645381315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.status))", "score": -0.8886053139758587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity with a budget of 5500000?", "inferred_code": "avg(filter(getData(movie),movie.revenue,=,5500000),movie.popularity)", "score": -0.9025172259726689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,5500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.023581324695029236, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.2774668921625123, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.35248546408834747, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.36516736500568153, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),production_company.company_id))", "score": -0.3709785768370356, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.3914988089182494, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),company.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.3982476736781704, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.40756372619291553, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4077977220310808, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.4135579576059856, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.id),company.name))", "score": -0.41965960952905246, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.42703916006100845, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.status,=,Rumored), company.name),company.name))", "score": -0.43360976906687476, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.id))", "score": -0.4353884783082422, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different production companies exists with movies having the movie status Rumored?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.443005887025969, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.10055722922971747, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.13127692621932183, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.16226365055212738, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2469373941480401, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.2667537688385685, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.2760438526750205, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.28531760742202045, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.29326090139381333, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Romance),getData(genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.32236735992079374, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(has_genre),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.348577434048356, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3771932308866588, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.38559478939888087, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.39309388634277326, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Romance),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.39562940935798774, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies have not the genre Romance?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Romance),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(genre),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.41879725132318646, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Romance),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.11522215133722663, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.15630168650082313, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.1895490715430318, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.25154287790783886, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))", "score": -0.2845384310404577, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.2851412754798276, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.29918405606188947, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3044212434640942, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3184640240461561, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_keyword),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3204032823009413, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3737090074296452, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Espa\u00f1ol),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.37498543902344805, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),language.iso_639_1,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.37736305312374535, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,Espa\u00f1ol),getData(has_keyword),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.3939840588545788, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that were translated in Espa\u00f1ol ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.396643021108012, "correct_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Espa\u00f1ol), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.0459828082839716, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.id),movie.runtime)", "score": -0.2249401206480942, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.runtime),movie.runtime)", "score": -0.23692610307998138, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.runtime)", "score": -0.29488476930014745, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.3596584334785008, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.36931787842888836, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.release_date),movie.runtime)", "score": -0.3804905726067515, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.name,production_company.company_id), movie.id),movie.runtime)", "score": -0.40260404631778995, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4187093665088829, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(oscar_nominee),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.42621658663553486, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.runtime)", "score": -0.4337404831162537, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,company.name), movie.id),movie.runtime)", "score": -0.43753517647511436, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Huckabee's), movie.runtime),movie.runtime)", "score": -0.4391495576480491, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Huckabee's),getData(movie),production_company.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.4439303704803426, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that were not produced by the company \"Huckabee's\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,!=,Huckabee's),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_country.iso_3166_1), movie.id),movie.runtime)", "score": -0.45554816035370577, "correct_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Huckabee's), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.10749615691682513, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.15715035496594149, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.20946753114362573, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.2420959213756615, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(has_genre),movie.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.25912172919274207, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.32287322078520575, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_country.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3464344976287843, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,<,260095987), genre.name),genre.name))", "score": -0.34892348194097006, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),language.iso_639_1,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.35983858169946065, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.376552792910942, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_average,>,Italy), genre.name),genre.name))", "score": -0.3772987645409464, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), person.death_place),genre.name))", "score": -0.37806447743626015, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.38000036842629753, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3875633868663426, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}, {"orig_question": "Which genres of movies produced in Italy have reached a higher revenue than 260095987?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))", "score": -0.3891566358385574, "correct_code": "done(extractValues(distinct(filter(merge(filter(merge(getData(country),merge(getData(production_country),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Italy),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,260095987), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<=,1934-03-28), country.name),country.name))", "score": -0.25742840882843926, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3092986497424289, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3150771000614666, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.32170076490758726, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,<,1934-03-28), country.name),country.name))", "score": -0.331660319933798, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,<,1934-03-28),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.34283568113073776, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.3535451396199082, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3636492408864827, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.37160648822055903, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.37565102644567566, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3811469003258884, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<,1934-03-28), country.name),country.name))", "score": -0.38597101446732235, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.38879844538737096, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,production_country.iso_3166_1),person.birth_day,<,1934-03-28), country.name),country.name))", "score": -0.391303281460437, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,production_country.iso_3166_1), person.birth_place),country.name))", "score": -0.3973651108692731, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.15874245566896106, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.22122952492107414, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.23528080935341708, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2527098197386329, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.25349022711617947, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2539577814808104, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.movie_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2878005878159649, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.runtime,>,2013-05-09), movie.id),movie.popularity)", "score": -0.2923059592948529, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.31519688899074594, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3159772963682925, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.31644485073292344, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.oscar_id),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3292481734230889, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),person.birth_day,>,2013-05-09), movie.id),movie.popularity)", "score": -0.33002858080063546, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.person_id),movie.popularity,>,2013-05-09), movie.id),movie.popularity)", "score": -0.3304961351652664, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of oscar winning movies released after 2013-05-09?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2013-05-09), movie.id),movie.popularity)", "score": -0.39469880939021446, "correct_code": "avg(distinct(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),filter(getData(movie),movie.release_date,>,2013-05-09),oscar_winner.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.17719651348306797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.21352622992708348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.33273034877493046, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3597833044768777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3961130209208932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3972577411623206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.43634044713689946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.49291831962182187, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5153171397687402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5292480360658374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5516145784349646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5547854375035968, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5798445321561303, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,>,1984-05-01),movie.revenue), movie.revenue))", "score": -0.6420930537351524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,!=,1984-05-01),movie.revenue), movie.revenue))", "score": -0.6467977005013381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.04341856699466007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime)", "score": -0.38998721301608924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.runtime),movie.runtime))", "score": -0.476496918425255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2012-04-19), movie.runtime),movie.runtime))", "score": -0.488545520529442, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.release_date))", "score": -0.6802008436716278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.title))", "score": -0.6926244782007416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.7183980070476537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,2012-04-19), movie.id),movie.runtime)", "score": -0.7354246610166109, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.759970279825211, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8552223168735509, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.runtime),movie.id))", "score": -0.8585045026338776, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.vote_average),movie.runtime))", "score": -0.8677002265540068, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.title),movie.runtime))", "score": -0.8811016752806609, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2012-04-19), movie.id),movie.runtime))", "score": -0.8858943059531157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}, {"orig_question": "Find the runtime of the movies that released not before 2012-04-19.", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,<,2012-04-19), movie.runtime),movie.runtime))", "score": -0.8877450028594467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2012-04-19), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.10460964334197342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.32717779177731526, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3351364389172042, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.33606228152848217, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.35126998729908865, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.37361917573259995, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.38250366548376685, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.38338688453769865, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.3995204329195831, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4062616295447313, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.4151461192958982, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.41808954405741205, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,=,1911-08-06), movie.title),movie.title))", "score": -0.43422310143802195, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.title),movie.title)", "score": -0.47842036272572425, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies in which persons born in 1911-08-06 were involved?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,=,1911-08-06), movie.id),movie.title)", "score": -0.5428770343210688, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,1911-08-06),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.025251694867620245, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.3224129890149925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.3897613500303123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7261470173543785, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_average),movie.vote_count))", "score": -0.7300076561805326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_average))", "score": -0.738185149995843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.title))", "score": -0.7548793381138239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7839308594411705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7906868843419943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.7926383404119406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.title),movie.vote_count))", "score": -0.7933994012710173, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8181163458211813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8469313000387046, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.8540723709447775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movie vote counts of movies with a popularity of 24.1536?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))", "score": -0.9054457332094898, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,24.1536), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.0935573417943015, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.1863075428409805, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.276719888131927, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.27932568418117487, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.2882044952725169, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.29238238259414595, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.299761077558252, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.33481902232651406, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3472674003830706, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.35210990804414527, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.35903238033027385, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.36063081956473636, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3614540154638896, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.gender,=,m),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.385132588035943, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for the oscar winners with the gender male?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_winner),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),crew.movie_id,oscar.id),person.id,oscar_winner.person_id), oscar.category),oscar.number)", "score": -0.40824271824365804, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.gender,=,m), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.023801123435987392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.41842380230445997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6181489246118872, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.638891786980821, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.6427268690349592, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language)", "score": -0.6933652567776013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), language.name),movie.original_language))", "score": -0.7001424297377525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.id),movie.original_language)", "score": -0.7501695027153815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7527144568193762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),company.name,=,Def-Con 4), movie.original_language),movie.original_language))", "score": -0.7976075119258894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.title))", "score": -0.7980617973407789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.vote_average),movie.original_language))", "score": -0.8137245043799339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.title),movie.original_language))", "score": -0.8417135938689171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.popularity),movie.original_language))", "score": -0.8551171438921301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of the movie with the title Def-Con 4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),language.name))", "score": -0.878785261829762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Def-Con 4), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.025925524685590062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.name),person.birth_day))", "score": -0.48277394814795116, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.gender),person.birth_day))", "score": -0.5760837082416401, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.5821632227525697, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.name))", "score": -0.5859993232079432, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.598136850319861, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.death_day))", "score": -0.6141147149392054, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.617528506241797, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_place))", "score": -0.6309750808068202, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_place),person.birth_day))", "score": -0.6318735365421162, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.gender))", "score": -0.6347425115891383, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Livigno, Italien), person.birth_day),person.birth_day))", "score": -0.6577807745561586, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),crew.person_id))", "score": -0.6798624528237269, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.death_day),person.birth_day))", "score": -0.7572020177394734, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}, {"orig_question": "What are the persons birthdays from people which did not died in Livigno, Italien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.id))", "score": -0.7786370647736476, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Livigno, Italien), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.1361629446011741, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.14939443118076426, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.15187173985442484, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.17141529112696194, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.24408966753553257, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.24649306523297684, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2688482273992111, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2723736893698651, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.27285480247349087, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,London, England,),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.2933059870376011, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.category,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3360730900943901, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34811043515958573, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),oscar.year,=,London, England,),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3624293051444322, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.36466614939811365, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the title of the movies witout an oscar nominee born in London in it?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,London, England,), movie.title),movie.title))", "score": -0.37863094391129887, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,London, England,),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))", "score": -0.035594851200585254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,32.8412), movie.status),movie.status))", "score": -0.37289893203706015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.title),movie.status))", "score": -0.4177121151733445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.title))", "score": -0.4698702808964299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), country.name),movie.status))", "score": -0.6083998311805772, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.vote_average),movie.status))", "score": -0.6426814426231431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.original_language),movie.status))", "score": -0.6433795918273972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.popularity))", "score": -0.6452627894032048, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,32.8412), movie.status),movie.status))", "score": -0.6531433122727321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.sub_category),movie.status))", "score": -0.6689682830619859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,32.8412), movie.status),movie.status))", "score": -0.6769893425080227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.popularity),movie.status))", "score": -0.6893729199218797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.release_date))", "score": -0.7013504621136235, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), oscar.category),movie.status))", "score": -0.705411278133397, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies with a popularity equal or smaller than 32.8412?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,32.8412), movie.status),movie.status))", "score": -0.7363497274491237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,32.8412), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.1524584601143652, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.original_language,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.1630281403378746, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.20733987099163348, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2261458330398787, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2568338146448496, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.2679259842328221, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.299045124951366, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.30586770424915793, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.homepage,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.31045109344020766, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3345874624870435, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.34408304598822337, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3599142283368624, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),oscar.sub_category,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.3755525916459331, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),keyword.name,!=,The Young Unknowns),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.38665759748736367, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}, {"orig_question": "Which keywords are linked to movies other than the young unknowns?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),language.name,!=,The Young Unknowns), keyword.name),keyword.name))", "score": -0.3886071560854586, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,The Young Unknowns), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.17326212494089693, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.19665756576583654, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))", "score": -0.1987490533963724, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.20652008492420268, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.3002317545028609, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.30368578729048246, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,!=,10),getData(person),oscar_nominee.oscar_id,person.id), person.name),person.name))", "score": -0.3057772749210183, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.31862995700269564, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3334897144861666, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),person.name))", "score": -0.33420136913080756, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), person.name),movie.revenue))", "score": -0.3465290702491386, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.oscar_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.35188791698600136, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),person.name))", "score": -0.3674593291141133, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,!=,10), language.name),person.name))", "score": -0.37679039154946165, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}, {"orig_question": "What are the names of the persons in movies nominated for an oscar where the movie vote average is not 10?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.vote_average,>,10), person.name),movie.revenue))", "score": -0.37978703023244437, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,10),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.026914803839209904, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,7.2), movie.id),movie.runtime)", "score": -0.4863573746864524, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,7.2), movie.id),movie.runtime)", "score": -0.5100755462557784, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,7.2), movie.id),movie.runtime)", "score": -0.65142142230997, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.685462141784062, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,7.2), movie.id),movie.runtime)", "score": -0.7065419010756977, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,7.2), movie.id),movie.runtime)", "score": -0.7305756601305501, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.7319668308768307, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7402326311873364, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.7410162050429844, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,7.2), movie.id),movie.runtime)", "score": -0.8015706137557974, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.8087202390126927, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,7.2), movie.id),movie.runtime)", "score": -0.8346857558814108, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,7.2),movie.runtime)", "score": -0.941384605512315, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.release_date)", "score": -0.9663224618859727, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.043348313633032376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.24591333172065788, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.38502911922126787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.3971715750707621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.40591532364936006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.4180577794988543, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.4627963919643474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), movie.original_language),movie.original_language))", "score": -0.47493884781384166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.4836825963924396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), movie.original_language),movie.original_language))", "score": -0.49582505224193385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.530459509314413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5321221603331769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5426019601799978, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.runtime,>,81), language.name),movie.original_language))", "score": -0.5442646111987618, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}, {"orig_question": " What are the original languages of the movies with a runtime of not 81?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,!=,81), language.name),movie.original_language))", "score": -0.5513457087585958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,81), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.02745074160338845, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.vote_average))", "score": -0.4205021293455502, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.vote_average))", "score": -0.46790016010345425, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.title),movie.vote_average))", "score": -0.5917539031797787, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.vote_average))", "score": -0.6516983540350338, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.vote_average))", "score": -0.6658420594030758, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.runtime))", "score": -0.7147408864548197, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),movie.status,movie.id),movie.id,production_country.movie_id),movie.status,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7308995114534418, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.vote_average))", "score": -0.754234197884216, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.vote_average),movie.vote_average))", "score": -0.7596269562927773, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.status))", "score": -0.7952935836365214, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_count))", "score": -0.8141463539650431, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.popularity))", "score": -0.8192935726692667, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.vote_average),movie.vote_average))", "score": -0.8405972436157754, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}, {"orig_question": "Is there a movie vote average of movies which status is released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.original_language),movie.vote_average))", "score": -0.8531971754709957, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.04552406252575742, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.2314986466224632, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.29131725386374646, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.release_date,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3097281699272865, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,person.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3098310746704356, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3286968962322757, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.runtime),movie.runtime)", "score": -0.3812491100992768, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.39356487463273043, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3974724973503664, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,crew.person_id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.3989406474080771, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4266655107218467, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,person.birth_day),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4300285479271494, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.movie_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1962-03-17), movie.id),movie.runtime)", "score": -0.4394387692653321, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,>,1962-03-17), movie.id),movie.runtime)", "score": -0.44014894187588915, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}, {"orig_question": "What is the average movie runtime of all movies having crew members with birthday before 1962-03-17?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<=,1962-03-17), movie.id),movie.runtime)", "score": -0.44737850396113243, "correct_code": "avg(distinct(merge(filter(getData(person),person.birth_day,<,1962-03-17),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.1259124873684179, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.14654993290956442, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.2580350635860008, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.sub_category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.2695535356810373, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.29334813901285073, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3031250365137828, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar.category,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3257449040262541, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),country.name,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.35304231409929737, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.35681639414036753, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3588896312482856, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),country.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.3592924310864682, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),company.name,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))", "score": -0.36092619647362767, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.36321841994697895, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,H\u00fcttental),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.37968848289455553, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there sub categories of oscars won by people that were not born in H\u00fcttental ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_place,!=,H\u00fcttental),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),crew.movie_id,oscar_winner.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.4146371075610088, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id),person.birth_place,!=,H\u00fcttental), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.020688169410277624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7134305260915426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.release_date))", "score": -0.7523436036499334, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7798001641131123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1965-03-02), movie.runtime),movie.runtime))", "score": -0.7822046154833515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1965-03-02),movie.runtime), movie.runtime))", "score": -0.8055571935910848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),person.birth_day))", "score": -0.8067075100334478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), person.birth_day),movie.runtime))", "score": -0.8264849472398055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), oscar.year),movie.runtime))", "score": -0.8461778450364363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8530782522357185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.status))", "score": -0.865894028225739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1965-03-02), movie.runtime),movie.runtime))", "score": -0.8830844225085457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.popularity),movie.runtime))", "score": -0.8943293381089461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),oscar.year))", "score": -0.914208122769196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies that were released on 1965-03-02?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.popularity))", "score": -0.9249550190361333, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1965-03-02), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.number))", "score": -0.12267563310941561, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.number))", "score": -0.14230980417265782, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.number))", "score": -0.18318134370837583, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.number))", "score": -0.21416114317913693, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.sub_category),oscar.number))", "score": -0.23379531424237912, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.number),oscar.number))", "score": -0.27466685377809713, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.category))", "score": -0.27982088177243164, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.category))", "score": -0.2994550528356738, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), movie.title),oscar.number))", "score": -0.3367585772665266, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.number),oscar.category))", "score": -0.34032659237139185, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.category),oscar.sub_category))", "score": -0.34146155481092766, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.sub_category),oscar.sub_category))", "score": -0.3610957258741698, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), oscar.id),oscar.number))", "score": -0.36171129738993474, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,237202299), company.name),oscar.number))", "score": -0.36495834318890163, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}, {"orig_question": "How many oscar categories have been nominated for a movie with a revenue greater than 237202299?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.revenue,>=,237202299), oscar.category),oscar.category))", "score": -0.37130639184215297, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.revenue,>,237202299), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1957-04-28), person.name),person.name))", "score": -0.31376857245049905, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,1957-04-28), person.name),person.name))", "score": -0.38368172133050393, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.4420345243124757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1957-04-28), person.name),person.name))", "score": -0.4673554965265794, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.46897245608852245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1957-04-28), person.name),person.name))", "score": -0.4694291421183152, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,=,1957-04-28),person.name), person.name))", "score": -0.47808477564831264, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.47880997919128276, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))", "score": -0.48682887041650247, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,1957-04-28), person.name),person.name))", "score": -0.5117766329058213, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,!=,1957-04-28),person.name), person.name))", "score": -0.5241835145570803, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<=,1957-04-28),person.name), person.name))", "score": -0.5514157231955323, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1957-04-28),person.name), person.name))", "score": -0.5600652066350449, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,1957-04-28), person.name),person.name))", "score": -0.5816897667682497, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}, {"orig_question": "Who was born before April 28th 1957?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1957-04-28),person.name), person.name))", "score": -0.5825763697794173, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1957-04-28), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.034983750385686546, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.26292572076553694, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.28277263987172835, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3162477031036913, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.361601918926593, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.39263516611912, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.budget),person.death_place))", "score": -0.3950068427702929, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(genre),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.39549469080807387, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,has_genre.movie_id), person.death_place),person.death_place))", "score": -0.40336886790998105, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.43471198835701713, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.43892391147934035, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),has_genre.genre_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.4488840926654171, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), movie.revenue),person.death_place))", "score": -0.45346155266553106, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.454147985128893, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.46072027098212315, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.original_language))", "score": -0.5154945095709991, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_count))", "score": -0.5157099803618621, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),person.name))", "score": -0.5163432797126006, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),movie.vote_average))", "score": -0.5720193972520065, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), person.name),keyword.name))", "score": -0.5754900267056655, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), keyword.name),movie.original_language))", "score": -0.5764007409743499, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), keyword.name),movie.vote_count))", "score": -0.5766162117652129, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.5889646290277031, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.594613378701594, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.6088047883908898, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), person.name),person.name))", "score": -0.6144535380647808, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr),language.name), language.name))", "score": -0.6150851559757011, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr), language.name),language.name))", "score": -0.62240883216927, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,tr), language.name),person.name))", "score": -0.6253467914099894, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}, {"orig_question": "Does there exist movies whose original language is not tr?", "inferred_code": "isEmpty(distinct(extractValues(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,tr),language.name), language.name))", "score": -0.6263281468596569, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.16206327251176508, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.16375048972914075, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.1850775672180007, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.2134421236849608, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2863043548553188, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.2866100781360111, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.30251787860065127, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3028236018813435, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3054505354137087, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3061768308637166, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.30713775263108434, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.3205913599817107, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3223903546090491, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2002-05-09),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3284648209043741, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers for oscars with a nominated movie released in 2002-05-09 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2002-05-09),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.3362901067116036, "correct_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.release_date,=,2002-05-09), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.16317458904395357, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2223976030520908, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.23287106724247236, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.25635938571066325, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2920940812506096, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2924126704628644, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3094724913909741, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,<,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.31849717316398857, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.person_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3188654312759022, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(getData(person),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32479475184284284, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3272711092007857, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3450020027800192, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.gender,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3452438946592115, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.37960046243975704, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.gender),person.birth_day))", "score": -0.3834712151019264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.03410932346014306, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.death_place),person.birth_place))", "score": -0.49334000115050003, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.death_place))", "score": -0.5080038087326102, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5133129686000757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5819836104637943, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.gender),person.birth_place))", "score": -0.6409984982456081, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.name),person.birth_place))", "score": -0.6466201699222438, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.6647186010959558, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.6820090489345603, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),company.name))", "score": -0.6936222987133078, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_day))", "score": -0.7123082356411032, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.7222150044399314, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1942-11-12), person.birth_place),person.birth_place))", "score": -0.7272670000675134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,>,1942-11-12),person.birth_place), person.birth_place))", "score": -0.727377505703771, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),country.name))", "score": -0.731614239688497, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2082339850868447, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.25782948381141235, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2696945775496129, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.27599398217589216, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.2878590759140927, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3077382453967612, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.30883066260559966, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3196033391349617, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.32295948854621637, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(oscar),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3348245822844169, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(movie),movie.title,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.34373318929505403, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.34757678341923354, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3518178513741879, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(filter(getData(person),oscar.sub_category,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),oscar_winner.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.35254147893201787, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.36620101602385635, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.revenue),movie.revenue))", "score": -0.09542737868468976, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.31153146331052994, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))", "score": -0.3773137961034081, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.4363320552311215, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.revenue,<=,1910),movie.revenue),movie.revenue))", "score": -0.4832553804371855, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.revenue),movie.revenue))", "score": -0.5336257410314726, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,=,1910),movie.revenue),movie.revenue))", "score": -0.5481431788284681, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.popularity),movie.revenue))", "score": -0.5596106682423851, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5739137946989984, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_count,<=,1910),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.revenue))", "score": -0.5755226946264669, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_count),movie.revenue))", "score": -0.5755686197881005, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,1910), movie.id),movie.revenue)", "score": -0.5764645739170212, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,1910),movie.vote_average),movie.revenue))", "score": -0.5934178807292483, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.runtime,<=,1910),movie.revenue),movie.revenue))", "score": -0.6115814984295866, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}, {"orig_question": "What is the revenue of the movie that has the maximum rating among all movies with at most 1910 votes?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<,1910),movie.revenue),movie.revenue))", "score": -0.6144792895283899, "correct_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1910),movie.vote_average),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.2934656405920324, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3092226008302061, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3123493836144467, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3363941365053512, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.34183303006176147, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(has_genre),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.352838814859729, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),language.iso_639_1,production_company.company_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3660111450619015, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),keyword.id,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3672447189835717, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),has_keyword.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3809354197402752, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_nominee.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),movie.original_language,=,Italiano), company.name),company.name))", "score": -0.38476152597508023, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),language.iso_639_1,has_keyword.keyword_id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.38738800336075135, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,movie.id),getData(company),production_company.company_id,company.id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.3915451472906314, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),language.iso_639_1,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.39691601280023836, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.40951140267133124, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produce movies that were translated to Italiano?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(production_company),getData(company),production_company.company_id,company.id),keyword.id,production_company.company_id),keyword.name,=,Italiano), company.name),company.name))", "score": -0.40962541679885284, "correct_code": "isEmpty(extractValues(distinct(merge(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.09655965779529652, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_average))", "score": -0.3425420067142113, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.vote_count))", "score": -0.41122658465610584, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.year))", "score": -0.41605923984752735, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),movie.revenue))", "score": -0.421358510000573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_day))", "score": -0.43840731595264515, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),oscar.number))", "score": -0.48775739882694324, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),language.name))", "score": -0.49821399067150196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1993-12-17), person.name),person.name))", "score": -0.5864406303371652, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.death_place))", "score": -0.6085060975383385, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), movie.vote_average),person.name))", "score": -0.6210097699295147, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), oscar.year),person.name))", "score": -0.6534733801017865, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1993-12-17), person.name),person.name))", "score": -0.6561077917795046, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),keyword.name))", "score": -0.66495127890812, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}, {"orig_question": "Name the movie personalities who died after 1993-12-17.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1993-12-17), person.name),person.name))", "score": -0.6740955802015378, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1993-12-17), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.050055494445366853, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.budget),movie.budget)", "score": -0.1790299356042113, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.24605114345979234, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.id),movie.budget)", "score": -0.30561991537659966, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.36974776688063615, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.budget)", "score": -0.37762067598115845, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist),getData(movie),has_keyword.movie_id,movie.id), movie.budget),movie.budget)", "score": -0.3876754585435921, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.3911278356571144, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.budget)", "score": -0.4087718029036148, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.name,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.44485157264832975, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(company),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4476701540869657, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(has_keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.4591262885803188, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id), movie.id),movie.budget)", "score": -0.45913735109257214, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,crime novelist), movie.budget),movie.budget)", "score": -0.4700635335059097, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}, {"orig_question": "What is the averaged movie budget of movies with the keyword \"crime novelist\" ?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,movie.id), movie.id),movie.budget)", "score": -0.4711239362172126, "correct_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,crime novelist),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.04045088722574769, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23468893198758278, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<,187),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2974575104607489, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,187), genre.name),genre.name))", "score": -0.3136978400564317, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35949327501412, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.36417765450580397, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36475490118321796, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3736612733425684, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37734884302095434, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<=,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3786949590288061, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), person.death_place),genre.name))", "score": -0.3859791070124091, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.39168657323100026, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4031218576008408, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.runtime,<,187),getData(person),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4153182764529607, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}, {"orig_question": "Are there no genres with movies having a runtime of less than 187?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),movie.runtime,<,187),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.420070283898731, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<,187), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)", "score": -0.02674243930918838, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>,1983-07-29), movie.id),movie.budget)", "score": -0.5684052018357165, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.revenue)", "score": -0.5906343743309916, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.budget),movie.budget)", "score": -0.6011823981100725, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(filter(getData(movie),movie.release_date,<,1983-07-29),movie.budget)", "score": -0.6075782542390702, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<=,1983-07-29), movie.id),movie.budget)", "score": -0.6225660076677517, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.release_date)", "score": -0.7904533344575969, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.vote_count)", "score": -0.8023607640284509, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,<,1983-07-29), movie.id),movie.budget)", "score": -0.8417131471624751, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1983-07-29), movie.id),movie.budget)", "score": -0.8473641442505919, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.release_date),movie.budget)", "score": -0.866748594652901, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.runtime)", "score": -0.8702772303927644, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),person.death_day)", "score": -0.872740245420056, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,<,1983-07-29), movie.id),movie.budget)", "score": -0.8864520603054011, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}, {"orig_question": "What is the summed budget of movies released before 1983-07-29?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),oscar_nominee.movie_id)", "score": -0.9080524486994482, "correct_code": "sum(distinct(filter(getData(movie),movie.release_date,<,1983-07-29), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.07022116176085547, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_place),person.birth_day))", "score": -0.29955984867410734, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.name),person.birth_day))", "score": -0.31955664075212553, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.gender),person.birth_day))", "score": -0.5035912267048843, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5247805000399239, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_place))", "score": -0.5483986375038512, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), oscar.year),person.birth_day))", "score": -0.5864075592835434, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.5993816436384805, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.name))", "score": -0.6313320336048491, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.status),person.birth_day))", "score": -0.631878571875859, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))", "score": -0.6338442743872292, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.death_day))", "score": -0.6593972382252105, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), movie.runtime),person.birth_day))", "score": -0.6598057321389206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), crew.person_id),person.birth_day))", "score": -0.6701567939599045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of persons who died in Surrey, Vereinigtes K\u00f6nigreich?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.gender))", "score": -0.6764677104656585, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Surrey, Vereinigtes K\u00f6nigreich), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.08907006037043175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.19654355299280724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.37971850343415725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.43079314761416754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),movie.original_language))", "score": -0.48435873458759937, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.5035982163608423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.5122852072818214, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),country.name))", "score": -0.514086240051256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.538266640236543, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),language.name))", "score": -0.5407617719829432, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),genre.name))", "score": -0.5688408548812731, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), language.name),language.name))", "score": -0.5713142912069712, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),keyword.name))", "score": -0.6045287187080248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,17.7091), movie.original_language),movie.original_language))", "score": -0.6169254384352635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}, {"orig_question": "In which language are the movies with a popularity of more than 17.7091?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), keyword.name),movie.original_language))", "score": -0.6289017015005811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,17.7091), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.16037956385469637, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.23452804853806483, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.24684350971664923, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.24701345493957771, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2621221493090769, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3107514371847823, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.31505739597683124, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.number,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3178219131079159, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3196036473820854, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3209919944000177, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3278634432971496, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(oscar),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.32954543524412805, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(person),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar_winner.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.335414471859966, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3485860798590054, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote averages of movies that have an oscar winner for oscars exluding number 81?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,81),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.oscar_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.36468260782900974, "correct_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,!=,81),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))", "score": -0.029024562983977376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,105000000), movie.original_language),movie.original_language))", "score": -0.4489993319839414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,105000000), movie.original_language),movie.original_language))", "score": -0.5874681339591916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), language.name),movie.original_language))", "score": -0.6547288642723288, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language)", "score": -0.678375846336616, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.vote_average),movie.original_language))", "score": -0.7668595658142294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),language.name))", "score": -0.7700850751243706, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,105000000), movie.original_language),movie.original_language))", "score": -0.7882302866310056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,105000000), movie.original_language),movie.original_language))", "score": -0.7883742914527829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,105000000), movie.original_language),movie.original_language))", "score": -0.815589593443292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,105000000), movie.original_language),movie.original_language))", "score": -0.819271074327844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,105000000), movie.original_language),movie.original_language))", "score": -0.828653501066583, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,105000000), movie.original_language),movie.original_language))", "score": -0.8339089323526423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.title))", "score": -0.8385218765579339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}, {"orig_question": "What is the original language of movies with a budget greater than 105000000?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.revenue)", "score": -0.8413107185045815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,105000000), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.09005627168035629, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.1162267705708084, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.19843737978893958, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.21290344254142038, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2198578682346527, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Cambodia),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.29529483519860034, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.37585886545030617, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.39498157980488696, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Cambodia), movie.title),movie.title))", "score": -0.40568954837555643, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Cambodia),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.40834362121189854, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.birth_place,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.41370796997279874, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),person.gender,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.44036101393269356, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.4536336708576801, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Cambodia), movie.title),movie.title))", "score": -0.4540768717389279, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "Which movies have not been produced in Cambodia?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),country.name,=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.45633315044680933, "correct_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,!=,Cambodia),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.1973006968764821, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.22716059735103045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.27196421673579607, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.3018241172103444, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.3693936561612645, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Serge Houde), person.birth_day),person.death_day))", "score": -0.4440571760205785, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5468337853817502, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.birth_day))", "score": -0.5766936858562985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6214973052410642, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),keyword.name,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6284732913045445, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6295180638699094, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), person.death_day),person.death_day))", "score": -0.6513572057156125, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Serge Houde), movie.runtime),person.birth_day))", "score": -0.6593779643444577, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.6605780815152684, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth days of those whose name is different from Serge Houde?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_place,=,Serge Houde), person.birth_day),person.birth_day))", "score": -0.667757281466038, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Serge Houde), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.14888449370354762, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1915678858937643, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1948725545461922, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2375559467364089, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2705944197779237, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2791684013539372, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2908991685627547, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),language.name,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3165824806205683, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.31823455910609744, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),language.iso_639_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32303580651290636, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3480189683552011, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3495721456831261, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id), country.name),country.name))", "score": -0.3539404109297777, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,???????),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3597497311338768, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}, {"orig_question": "Is there any production country in which a movie has been produced with a language name other than ????????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,???????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.36091793274509565, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,???????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.1845724593149498, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.25112737074960023, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.31330692127812654, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.name))", "score": -0.3481696891831234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_day))", "score": -0.41472460061777383, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.death_place))", "score": -0.46252667263615876, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.birth_day))", "score": -0.47690415114630014, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.name))", "score": -0.4818449068116024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.name))", "score": -0.5127238678978756, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.birth_place))", "score": -0.5129986341344193, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.death_day))", "score": -0.5483998182462528, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_day),person.death_day))", "score": -0.579278779332526, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.name),person.birth_day))", "score": -0.6105793687747791, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.death_place),person.id))", "score": -0.617173248087056, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}, {"orig_question": "what are the persons death places when their birth day was on 1963-11-10 or before?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1963-11-10), person.birth_place),person.name))", "score": -0.6177806305931881, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1963-11-10), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.28913279894050115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.31952937247632607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3218681417578567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3277153315014338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.32839257417430545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.36064087506890363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3629796443504342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(movie),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3662232878005537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3711622135858729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3735009828674036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,1980-07-02),getData(movie),movie.id,oscar_nominee.movie_id), movie.vote_count),movie.vote_count))", "score": -0.3936779420281854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.person_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.3963510892215617, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_average,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.40084714800750587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.43242011100422667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which different vote counts did the movies which were released before or on 1980-07-02 receive?", "inferred_code": "done(extractValues(distinct(filter(filter(getData(movie),movie.release_date,<=,1980-07-02),movie.vote_count,<,1980-07-02), movie.vote_count),movie.vote_count))", "score": -0.44327276769363533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1980-07-02), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.05155651329419424, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.15092457857762073, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.32929372744205726, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.35406039373058146, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3565778408025823, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.36831661450606695, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3848799166363508, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3911676765963129, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3987333943835626, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.40478258143496365, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4096820662728404, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(production_company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.42642804822598507, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4278157584192175, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4291056154195538, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4411198542019346, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.03479299870160732, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.23232750286964526, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.2994385087963995, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3405875445690905, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,production_company.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3521897798877479, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.37005983625777916, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),person.death_place))", "score": -0.38014545607624345, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.38296560642694605, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.3855862438220498, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.39327042502032605, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), person.death_place),genre.name))", "score": -0.3952882573913697, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.41422638662447314, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.41980211853799704, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,has_genre.movie_id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),genre.name))", "score": -0.43253844693062865, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Which genres have movies with a release date after 2005-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2005-01-13), genre.name),has_genre.genre_id))", "score": -0.43374988746058923, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2005-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.11739461305717387, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.1699112497209659, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.22495884407474925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.24560929629569475, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.2654806372114367, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.27890287461849667, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.29027492217621276, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.2981259329594868, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3120077621297325, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.3179972738752288, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,War), company.name),company.name))", "score": -0.33141951128228875, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),country.name,=,War), company.name),company.name))", "score": -0.34634426891273395, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,War), company.name),company.name))", "score": -0.35317352710560723, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.company_id),movie.title,=,War), company.name),company.name))", "score": -0.3656079708275805, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Is there a production company that made the movie called War?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(company),production_company.company_id,company.id),company.id,production_company.movie_id),movie.title,=,War), company.name),company.name))", "score": -0.37304486802134923, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,War),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.14254854209091125, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.21194025976458036, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.2132256514974511, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.2467046495713467, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.2682461575538707, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),language.name,=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3160963672450158, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.vote_average,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.34110973157854374, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3485474090310244, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_average))", "score": -0.3502894055040205, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),spoken_language.iso_639_1,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3523661900933538, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3550178963067567, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),movie.revenue,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3648309077425957, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3694288199073245, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),person.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3817028743628377, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the rating for the movie with the highest received revenue for movies that weren't translated to Hrvatski?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),language.name,!=,Hrvatski),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.revenue),movie.vote_average))", "score": -0.3862116144197868, "correct_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Hrvatski),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2646775397867896, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.27074341140590474, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),has_keyword.movie_id,movie.id), person.birth_place),person.birth_place))", "score": -0.281448675716085, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2890675053873717, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2952157265621916, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(cast),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.2982818258637319, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(crew),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.30622231924567606, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3140587480547787, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),has_keyword.keyword_id,person.id), person.birth_place),person.birth_place))", "score": -0.3215468591016309, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3247164345449521, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.33289930094525305, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(production_country),getData(person),cast.person_id,person.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.33845796265284384, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,killer robot),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3421624917930106, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(cast),movie.id,movie.id),keyword.id,has_keyword.keyword_id),getData(person),oscar_nominee.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.37039353523192586, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot),merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),cast.person_id,person.id),has_keyword.movie_id,movie.id), person.birth_place),person.birth_place))", "score": -0.38333655492035607, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.17279854239918152, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.20309539013712533, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.21566491522894282, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.2755765609663152, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.28192306159437247, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.33414259098049776, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.35056886182136815, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.35290140600598985, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.3543643106309982, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.3620539340623513, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.3623638411880538, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), oscar.number),oscar.number)", "score": -0.36370288658919714, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.3763162195467314, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), person.death_day),oscar.number)", "score": -0.3788668041770947, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of all the oscar numbers of oscars with a nominated person born before 1975-08-12 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1975-08-12),getData(oscar_nominee),person.id,oscar_nominee.person_id),merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), person.death_day),oscar.number)", "score": -0.3825869275401996, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1975-08-12),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.04595122410601535, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,brain scan),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.2367253016215186, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2559323135240902, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.2696621550783548, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),movie.id,has_keyword.keyword_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.30597647645655374, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(has_keyword),keyword.id,has_keyword.movie_id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.3177768454426639, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,brain scan),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3313176631827258, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.34169384235801575, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.35577662676192856, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(has_keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.38069424516527156, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),oscar.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.4022153329275743, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.movie_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.41549985481042384, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),oscar.sub_category,=,brain scan), movie.title),movie.title))", "score": -0.4170340102432605, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))", "score": -0.41948218265350934, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}, {"orig_question": "How many distinct movies have the keyword \"brain scan\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,=,brain scan), movie.title),movie.title))", "score": -0.4239419833501108, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,brain scan), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.23735310847904023, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.24529498008491954, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.25870881525185635, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.25910694532940154, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2686360695003759, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.28046265210221766, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.2859426801635389, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.28999178362732864, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.29431656592669864, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.29799061093615553, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,??????),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.29842410873409325, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3287667281341836, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.3328812376314721, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.33511788222160777, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(movie),has_genre.movie_id,genre.id),language.iso_639_1,has_genre.genre_id),language.name,=,??????), genre.name),genre.name))", "score": -0.336555282640929, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_count))", "score": -0.3091303606670408, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.vote_average))", "score": -0.43638513732366846, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_count))", "score": -0.43804307777099893, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.release_date),movie.vote_count))", "score": -0.4629006584327726, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.budget),movie.vote_count))", "score": -0.46966307360344217, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.title), movie.id))", "score": -0.48359826163505204, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_average),movie.vote_count))", "score": -0.5073707600276975, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.vote_average), movie.id))", "score": -0.5112175490066875, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.release_date), movie.id))", "score": -0.5331171746656764, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.runtime), movie.id))", "score": -0.5355616505548824, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.vote_count),movie.vote_count))", "score": -0.5422896047275572, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.title),movie.title))", "score": -0.5470590417426138, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.popularity), movie.id))", "score": -0.5592731158540118, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.original_language),movie.vote_count))", "score": -0.563767661635211, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies with 1219 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1219), movie.runtime),movie.vote_average))", "score": -0.5652978544276266, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,1219),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)", "score": -0.03765443695044817, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,136),movie.budget)", "score": -0.35828864517037173, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.budget),movie.budget)", "score": -0.6912276029105565, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.release_date),movie.budget)", "score": -0.7350127155173869, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,136), movie.id),movie.budget)", "score": -0.770569066109545, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,136), movie.id),movie.budget)", "score": -0.7997152861252882, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,136), movie.id),movie.budget)", "score": -0.8971388226622516, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.revenue)", "score": -0.9176272474615486, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,136),movie.budget)", "score": -0.945267002961441, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.release_date)", "score": -0.9654870640246288, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,136), movie.id),movie.budget)", "score": -0.978991242673306, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,136), movie.id),movie.budget)", "score": -1.0008394434355896, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),oscar.number)", "score": -1.0151840383040271, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.vote_count)", "score": -1.016958885556358, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}, {"orig_question": "Whats the average movie budget of movies with a runtime of more than 136?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,136), movie.id),movie.budget)", "score": -1.0189141700449358, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,136), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.1637714294338366, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.25513590253831353, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,1994-04-10), person.death_place),genre.name))", "score": -0.2735964370513102, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.3589627359025946, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1994-04-10), person.death_place),genre.name))", "score": -0.36496091015578713, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,!=,1994-04-10), genre.name),genre.name))", "score": -0.40284735216217843, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.40601349748612847, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,>,1994-04-10), genre.name),genre.name))", "score": -0.4064468600370553, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<,1994-04-10), genre.name),genre.name))", "score": -0.42783690448391637, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,!=,1994-04-10), genre.name),genre.name))", "score": -0.4717215207435002, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1994-04-10), genre.name),genre.name))", "score": -0.4753210286183771, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,<,1994-04-10), genre.name),genre.name))", "score": -0.4919218171262576, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1994-04-10), person.death_place),genre.name))", "score": -0.5158385051036021, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,1994-04-10), genre.name),genre.name))", "score": -0.5218540973583004, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names of movies where peoples death day was later than 1994-04-10?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.death_day,<,1994-04-10), genre.name),genre.name))", "score": -0.5385168837979468, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,>=,1994-04-10),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.09681305291087483, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4525225330326066, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4562406977820501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.name),person.death_day))", "score": -0.46096490418494795, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.46645632201762055, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.name))", "score": -0.5009863656196103, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.5125237563806877, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5234490502807603, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5844699908229813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.name), person.death_day))", "score": -0.596334718313301, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6059339810344682, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.6206620560551528, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.6399232428702817, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.6476853173408017, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6579683860945806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.23960913623523084, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.25429601873111096, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.title))", "score": -0.2602810403222975, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.title))", "score": -0.36392272914599744, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.budget)", "score": -0.3738580591092684, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.id),movie.title))", "score": -0.4321429869050917, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.budget),movie.title))", "score": -0.4450475117082533, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.runtime),movie.release_date))", "score": -0.4588087862248358, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.release_date),movie.release_date))", "score": -0.4734956687207159, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.title),movie.release_date))", "score": -0.47948069031190244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.status),movie.title))", "score": -0.524333312165254, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.vote_average),movie.title))", "score": -0.531954093825334, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Brotherly Love), movie.popularity),movie.release_date))", "score": -0.5831223791356024, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.runtime),movie.title))", "score": -0.5942918751279649, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}, {"orig_question": "What is the original movie langauge of the movie Brotherly Love?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Brotherly Love), movie.release_date),movie.title))", "score": -0.608978757623845, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.title,=,Brotherly Love), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.1632424729454379, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.17277484698248302, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,genre.id), genre.name),genre.name))", "score": -0.1751809635991667, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.20159346623606614, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.20557361552576486, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.21345747871236273, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.21762885621217337, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_winner.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23086912056733824, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.23674448142693227, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24861340393193254, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2518857027951752, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2541319950802348, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.26281865336394994, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.27660841486576887, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,movie.id), genre.name),genre.name))", "score": -0.2976567774584549, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.12163380329729989, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_day))", "score": -0.3785670677316375, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.name))", "score": -0.40990510751726106, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.death_day))", "score": -0.416502682317514, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.44285174255492166, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.46453817730071023, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_place,=,Christopher J. Wood), person.name),person.name))", "score": -0.4918787980568595, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,=,Christopher J. Wood), person.name),person.name))", "score": -0.5290788913262077, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),person.birth_place))", "score": -0.5357713380944915, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Christopher J. Wood), person.name),person.name))", "score": -0.5362128189348802, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_place),person.name))", "score": -0.5781758146476932, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.name),oscar.year))", "score": -0.6144836226594634, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.6166044277568599, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.gender,=,Christopher J. Wood), person.name),person.name))", "score": -0.6180941367638297, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}, {"orig_question": "How many persons are called Christopher J. Wood?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.birth_day),person.name))", "score": -0.6183488385868259, "correct_code": "count(extractValues(distinct(filter(getData(person),person.name,=,Christopher J. Wood), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.1406516475272452, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.16347571925373924, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2135298375973768, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.2198912545207862, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.23635390932387082, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.23774920347946543, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.28659302766080774, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.30445097661948695, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3619630318064558, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.36986112197849597, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.year)", "score": -0.37270911160646014, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.year)", "score": -0.38478710353294987, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.3864053780771679, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,<,2006-06-21),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.38688213326709253, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years of oscars with nominated people that died before 2006-06-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21), oscar.id),oscar.number)", "score": -0.3878155238175326, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,2006-06-21),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))", "score": -0.1968841943598818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count))", "score": -0.23816857670317404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_average))", "score": -0.29766480062971823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.title))", "score": -0.3214797023392748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.vote_count))", "score": -0.33894918297301047, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.runtime))", "score": -0.36833451126585715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_average))", "score": -0.36885140274534933, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count))", "score": -0.41013578508864157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.title))", "score": -0.42226030860911123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.runtime),movie.runtime))", "score": -0.46911511753569357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.title))", "score": -0.49344691072474234, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_average))", "score": -0.5197380575991701, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.runtime))", "score": -0.5403017196513247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.vote_count))", "score": -0.5610224399424624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the values of vote averages that movies with the status Rumored have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.title),movie.title))", "score": -0.6443335655785631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.27634394722830724, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.282422144894717, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3055788237394233, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.30598320363461873, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.309124954279015, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3120614013010285, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.31520315194542475, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3153185297501807, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)", "score": -0.3213967274165905, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(crew),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3385137010405721, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.popularity)", "score": -0.3559754732018241, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.popularity),movie.popularity)", "score": -0.36558410420698545, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.37404901773169225, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),merge(getData(movie),merge(getData(crew),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3837841069073242, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in which persons were involved who don't have the gender male?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3983234400973343, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,!=,m), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))", "score": -0.010121638817508938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.4), movie.budget),movie.budget))", "score": -0.6081300679834385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,6.4), movie.budget),movie.budget))", "score": -0.6425941888483067, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.release_date))", "score": -0.670678815269639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.4), movie.budget),movie.budget))", "score": -0.6832800213487644, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,6.4), movie.budget),movie.budget))", "score": -0.7289234653471794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.title))", "score": -0.7549453586580057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.title),movie.budget))", "score": -0.8265787941527378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.release_date),movie.budget))", "score": -0.8294734937262547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.original_language))", "score": -0.8334482521058817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.revenue))", "score": -0.8499702424051065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), person.death_place),movie.budget))", "score": -0.9037876111578953, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,6.4), movie.budget),movie.budget))", "score": -0.9179539934157219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.id))", "score": -0.918636521721055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budget if the movies vote average is 6.4 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.original_language),movie.budget))", "score": -0.9349269253325474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,6.4), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))", "score": -0.03185799693892477, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,6), movie.vote_count),movie.vote_count))", "score": -0.30937126813660143, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6), movie.vote_count),movie.vote_count))", "score": -0.5346001589132356, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6), movie.vote_count),movie.vote_count))", "score": -0.5347246134115267, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6), movie.vote_count),movie.vote_count))", "score": -0.6210441791845369, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,6), movie.vote_count),movie.vote_count))", "score": -0.7150045686794329, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.budget),movie.vote_count))", "score": -0.7783461770668509, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.title),movie.vote_count))", "score": -0.7845469078674796, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,6), movie.vote_count),movie.vote_count))", "score": -0.786074405295949, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.budget))", "score": -0.7870425222135964, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.title))", "score": -0.7965303299642983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_average),movie.vote_count))", "score": -0.8042380175247672, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,6), movie.vote_count),movie.vote_count))", "score": -0.8121134301109123, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,6), movie.vote_count),movie.vote_count))", "score": -0.8122378846092033, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}, {"orig_question": "Is there any vote count of the movies which have a higher vote average than 6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_average))", "score": -0.8210109708525124, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.06962948208233825, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.18761580176732273, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.19237456452595592, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.23068196512496802, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), person.birth_place),company.name))", "score": -0.2713825540747874, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.3210072900233516, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),country.name))", "score": -0.3254494659516097, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), person.birth_place),company.name))", "score": -0.32911220191676943, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,=,0.215464),getData(company),production_company.company_id,company.id), person.birth_place),company.name))", "score": -0.3583475638999526, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,=,0.215464), company.name),person.birth_place))", "score": -0.37145735250914036, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.3902527994494303, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))", "score": -0.39471465447290077, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.4050431637466357, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),genre.name))", "score": -0.4067245980125602, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}, {"orig_question": "Is there any production company who was involved in a movie with a popularity of 0.215464?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.215464),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.41661883833875507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,=,0.215464), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)", "score": -0.04168325136817669, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.3705037496419029, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.popularity)", "score": -0.4598178858383746, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,Post Production), movie.id),movie.popularity)", "score": -0.6038732973850609, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.id),movie.popularity)", "score": -0.6474007957538501, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity)", "score": -0.659572680185031, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.id),movie.popularity)", "score": -0.6871691356189409, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Post Production),movie.popularity)", "score": -0.698336876428568, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,>=,Post Production),movie.popularity)", "score": -0.7315979125569914, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Post Production), movie.id),movie.popularity)", "score": -0.8037879235850072, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.id),movie.popularity)", "score": -0.8179107529055805, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Post Production), movie.id),movie.popularity)", "score": -0.8197482126728112, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.popularity))", "score": -0.8351022626193298, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,null,Post Production), movie.id),movie.popularity)", "score": -0.8662183523708638, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of the movies which dont have the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.revenue)", "score": -0.8763086713273618, "correct_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.name))", "score": -0.1854190599915455, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.name))", "score": -0.19053340777463745, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.id))", "score": -0.4534748837322695, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,!=,2014-01-01), person.name),person.name))", "score": -0.5600344340127776, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,2014-01-01),person.name), person.name))", "score": -0.569690527205239, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.gender))", "score": -0.573032264408539, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.birth_day))", "score": -0.5749319136884878, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.birth_day))", "score": -0.582062546905945, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,2014-01-01), person.name),person.name))", "score": -0.6048329273980926, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,2014-01-01),person.name), person.name))", "score": -0.6673464791820152, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,2014-01-01), person.name),person.gender))", "score": -0.6724071741846274, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.birth_day), person.name))", "score": -0.6821791001566453, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), oscar_winner.person_id))", "score": -0.6885089024872286, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.name), person.death_day))", "score": -0.705195282396744, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}, {"orig_question": "Are there persons that did not die on January 1st 2014?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,>,2014-01-01),person.name), person.name))", "score": -0.7184860753332032, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_day,!=,2014-01-01),person.death_place), person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.02126518636214314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6084531093944461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,crew.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6206471985457845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6391636226829422, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.06387), movie.release_date),movie.release_date))", "score": -0.6420573631694424, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.release_date,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,6.06387), movie.release_date),movie.release_date))", "score": -0.6513577026971135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.title))", "score": -0.6627978444957989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.06387), movie.release_date),movie.release_date))", "score": -0.6677964369227993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.title),movie.release_date))", "score": -0.680419406380679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.budget),movie.release_date))", "score": -0.6844486207628506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.id),movie.release_date)", "score": -0.7155603091429711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7280742368820938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.budget))", "score": -0.7619186998272198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,6.06387), movie.release_date),movie.release_date))", "score": -0.7733963570717606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}, {"orig_question": "When was the movie release date of the movies with a popularity equal to 6.06387?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.id),movie.release_date))", "score": -0.7910998077059048, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.06387), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.09875985799576928, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.1949752025999946, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.24130796059412427, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2758752126742075, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.28649419882490035, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2933214696706637, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3049797764317293, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.birth_place,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.31445864540167756, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.31471520376945156, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),company.id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33139521012850404, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(movie),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.movie_id),production_company.movie_id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3318951732832978, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.33408743384271977, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.34284815093636983, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.3439446551164252, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.363112784706343, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.07863445242583111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.47923256959193966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,0.5), movie.budget),movie.budget))", "score": -0.4996000461997028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.id),movie.budget)", "score": -0.5838814845205681, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,0.5), movie.budget),movie.budget))", "score": -0.6429827742995258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))", "score": -0.6850456779175147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,0.5), movie.budget),movie.budget))", "score": -0.7459278462938528, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,0.5), movie.budget),movie.budget))", "score": -0.7616269522131915, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget)", "score": -0.8108184622492577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.release_date))", "score": -0.8528446146538045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.title))", "score": -0.8815226146271016, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.release_date),movie.budget))", "score": -0.8999812759011547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget)", "score": -0.9067659101281891, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.title),movie.budget))", "score": -0.9263342178910534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}, {"orig_question": "How much is the movie budget from movies that have not a movie vote average of 0.5?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.revenue),movie.budget))", "score": -0.96509112487729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,0.5), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.24905013864889597, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.26260566351506687, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.28486695292465664, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.title,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2899106737125607, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),movie.runtime,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2913294000202245, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.29842247779082753, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3103989938216018, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),oscar.category,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3163475337474279, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,Little Fockers),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3239545190338775, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.3985802003199962, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4036478571636587, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4125644920232068, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),oscar.category,!=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4176321635417138, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.4483233702898629, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "From how many different birth places do people originate which won an oscar for the movie Little Fockers?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),person.gender,=,Little Fockers), person.birth_place),person.birth_place))", "score": -0.45339103599380887, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Little Fockers),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.06264486350660783, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.1879636206891282, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2536995699030408, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.25483454286416324, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.28964605110458486, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.2930857094980829, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_winner.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.31392717946253734, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.31868227513241804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_winner),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3214718880316402, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3357913188490674, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(has_keyword),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.35946198364466775, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.368709532370759, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3696417837076938, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.3801533000466836, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,crew.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3830680470060494, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.053101543977390975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,140), movie.vote_count),movie.vote_count))", "score": -0.2789878162438981, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,140), movie.id),movie.vote_count)", "score": -0.496674283467468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,140), movie.vote_count),movie.vote_count))", "score": -0.5222415837342851, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.5371691199834459, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.6200962553176462, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.6442039224202745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,140), movie.vote_count),movie.vote_count))", "score": -0.6565167519147508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,140), movie.vote_count),movie.vote_count))", "score": -0.6653983754426608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,140), movie.vote_count),movie.vote_count))", "score": -0.665603774425108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar_winner.movie_id,=,140), movie.vote_count),movie.vote_count))", "score": -0.7180553885991685, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.7209650330551085, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,140), movie.vote_count),movie.vote_count))", "score": -0.7304827746120282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.734799970307671, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_average))", "score": -0.7660346534685232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.budget))", "score": -0.06111984446761198, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.3066136066627223, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5860386795021072, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.589655021915552, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),genre.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.5932303589371588, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6343724383679457, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,is), movie.budget),movie.budget))", "score": -0.6382641583912265, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.639911967327665, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.revenue),movie.budget))", "score": -0.6421110625669826, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,is), movie.budget),movie.budget))", "score": -0.6435283097411097, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.revenue))", "score": -0.663640698447125, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.vote_count),movie.budget))", "score": -0.6983743901655544, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), person.death_day),movie.budget))", "score": -0.701292752783047, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.vote_count))", "score": -0.7106519546650816, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}, {"orig_question": "How many movies with different budgets were filmed in Icelandic?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,is), movie.budget),movie.release_date))", "score": -0.7217951622151304, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,is), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.08489789573986245, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,=,Austria),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.2884317683899427, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Austria),movie.budget),movie.status))", "score": -0.2970392660474552, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))", "score": -0.3012803367357368, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),person.birth_place,=,Austria),movie.budget),movie.status))", "score": -0.3229764345451774, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.budget),movie.status))", "score": -0.3434418889581225, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,Austria),movie.budget),movie.status))", "score": -0.35350730560389293, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.release_date),movie.status))", "score": -0.3887714511156384, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,Austria),movie.budget),movie.status))", "score": -0.38994069075578824, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.39556532320535137, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.iso_3166_1,=,Austria),movie.budget),movie.status))", "score": -0.41646373073571824, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),oscar.category,=,Austria),movie.budget),movie.status))", "score": -0.4174006525495702, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.status))", "score": -0.4280124861253929, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.title),movie.status))", "score": -0.43092823612558834, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}, {"orig_question": "What is the status of the movie with the largest movie budget that was produced in Austria?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),movie.budget),movie.popularity))", "score": -0.4521637753358022, "correct_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Austria),getData(movie),production_country.movie_id,movie.id),movie.budget),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.263757480898213, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.27107287647117134, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.2887929560691073, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.29610835164206567, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.31678949366983455, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.32822951732223093, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3305456995261594, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.33554491289518934, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.33786109509911777, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3403646612228025, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),company.name))", "score": -0.3418249688407289, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),person.birth_place))", "score": -0.35326499249312526, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.35558117469705375, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.release_date))", "score": -0.36058038806608367, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What is the birthplace of the oscar winners in category costume design?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), person.birth_place),movie.release_date))", "score": -0.3628965702700121, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,costume design),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.12618271847781784, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.1555948762381416, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.349572104859552, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.36169077136439187, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4097232442683277, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.42184191077316757, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.43851326177788946, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4438737406286344, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.45063192828272935, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4559924071334743, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4710478518537431, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,has_genre.movie_id),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.483166518358583, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.budget),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.4862136974037446, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.revenue),movie.budget,<=,7000000), movie.id),movie.revenue)", "score": -0.49289159107063607, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}, {"orig_question": "Whats the total revenue for movies with a budget of less than or equal to 7000000?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.budget),movie.budget,>=,7000000), movie.id),movie.revenue)", "score": -0.4983323639085845, "correct_code": "sum(distinct(filter(getData(movie),movie.budget,<=,7000000), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.1720511658641044, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.name))", "score": -0.27225313769304194, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.3739778182061855, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.4112947365792934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),person.death_place))", "score": -0.474179790035123, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),movie.revenue))", "score": -0.5114967084082309, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.5311001321824733, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>,1972-10-24), person.name),person.name))", "score": -0.5564121833594982, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), movie.revenue),person.name))", "score": -0.5638224851863924, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1972-10-24), person.name),person.name))", "score": -0.6066426268371288, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,1972-10-24), person.name),person.name))", "score": -0.6077587834151927, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),cast.person_id))", "score": -0.6150381049665157, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1972-10-24), person.name),language.name))", "score": -0.6313021040114108, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), language.name),person.name))", "score": -0.6317631375568453, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}, {"orig_question": "What are the names of people with birthdate after 1972-10-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,1972-10-24), person.name),movie.original_language))", "score": -0.643820353463525, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1972-10-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.12059857187171016, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.12609027409762388, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.20892529060646273, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.2600742307062669, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.28424222112248665, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.31992982931724634, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3288116926674685, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3587523441555915, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.36575998869765797, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,Italiano), movie.id),movie.vote_average)", "score": -0.3670772376313255, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.36763420750581366, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.3996876263037916, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.4119010250800036, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.41950242237948543, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.4207460168828798, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.19823932377889636, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.20109935239647184, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.2437759883030068, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.28666076655389583, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.2954512889712458, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.32131790488989603, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.title,<,1991-09-21), company.name),company.name))", "score": -0.32566197365528976, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),person.death_place,<,1991-09-21), company.name),company.name))", "score": -0.3378429515496952, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3533753403603829, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),getData(genre),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3562353689779583, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),person.death_place,<,156), company.name),company.name))", "score": -0.3749803325756904, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3752566808797088, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(merge(getData(movie),getData(oscar_nominee),person.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,156),movie.budget,<,156), company.name),company.name))", "score": -0.3760799450452997, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,156),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,156), company.name),company.name))", "score": -0.3883671903120119, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Is there a company where the oscar nominee died after 1991-09-21 and the movie had a movie vote count less than 156?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,oscar_nominee.movie_id),movie.vote_count,<,156),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.39938625532645805, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,>,1991-09-21),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<,156),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.193364712186751, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22384780859706768, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.24832441695878496, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.27880751336910164, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2809329846168359, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.28160866983324867, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3006250797831767, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3069821781084437, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.31141608102715257, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3120917662435653, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3268864637731487, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.33589268938886985, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3365683746052826, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.33746527451876035, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where a person involved was born in St. Ulrich in Gr\u00f6den, S\u00fcdtirol?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(oscar_winner),merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),person.id,crew.movie_id),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.44372691106856343, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,St. Ulrich in Gr\u00f6den, S\u00fcdtirol),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.03331448063567528, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), genre.name),company.name))", "score": -0.3412506349077115, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.35005323092148816, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.35259743381578235, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3587010422369636, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), movie.title),company.name))", "score": -0.3587511123801716, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.3863407528153852, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),movie.title))", "score": -0.3975687241344625, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),person.birth_place))", "score": -0.40219361489322364, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4091312604473286, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.40978303023757845, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4177458378624391, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.41896424631312873, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(keyword),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.4197182126876497, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),production_company.company_id))", "score": -0.42127441252303194, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))", "score": -0.15233871959208045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,!=,2013-10-04), movie.title),movie.title))", "score": -0.24219378702400718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2013-10-04), movie.title),movie.title))", "score": -0.27434702090977225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2013-10-04), movie.title),movie.title))", "score": -0.30851480238197837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,=,2013-10-04), movie.title),movie.title))", "score": -0.364202088341699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2013-10-04), movie.title),movie.title))", "score": -0.41454988591431174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2013-10-04), movie.title),movie.title))", "score": -0.4305231036996702, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,2013-10-04), movie.title),movie.title))", "score": -0.46988163761852775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2013-10-04), movie.title),movie.title))", "score": -0.5044049533462385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,2013-10-04), movie.title),movie.title))", "score": -0.5211673068261007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2013-10-04), movie.title),movie.title))", "score": -0.5707259687042097, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2013-10-04), movie.title),movie.title))", "score": -0.5918899389362196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>,2013-10-04), movie.title),movie.title))", "score": -0.6110223893920192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,2013-10-04), movie.title),movie.title))", "score": -0.6247342814604053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}, {"orig_question": "What are the movie titles without the date 2013-10-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2013-10-04), movie.title),movie.title))", "score": -0.6412380178371677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2013-10-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.14199790937926018, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.17490002433450003, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.22946331834440664, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.2330944639712662, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1957), movie.id),movie.budget)", "score": -0.26236543329964646, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.27293102272569425, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.30583313768093406, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,<=,1957), movie.id),movie.budget)", "score": -0.3097757729834308, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>=,1957), movie.id),movie.budget)", "score": -0.32055987293641264, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,=,1957), movie.id),movie.budget)", "score": -0.32778888152033153, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.name,<=,1957), movie.id),movie.budget)", "score": -0.3292329619387344, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,1957), movie.id),movie.budget)", "score": -0.34267788793867066, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),person.death_day,>=,1957), movie.id),movie.budget)", "score": -0.36039640361879605, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,1957), movie.id),movie.budget)", "score": -0.36069096840352677, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}, {"orig_question": "What's the total budget of movies, which won an oscar before 1957?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,<=,1957), movie.id),movie.budget)", "score": -0.3640275492456556, "correct_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,<,1957),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,!=,no), movie.title),movie.title))", "score": -0.13481895453878678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.17636088855215348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,!=,no), movie.title),movie.title))", "score": -0.35207829825230874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3641439861530828, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.39362023226567544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),language.name,!=,no), movie.title),movie.title))", "score": -0.42903266302892007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.original_language,!=,no), movie.title),movie.title))", "score": -0.47057459704228677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.48473524531560197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,no),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id), movie.title),movie.title))", "score": -0.6358388612568209, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,no), movie.id),movie.title)", "score": -0.6502978862368952, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,no), movie.title),movie.title))", "score": -0.6615838167781476, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title)", "score": -0.6626522494972329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,!=,no), movie.title),movie.title))", "score": -0.6806567070598248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,!=,no), movie.title),movie.title))", "score": -0.6841923391039018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}, {"orig_question": "What movie titles do the movies that have an originial language other than no have?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,!=,no), movie.id),movie.title)", "score": -0.6927630852312623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,=,es), language.name),language.name))", "score": -0.1688816537074033, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.original_language,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.17186043898411527, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,=,es), language.name),language.name))", "score": -0.22864770562832207, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.original_language,!=,es), language.name),language.name))", "score": -0.2336943946111842, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es), language.name),language.name))", "score": -0.24095264136449907, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),language.name,=,es),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.25896099698615543, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2801106204794767, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,es), language.name),language.name))", "score": -0.29346044653210296, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.31274139612462837, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,es), language.name),language.name))", "score": -0.3181454864255806, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.32300643604356527, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.3532913231570115, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,=,es), language.name),language.name))", "score": -0.36355634691973526, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,es),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3761937915110467, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "In how many languages are the movies translated with the original language spanish?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(movie),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,es),language.name,!=,es), language.name),language.name))", "score": -0.4030340049626229, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.03301724833515036, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.43005018481918006, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.5145475145492509, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.8521371097594965, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,=,Post Production), movie.id),movie.runtime)", "score": -0.871799712771186, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(country),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.8980229353974166, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.release_date),movie.runtime)", "score": -0.8989104249444831, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.popularity)", "score": -0.9068902335300583, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,Post Production), movie.id),movie.runtime)", "score": -0.9422650274525407, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.9428065168850084, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.release_date)", "score": -0.9576554944390231, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.vote_average)", "score": -0.9649936776662577, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>=,Post Production), movie.id),movie.runtime)", "score": -0.9665586700067756, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.9784295578015754, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "What is the movie average runtime of movies with the status Post Production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.id)", "score": -0.9827338921762659, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.08833621735539916, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), genre.name),company.name))", "score": -0.2342473941172941, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), keyword.name),company.name))", "score": -0.2470822235270919, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.birth_place),company.name))", "score": -0.2526099771700972, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.28472955558542534, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,10037390),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.29360890987866184, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.3038446155441562, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,10037390), company.name),company.name))", "score": -0.3290537312276299, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,10037390), company.name),company.name))", "score": -0.3308596845946495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3410397403317974, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,10037390), company.name),company.name))", "score": -0.34187078413997485, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.3506369024423464, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), company.name),company.name))", "score": -0.36031907522175205, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), person.death_place),company.name))", "score": -0.3641417190756427, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names where the move revenue was less or the same as 10037390?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,10037390), country.name),company.name))", "score": -0.36731267276028284, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,10037390),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.01088070365585736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.49240143489078037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.6271760005874967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7599078088205715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.7716127341518586, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,6.24827), movie.original_language),movie.original_language))", "score": -0.7772136598032375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.title))", "score": -0.7820738457048719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<,6.24827), movie.original_language),movie.original_language))", "score": -0.8322088985842129, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,6.24827), movie.original_language),movie.original_language))", "score": -0.858721998254623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.8669192694032972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,6.24827), movie.original_language),movie.original_language))", "score": -0.8840239186210965, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.8918732708225434, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.24827), movie.original_language),movie.original_language))", "score": -0.9439735680025478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),genre.name))", "score": -0.9677413605058973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.popularity))", "score": -0.9751866362894361, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1178865427870005, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.12940348920529765, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1768290778771013, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22047973398243595, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.2530271884561694, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),production_country.movie_id,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3081239124003266, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33240077623203457, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.36758608982474134, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.36896075450843974, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3791030362430385, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3857790342279335, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3858332826761853, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),country.name,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3876699242103566, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38903867900387107, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}, {"orig_question": "In which countries are currently unreleased movies being produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3950835283419062, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.title))", "score": -0.24299538528066478, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.release_date))", "score": -0.26309949552160106, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.title))", "score": -0.32836594080072246, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.release_date))", "score": -0.34847005104165873, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))", "score": -0.3749188820038398, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.release_date))", "score": -0.3950229922447761, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.original_language))", "score": -0.4015431443367561, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.status),movie.status))", "score": -0.42292440330129466, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.original_language))", "score": -0.48691369985681376, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.popularity),movie.release_date))", "score": -0.49186506683658304, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.original_language),movie.status))", "score": -0.5082949588213523, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.release_date),movie.title))", "score": -0.5290937462959846, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.original_language))", "score": -0.5334666410599311, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,!=,nb), movie.release_date),movie.release_date))", "score": -0.5459890741031168, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}, {"orig_question": "Are there any movies where nb is not the original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),language.name,!=,nb), movie.popularity),movie.release_date))", "score": -0.5515827305344736, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,nb), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.11069846685859375, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.revenue))", "score": -0.3091568478557747, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.budget))", "score": -0.38001264419290237, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.budget))", "score": -0.38769610013696365, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.budget))", "score": -0.4108613251883071, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.4137640127155464, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.vote_count))", "score": -0.4411203839990776, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),person.death_day))", "score": -0.544773636123864, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.vote_count),movie.revenue))", "score": -0.5784710251900833, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.5812547419060901, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), person.death_day),movie.revenue))", "score": -0.5861544811341446, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.runtime),movie.runtime,<=,134), movie.budget),movie.budget))", "score": -0.5973036125589782, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,134), movie.budget),movie.revenue))", "score": -0.609319706185488, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.revenue),movie.revenue))", "score": -0.6122223937127274, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}, {"orig_question": "Are there budgets for movies with a runtime smaller or equal than 134 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,134), movie.revenue),movie.budget))", "score": -0.6700123899914896, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,134), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.13311208945522546, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.19643053584413686, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.20182907925317298, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_nominee.oscar_id),oscar.number)", "score": -0.22330178203309725, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.runtime),oscar.number)", "score": -0.23731944806532843, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), person.birth_day),oscar.number)", "score": -0.3274282840808802, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.release_date),oscar.number)", "score": -0.3327805511496815, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), movie.id),oscar.number)", "score": -0.33287081723451595, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar_winner.oscar_id),oscar.number)", "score": -0.33416737140238806, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.35580615180100195, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3741477869090688, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>,1975-03-06),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.38146504799566966, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.39310018776054895, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(crew),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.398763341381362, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average oscar edition of oscar winners that were born after 1975-03-06?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_day,>,1975-03-06),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.4114920845885197, "correct_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1975-03-06),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.13991436078885827, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.2888347424620103, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(crew),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.30494933215022185, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3097189358115681, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31246757066904374, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3207975406166664, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.32413921454170463, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.32497864838156354, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(cast),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.32858217710834425, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3332552061964112, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3352178193468029, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3360572392955148, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3393989062749796, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.title,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37449205406218866, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of oscar nominees in the sub category \"writing (adapted screenplay)\" and whose name is not \"Danielle Tabary\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,writing (adapted screenplay)),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,crew.movie_id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3764074602526598, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (adapted screenplay)),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.name,!=,Danielle Tabary),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.13616794982634928, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.category))", "score": -0.23768325732215537, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.number),oscar.number))", "score": -0.24548013841872116, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2470778858991826, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.category))", "score": -0.28515484858566653, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), oscar.category),oscar.number))", "score": -0.2929517296822323, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.category))", "score": -0.2942440463258185, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.30097697487016645, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),genre.name))", "score": -0.3018917459753765, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), company.name),oscar.number))", "score": -0.3020409274223843, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.category))", "score": -0.30533715665481964, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05), movie.title),oscar.number))", "score": -0.31313403775138543, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.31940677092573716, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1952-12-05),oscar_nominee.person_id,movie.id), oscar.number),oscar.number))", "score": -0.3453071444138716, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Name the Oscar categories where the nominated persons born before 1952-12-05.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.34697442761327524, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1952-12-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)", "score": -0.028309214687126657, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,151),movie.revenue)", "score": -0.47482495167014893, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.budget)", "score": -0.6342906076319019, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.popularity)", "score": -0.6895313363849711, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,151), movie.id),movie.revenue)", "score": -0.7146578810621185, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,151), movie.id),movie.revenue)", "score": -0.8247834307071884, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_count)", "score": -0.8387782856259618, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.revenue),movie.revenue)", "score": -0.874207370664563, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.vote_average)", "score": -0.9017595255117904, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,151), movie.id),movie.revenue)", "score": -0.9133391121745931, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,>,151), movie.id),movie.revenue)", "score": -0.9571465180204812, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,151), movie.id),movie.revenue)", "score": -0.9855835498637738, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),cast.movie_id)", "score": -0.9967879879490629, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,151), movie.id),movie.revenue)", "score": -1.0108915453950265, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of movies with a runtime bigger than 151 ? ", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,151),movie.revenue)", "score": -1.0485718649244349, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,>,151), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.1568211241703766, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.16957582117659145, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.24582727884095884, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.27123193215681346, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.2733042560649941, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.28605895307120893, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.budget))", "score": -0.29877378531729165, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.sub_category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.33301473628807204, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound editing),movie.budget),movie.release_date))", "score": -0.3339411363855298, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.3365164598596493, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.category,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.title))", "score": -0.3492711568658641, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.year,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.36231041073557635, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,sound editing),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.budget))", "score": -0.38953244995294833, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar_nominee.oscar_id,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.40097043459584064, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}, {"orig_question": "When was the movie with the highest budget released, which won an oscar for sound editing?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(oscar),oscar.number,=,sound editing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),filter(getData(movie),movie.release_date,=,sound editing),oscar_winner.movie_id,movie.id),movie.budget),movie.release_date))", "score": -0.42601654131102773, "correct_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound editing),movie.budget),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))", "score": -0.009417738659976749, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1584), movie.revenue),movie.revenue))", "score": -0.538708412914275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.budget),movie.revenue))", "score": -0.7063473278067249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1584), movie.revenue),movie.revenue))", "score": -0.7261563184547413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.popularity),movie.revenue))", "score": -0.7547117286703724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1584), movie.revenue),movie.revenue))", "score": -0.7956562879371631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.budget))", "score": -0.7956820153740409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,1584), movie.revenue),movie.revenue))", "score": -0.8253970387268055, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.popularity))", "score": -0.8478022241142753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_count))", "score": -0.8596839332130912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.id),movie.revenue))", "score": -0.8830632382414478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.vote_average))", "score": -0.8851305865791801, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,1584), movie.revenue),movie.revenue))", "score": -0.8917368063230242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,1584), movie.revenue),movie.revenue))", "score": -0.893133760382625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenue of all movies with a vote count over 1584.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.original_language))", "score": -0.908671858265734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,1584), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11250291237068999, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.11311522440967825, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2223717363414324, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.22298404838042066, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.32615918293272794, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3267714949717162, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3428793899733023, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3546505600746826, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37615239314746696, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.homepage,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3767647051864552, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,es), country.name),country.name))", "score": -0.3807002638686486, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3951115036442801, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,!=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39572377068964143, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,es),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41743451752636174, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}, {"orig_question": "In which countries are non spanish speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,es), country.name),country.name))", "score": -0.421650772618862, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,!=,es), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.019487012326862896, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.4295775400023558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_count))", "score": -0.5603125811649079, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7018408621988783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.7145853451547737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.runtime))", "score": -0.7179229975772614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_count),movie.vote_average))", "score": -0.7190674036137352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.738968224144628, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8141774944124336, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.runtime),movie.vote_average))", "score": -0.8170869439236412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,>,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8191010168848152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.popularity),movie.vote_average))", "score": -0.8355478733174095, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.popularity))", "score": -0.8586463452411408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,12.8674), movie.vote_average),movie.vote_average))", "score": -0.8782661403856764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies that have a popularity over 12.8674?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.status),movie.vote_average))", "score": -0.880362936793972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,12.8674), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.037477975092770066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,0.553752), movie.runtime),movie.runtime))", "score": -0.28470859242224833, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,0.553752), movie.runtime),movie.runtime))", "score": -0.617258998878242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,0.553752), movie.runtime),movie.runtime))", "score": -0.6520529122426524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,0.553752), movie.runtime),movie.runtime))", "score": -0.6702587933614268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.7513310931026354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,<=,0.553752),movie.runtime), movie.runtime))", "score": -0.7521965915038891, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.release_date))", "score": -0.7703030126504018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8239800951778307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8271942160426988, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), oscar.year),movie.runtime))", "score": -0.8332777700488805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),person.birth_day))", "score": -0.8420360105446889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,0.553752), movie.runtime),movie.runtime))", "score": -0.8492356560527696, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,null,0.553752), movie.runtime),movie.runtime))", "score": -0.8705191345288767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of movies with a popularity equal or lower than 0.553752?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.vote_average),movie.runtime))", "score": -0.8746810336233466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,0.553752), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.11258901034407026, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.2663350586525467, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,2016-01-13),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28166356190992575, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.birth_day,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28170091686497944, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.2851609990890047, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.2939589460215077, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.3127848864579657, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,Released), genre.name),genre.name))", "score": -0.3265831565100015, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,<=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3322126131470413, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34145414019109094, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,<=,2016-01-13), genre.name),genre.name))", "score": -0.34540909694645955, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,Released),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37323534814725834, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,2016-01-13), genre.name),genre.name))", "score": -0.38385999596643555, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,2016-01-13), genre.name),genre.name))", "score": -0.4026859563385314, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What is the genre name for movies with the status Released and in which persons were involved who died before or at 2016-01-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,<=,Released), genre.name),genre.name))", "score": -0.41148390327103435, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(filter(getData(person),person.death_day,<=,2016-01-13),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.020556703602778725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.3931874459813116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,26500000), movie.popularity),movie.popularity))", "score": -0.4324001198838232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.revenue))", "score": -0.63662136408675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.vote_average),movie.popularity))", "score": -0.6939724749390734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),person.gender))", "score": -0.7070877036749152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.release_date))", "score": -0.720753797024372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.7430951422284124, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.revenue),movie.popularity))", "score": -0.7636321848694934, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,26500000), movie.popularity),movie.popularity))", "score": -0.7659558451705379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>,26500000), movie.popularity),movie.popularity))", "score": -0.801823536210577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.status),movie.popularity))", "score": -0.804952031976427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_place,>,26500000), movie.popularity),movie.popularity))", "score": -0.811789254003088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.vote_average))", "score": -0.8293935737310676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies with a budget different than 26500000 ? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.status))", "score": -0.8362314781843452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.27291537007840816, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.34776780267695107, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.3889297309380998, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.39179178676516807, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.39622703644696244, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.40241498310075635, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.4056001150343461, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.41723925912569604, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.4291013417264486, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.id),movie.popularity),movie.runtime))", "score": -0.44025102053517945, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.44643896718897336, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.status,=,Post Production),movie.popularity),movie.runtime))", "score": -0.4473540004296497, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.popularity,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,movie.popularity),movie.popularity),movie.runtime))", "score": -0.45087419790422345, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,crew.person_id),movie.popularity),movie.runtime))", "score": -0.45478345685860705, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the movie with the lowest popularity, which is in post production?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.status,=,Post Production),getData(movie),movie.id,crew.movie_id),movie.popularity),movie.runtime))", "score": -0.46402836932736413, "correct_code": "done(extractValues(min(filter(getData(movie),movie.status,=,Post Production),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.018305872505152365, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,515), movie.vote_average),movie.vote_average))", "score": -0.4133490840285958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))", "score": -0.605626902768563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_count))", "score": -0.6085978536248149, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.popularity),movie.vote_average))", "score": -0.6632772080447467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,515), movie.vote_average),movie.vote_average))", "score": -0.7078900853484811, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.runtime))", "score": -0.7448564557671489, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.status),movie.vote_average))", "score": -0.8407359115626605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_count),movie.vote_average))", "score": -0.8426327101733477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), person.name),movie.vote_average))", "score": -0.8645803920771868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.popularity))", "score": -0.8667039065003337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,515), movie.vote_average),movie.vote_average))", "score": -0.8702028910010995, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<,515), movie.vote_average),movie.vote_average))", "score": -0.8708243016699271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.runtime),movie.vote_average))", "score": -0.8789197794940264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of those movies with a vote count lower than 515?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.status))", "score": -0.9109320430397929, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,515), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.09357961710375394, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.19729759836972305, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.2320159388368361, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.24144683434298117, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,special effects), person.death_place),person.death_place))", "score": -0.25190243748250174, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2540992092936891, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.2571253551151956, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), genre.name),person.death_place))", "score": -0.3469882155771217, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.category,>,special effects), person.death_place),person.death_place))", "score": -0.3664051855024471, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.37718931574585995, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.37958361670469815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.death_place))", "score": -0.3818713819137676, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,<,special effects), person.death_place),person.death_place))", "score": -0.3829451535714039, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.39175196670119133, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "In how many places did oscar winners in the category special effects die? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,special effects),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.41979869577421935, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,special effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(getData(person),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.25253474948112853, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.30921842527398263, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3396679589305651, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.34809646748405493, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.349033876613497, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.37171684020321927, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.37854600114063736, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.3794834102700795, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.38629321148814455, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.38791191882356924, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4021663738598017, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),crew.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.41153224613378087, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(crew),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4123438015905848, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.41674272411020646, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),cast.movie_id,movie.id),movie.release_date,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4227829443568086, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.19302127523405943, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.19661632938368712, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.31797520084364805, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_count))", "score": -0.3933539466379443, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.4202707783697406, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.43627736730559263, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.number))", "score": -0.48442677421553526, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.death_day))", "score": -0.5377310292242328, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5484177247999469, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.iso_639_1))", "score": -0.5637909547804156, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.original_language))", "score": -0.5765121953008929, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.tagline))", "score": -0.5999200717924396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),spoken_language.movie_id))", "score": -0.6061884538648883, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),movie.vote_average))", "score": -0.6226780020078877, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.runtime))", "score": -0.6234565155027667, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.117311169862448, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.14263749900585443, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.218813832879315, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.2560753651042598, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.26964146914887815, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.tagline,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2722298389231462, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.homepage,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2921847743982318, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3049250139743683, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3197745686921811, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.32415333532373175, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3452270587909029, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.3478012369435962, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.tagline,=,Halloween 5: The Revenge of Michael Myers), genre.name),genre.name))", "score": -0.35201377883212115, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.36557041795681033, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Is there a genre where the movie Halloween 5: The Revenge of Michael Myers belongs to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3685243655790275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Halloween 5: The Revenge of Michael Myers),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))", "score": -0.009776862811122555, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5295518150155909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5564816187895412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.578534576354212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6054643801281623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6248200968481379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.6517499006220882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.673802858186759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6818940413510892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.699064781159635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7007326619607093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7088238451250395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.7259945849335853, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,production_country.movie_id), movie.original_language),movie.original_language))", "score": -0.7302741627576506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with status Post Production?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.7308768026897103, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),person.gender))", "score": -0.020043644955876516, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))", "score": -0.5300056290761859, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,2009-03-29), person.gender),person.gender))", "score": -0.5495458297846199, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,2009-03-29), person.gender),person.gender))", "score": -0.5858094048635394, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2009-03-29), person.gender),person.gender))", "score": -0.5987302613393695, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,2009-03-29), person.gender),person.gender))", "score": -0.6331808023569465, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),movie.popularity))", "score": -0.6635618506879837, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),genre.name))", "score": -0.6951779424161941, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.name),person.gender))", "score": -0.7175488012326241, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.birth_place),person.gender))", "score": -0.7637682097447396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), movie.popularity),person.gender))", "score": -0.778343035508442, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,2009-03-29), person.gender),person.gender))", "score": -0.7901010465757281, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),oscar.category))", "score": -0.8177877365560562, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_day,=,2009-03-29),person.gender), person.gender))", "score": -0.8454560484169633, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}, {"orig_question": "what are the gender of the person with a death day bevore 2009-03-29?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,2009-03-29), person.gender),country.name))", "score": -0.8487797080488235, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2009-03-29), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.02357277126715597, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.44944169598982936, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.5684869009697007, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count)", "score": -0.619524570990735, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.6783734687147388, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.7256343913871048, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.7327516682853457, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.budget)", "score": -0.7545420674277639, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.764063431885086, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.7698679393847602, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8329404550974535, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,=,7.4), movie.id),movie.vote_count)", "score": -0.8580844802380337, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,7.4), movie.id),movie.vote_count)", "score": -0.8581127576775139, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.8624962603050897, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.budget),movie.vote_count)", "score": -0.8842490132233729, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.03368581776953958, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2534725227751327, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.27983118502867477, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.29758402835994546, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id), movie.title),movie.title))", "score": -0.3150030446031313, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3221530957161538, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3262109576248817, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.33990593904742444, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.35512508655298647, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3652299979557432, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.3895959087740112, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.391920228525306, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.3976790590530734, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.406089955913411, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the titles of movies that won an oscar in the category \"visual effects\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.40900638571446074, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.12388555193003714, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),person.death_day,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.27692486576703246, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2822019827638248, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2862239522765264, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2933263111940504, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3049620607230775, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3095004421596321, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.31808071159284584, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.gender),person.birth_place))", "score": -0.32727044253924, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3289758089845489, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_place,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.33108629306281606, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),person.death_place,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3395647218312311, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.tagline,<,100000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.34458950681545825, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3503776074734932, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}, {"orig_question": "What are the different birth places of oscar nominees who played in movies with a bugdet less than 100000?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,<,100000),getData(oscar_nominee),movie.id,cast.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3564455019480473, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,<,100000),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.08934670331309913, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.14991177875649328, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.2854424220598363, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.3279036498330821, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.37891911604901474, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.3961527463017765, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.40535346483667856, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(movie),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.4188588778430799, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4546077676701375, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.4640708431390121, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,Deutsch), movie.id),movie.popularity)", "score": -0.46896423960409866, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(getData(language),movie.original_language,=,Deutsch), movie.id),movie.popularity)", "score": -0.49849691202475205, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity)", "score": -0.508495922316598, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.popularity),movie.popularity)", "score": -0.5139051912936018, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}, {"orig_question": "How much is the sum of the popularity of the movies with the language name Deutsch?", "inferred_code": "sum(distinct(merge(filter(getData(language),movie.original_language,=,Deutsch),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.popularity)", "score": -0.5158615674661803, "correct_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Deutsch), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.05706765465997475, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.18640583513123837, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2613735263255554, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2755317631135891, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2873906323006245, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),movie.original_language))", "score": -0.29508559134151624, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,16.4734),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.37290486733572176, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.3765328787100317, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.38753346331396477, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3930977124645285, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.40693974234902186, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,null,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4070071879342302, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.movie_id,language.iso_639_1), language.name),language.name))", "score": -0.4070856404834465, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.41313601476198464, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Is there a language to which a movie with popularity 16.4734 has been translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),spoken_language.iso_639_1))", "score": -0.4180767631352993, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,16.4734),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))", "score": -0.015256859129294753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.popularity))", "score": -0.520305393030867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.popularity),movie.status))", "score": -0.5777676147408783, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.title))", "score": -0.6222172358538955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,177), movie.status),movie.status))", "score": -0.6436806856654584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.original_language))", "score": -0.6561892607714981, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.vote_average))", "score": -0.6585068681742996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), country.name),movie.status))", "score": -0.6971467775292695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),country.name))", "score": -0.7011951187159866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.original_language),movie.status))", "score": -0.7180586499162018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.iso_3166_1))", "score": -0.7593336084391922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.vote_average),movie.status))", "score": -0.7643514913506806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.release_date))", "score": -0.7891058304812759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),production_country.movie_id))", "score": -0.8012187459971756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}, {"orig_question": "What are the different statuses for movies with a longer runtime than 177?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), production_country.iso_3166_1),movie.status))", "score": -0.818689112085849, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,177), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.1921826740986054, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.22208069941142164, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2514098762454896, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.25377713133833374, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.27254420405150503, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.2749114591443491, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.2779213733072781, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.30781939862009433, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.34355420376699286, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3453689343588013, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.345921458859837, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.35308372049899844, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<,1940-04-05), movie.title),movie.title))", "score": -0.3606566770296913, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3752669864947413, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}, {"orig_question": "Name the movie titles which cast an oscar wining personality born before 1940-04-05.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.birth_day,<,1940-04-05),getData(cast),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.46756321159116476, "correct_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1940-04-05),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.05905813388883655, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.13544756388719265, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.26257848549543583, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,0.217538),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.29839640197661427, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.32505386811782655, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.vote_average,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3389679154937919, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3455851749995935, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.category),oscar.sub_category))", "score": -0.37378758959295444, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3765555593116464, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,!=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3771245805594326, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.category))", "score": -0.39283329607013223, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39316728085554475, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,<=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.3935359874305212, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_keyword.movie_id),movie.popularity,=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.39867603029807075, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "How many oscars sub categories are there with a movie popularity of 0.217538?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.status,>=,0.217538), oscar.sub_category),oscar.sub_category))", "score": -0.4014433349417358, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,0.217538),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)", "score": -0.10167785362273737, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_count)", "score": -0.2725530790296414, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count)", "score": -0.4476936685151829, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count)", "score": -0.46674609385062793, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.id),movie.vote_count)", "score": -0.5057523631733, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,<=,72000000),movie.vote_average)", "score": -0.5600375183304596, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(filter(getData(movie),movie.budget,>=,72000000),movie.vote_count)", "score": -0.6180604076782014, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_average)", "score": -0.6268482939486444, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_count),movie.vote_count))", "score": -0.6816461904636526, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,=,72000000), movie.id),movie.vote_count)", "score": -0.7065879035052894, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.vote_average),movie.vote_count))", "score": -0.7622253679401183, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.budget)", "score": -0.7647447915915517, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.runtime)", "score": -0.7751572705123636, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.revenue)", "score": -0.8420016966047017, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of all movies with a budget of 72000000.0 or less?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,72000000), movie.vote_count),movie.vote_count)", "score": -0.8517681780657456, "correct_code": "avg(distinct(filter(getData(movie),movie.budget,<=,72000000), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.006187366430822294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,Post Production), movie.title),movie.title))", "score": -0.8209415494275163, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.title),movie.title))", "score": -0.8364453135800431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Post Production), movie.title),movie.title))", "score": -0.8706370288055041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.vote_count))", "score": -0.8840339362432132, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.budget))", "score": -0.8859890878011356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.title),movie.title))", "score": -0.8986124812436174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9123892923234962, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.title),movie.title))", "score": -0.9268160878491472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.budget),movie.title))", "score": -0.927760203332582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),production_country.movie_id,=,Post Production), movie.title),movie.title))", "score": -0.931800049431331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(oscar),movie.status,=,Post Production), movie.title),movie.title))", "score": -0.9337212290338357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Post Production), movie.title),movie.title))", "score": -0.9369356452298234, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.runtime))", "score": -0.9442160308171879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}, {"orig_question": "What are the movie titles of the movies which have a Post Production status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), company.name),movie.title))", "score": -0.9546545788980438, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.13178535772639924, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.17882898236675152, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.20308691084888839, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.20753756962924097, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.2595899069169559, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2670386703601759, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3182345303660158, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3222214140939256, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.vote_average)", "score": -0.3262471982917553, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3504302778690718, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3554767076968629, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.iso_639_1),movie.vote_average)", "score": -0.37640356466283115, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.38368562460040384, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Magyar),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.popularity)", "score": -0.38463205689641483, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of all ratings of movies that are translated to Magyar?", "inferred_code": "sum(distinct(merge(merge(filter(getData(language),language.name,=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.popularity),movie.vote_average)", "score": -0.3934859208809582, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.07497372411719434, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.09055417673256518, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2900448092993761, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33220560241843955, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.33664144920471406, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3374337439584284, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3674296025229096, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.3999369675296273, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.name), genre.name),genre.name))", "score": -0.4206350412346088, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(has_genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.42318418110449435, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.42589752053046276, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.42665933434728787, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.43930597455523884, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.4416201154307609, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),person.gender))", "score": -0.47317116350905675, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.04960092475934369, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.1943283448033664, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.id),movie.popularity)", "score": -0.20391989326048174, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.2949321355909032, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.id),movie.popularity)", "score": -0.31147623431820687, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)", "score": -0.34428535486367073, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,<,sound editing), movie.id),movie.popularity)", "score": -0.34843629914770996, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.34864731330450444, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,>,sound editing), movie.id),movie.popularity)", "score": -0.3664573222998597, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.year,!=,sound editing), movie.id),movie.popularity)", "score": -0.39743918208591694, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),filter(getData(oscar),movie.popularity,>,sound editing),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.id),movie.popularity)", "score": -0.4229302538539078, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),country.name,!=,sound editing), movie.id),movie.popularity)", "score": -0.43818014612524026, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.popularity),movie.popularity)", "score": -0.44000289238946994, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.4434657505925157, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have won an oscar in a category other than sound editing?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.status,!=,sound editing), movie.popularity),movie.popularity)", "score": -0.45620365904090365, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.category,!=,sound editing),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.11460735687329693, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.13105308211898503, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.name,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.2260465174384575, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.2573267092734255, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.26390697436254534, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.2666238855191058, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.28934423928597747, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.30021982767281685, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.32478442546820196, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.3270589030759981, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3374959862768321, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_place,=,Gerard Johnstone), movie.popularity),movie.popularity)", "score": -0.3543947435662864, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar.category,=,Gerard Johnstone), movie.id),movie.popularity)", "score": -0.3816468810006704, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.38657281727974085, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}, {"orig_question": "What is the summed popularity of movies with a crew member named \"Gerard Johnstone\" ? ", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,=,Gerard Johnstone),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.popularity)", "score": -0.4121645491736962, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Gerard Johnstone), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)", "score": -0.032331271002066175, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.runtime),movie.runtime)", "score": -0.4270853486223294, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.id),movie.runtime)", "score": -0.5445287986292269, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,!=,Released),movie.runtime)", "score": -0.6173276989488393, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,!=,Released), movie.id),movie.runtime)", "score": -0.6926692992094943, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime)", "score": -0.7697115085234056, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.status,>=,Released),movie.runtime)", "score": -0.8214526393449304, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,Released), movie.id),movie.runtime)", "score": -0.874373493874392, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),country.name,!=,Released), movie.id),movie.runtime)", "score": -0.8833937468257512, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>=,Released), movie.id),movie.runtime)", "score": -0.9198758012929736, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,!=,Released), movie.runtime),movie.runtime)", "score": -0.9392828921340446, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,>,Released), movie.id),movie.runtime)", "score": -0.9433365990919753, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(filter(getData(movie),movie.release_date,!=,Released),movie.runtime)", "score": -0.9500967321336955, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.vote_average)", "score": -0.9670355642188371, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies that weren't released?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),oscar.year)", "score": -0.9948214642256031, "correct_code": "sum(distinct(filter(getData(movie),movie.status,!=,Released), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.09912060546204692, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.1752787156187082, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.1891832957731474, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.29158800874325136, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),genre.name), genre.name))", "score": -0.2990929534201463, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,1999-12-16), genre.name),genre.name))", "score": -0.3104109643803725, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,<=,1999-12-16), genre.name),genre.name))", "score": -0.32950215179141673, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.34200462899916595, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.35083450251120163, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3675908906101242, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),person.birth_day,>,1999-12-16), genre.name),genre.name))", "score": -0.3701040130946321, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,1999-12-16), genre.name),genre.name))", "score": -0.38165069905435184, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(distinct(extractValues(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,1999-12-16),genre.name), genre.name))", "score": -0.3925751051086051, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.4246810023528929, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.42702836015637363, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.051298632854013704, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.3982114873288083, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.vote_count))", "score": -0.6137476774019888, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.title))", "score": -0.6146660683007212, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.vote_count),movie.title))", "score": -0.62640727647522, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.budget))", "score": -0.6689120145601919, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.budget),movie.title))", "score": -0.6720868457196048, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))", "score": -0.7276902337034699, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), oscar.number),movie.title))", "score": -0.7338715899823001, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,42), movie.title),movie.title))", "score": -0.7426465747848852, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.original_language),movie.title))", "score": -0.7546772468922427, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), company.name),movie.title))", "score": -0.7587157595989993, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,42), movie.title),movie.title))", "score": -0.772730588723789, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.runtime,>=,42),movie.title), movie.id))", "score": -0.8170836058707209, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}, {"orig_question": "Do movie titles exist for movies with a runtime of at least 42? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), keyword.name),movie.title))", "score": -0.8224082697270205, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>=,42), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.13850080881114915, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.19617544806009274, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(oscar),has_keyword.keyword_id,oscar.id), oscar.number),oscar.number))", "score": -0.24346998625429456, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), movie.title),oscar.number))", "score": -0.26300021436033244, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.2637576609622864, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), movie.title),oscar.number))", "score": -0.2637816142024126, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.sub_category),oscar.number))", "score": -0.2874411726022054, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.3040191715420897, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3116527751794345, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.number),oscar.number))", "score": -0.3230850958423462, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.number))", "score": -0.3236873710543671, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id), oscar.sub_category),oscar.number))", "score": -0.32683300246924196, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,kampfjet), oscar.number),oscar.sub_category))", "score": -0.3367529380718641, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),keyword.id,has_keyword.keyword_id), oscar.number),oscar.number))", "score": -0.3417948044113827, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}, {"orig_question": "How many oscar numbers for movies that have not the keyword kampfjet are there?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_keyword.movie_id,has_keyword.keyword_id), oscar.number),oscar.number))", "score": -0.3433334793434808, "correct_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(keyword),keyword.name,!=,kampfjet),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))", "score": -0.08622071755962679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),movie.original_language))", "score": -0.16814605383115122, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),language.name))", "score": -0.44563471110450337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Sky High), movie.original_language),movie.original_language))", "score": -0.5228166976376087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), movie.original_language),language.name))", "score": -0.5275600473760278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),movie.original_language))", "score": -0.5614324336519032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), language.name),movie.original_language))", "score": -0.5672725383556099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), language.name),language.name))", "score": -0.6010432567449836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),movie.original_language))", "score": -0.6064303755388215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), language.name),movie.original_language))", "score": -0.6122556220591711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.status,=,Sky High), language.name),movie.original_language))", "score": -0.6355371155169646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,=,Sky High), movie.original_language),language.name))", "score": -0.6460411986319019, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.title),movie.original_language))", "score": -0.6460908595836372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Sky High), language.name),movie.original_language))", "score": -0.6491978746271343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}, {"orig_question": "What is the language of the movie Sky High?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,=,Sky High), language.name),language.name))", "score": -0.6518664451522515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Sky High), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.13950060664759795, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.1717833597312453, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.20045099272254446, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.21861847233362966, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.27142906290752933, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<=,http://www.hailcaesar-film.com/ww/),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.30357930621445994, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.33543190618146407, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,>=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33901035593140283, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(cast),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33999998444794305, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1981-01-18),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_day),person.death_place))", "score": -0.3407369224284219, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,<=,http://www.hailcaesar-film.com/ww/),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.34774183373341755, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_winner.person_id),person.birth_day,<=,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.35061211409048354, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,<=,1981-01-18),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3541713662008042, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1981-01-18),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id), person.death_day),person.death_place))", "score": -0.36092193901224784, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death of all oscar nominees who were born on or before the 18-01-1981 and who's movie home page is other than http://www.hailcaesar-film.com/ww/", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_day,<,1981-01-18),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.36452966792362695, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.homepage,!=,http://www.hailcaesar-film.com/ww/),filter(getData(person),person.birth_day,<=,1981-01-18),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.0428985703617392, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.23302532367120238, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.26654616236917344, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.26924351439952854, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.3442309806246734, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.runtime),movie.runtime)", "score": -0.34511489388410244, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,<=,1985-05-13), movie.id),movie.runtime)", "score": -0.3510486146612736, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.id,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.386953769766616, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.39164109261298463, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.40525183394230463, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.movie_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.4256141794641423, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,!=,1985-05-13), movie.id),movie.runtime)", "score": -0.4319404558853814, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(getData(person),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.433714287172393, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1985-05-13), movie.id),movie.runtime)", "score": -0.45312529118988865, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "Whats the average movie runtime for movies in which at least one cast member died after 1985-05-13?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_day,>,1985-05-13), movie.id),movie.runtime)", "score": -0.45937025849342156, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1985-05-13),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.022153078271288172, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,495303), company.name),company.name))", "score": -0.2776960262732977, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),person.birth_place))", "score": -0.3575865416259382, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,495303), company.name),company.name))", "score": -0.3670019066126553, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.37083077455393254, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,495303), company.name),company.name))", "score": -0.37254256082837367, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),production_company.company_id))", "score": -0.3875758012775088, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), person.birth_place),company.name))", "score": -0.40016669254733933, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),movie.title))", "score": -0.4103681362062213, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,495303), company.name),company.name))", "score": -0.4119812398276854, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), movie.title),company.name))", "score": -0.41517034214168363, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4256634598944125, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4307236326366136, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.43190565093405286, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many production companies have not created a movie with a revenue of 495303?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(genre),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,!=,495303), company.name),company.name))", "score": -0.4329304313186621, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,!=,495303),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2161389981253576, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.22002235404105536, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2402945292375718, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2408040309774695, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.2558142405409517, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,!=,writing),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.27065578681931274, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.title,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.3465317540378666, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.sub_category,!=,writing), movie.vote_count),movie.vote_count))", "score": -0.36220863283472404, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36228402100861534, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3724389360267896, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37286992202554226, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.37550476464229043, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(movie),oscar.id,movie.id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3759357886424638, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.40728231156014, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}, {"orig_question": "What movie vote count did each oscar movie receive except those movies in the writing oscar category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_winner.oscar_id),oscar.category,!=,writing),merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.40771329755889263, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,!=,writing), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.15800395276351326, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.17805152047872608, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.3281518289185552, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,Italy), movie.id),movie.revenue)", "score": -0.3532869410224361, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(country),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.35480523463620844, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.38533452257711387, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(merge(filter(getData(country),country.name,!=,Italy),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.revenue)", "score": -0.42459705796740643, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.42655212951818333, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.455510197546924, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,!=,Italy), movie.id),movie.revenue)", "score": -0.45800023335656626, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),movie.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4776029903246209, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),genre.id,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)", "score": -0.4782072464905188, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Italy), movie.id),movie.revenue)", "score": -0.48115691401004973, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.popularity)", "score": -0.5301096157582585, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}, {"orig_question": "What is the average revenue of all produced movies except the movies produced in Italy?", "inferred_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.budget)", "score": -0.5456609704437924, "correct_code": "avg(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Italy), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,139), movie.revenue),movie.revenue))", "score": -0.5529998513741026, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,139), movie.revenue),movie.revenue))", "score": -0.5621967433209857, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.number,>,87),person.name,>,139), movie.revenue),movie.revenue))", "score": -0.5657398695860703, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,139), movie.revenue),movie.revenue))", "score": -0.5695173427639786, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.movie_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,>,87),person.name,>,87), movie.revenue),movie.revenue))", "score": -0.5706016440515713, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,>,87),person.name,>,87), movie.revenue),movie.revenue))", "score": -0.5749367376370328, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6130281507635351, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.618455723625943, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.618857501034246, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.624285057097309, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6247905144623671, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6302179585297976, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,139), None),None))", "score": -0.6302922719083343, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6306198815324228, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}, {"orig_question": "How many revenues are there, for oscar winner movies with an oscar number higher than 87 and a cast order less than 139?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),getData(cast),person.id,movie.id),oscar.id,oscar_nominee.oscar_id),merge(getData(person),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),person.id,cast.person_id),oscar_nominee.person_id,movie.id),oscar.number,None,87),None,None,87), None),None))", "score": -0.6357199595662654, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,87),filter(merge(getData(person),getData(cast),person.id,cast.person_id),cast.order,<,139),oscar_winner.person_id,person.id),getData(movie),cast.movie_id,movie.id), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.07260764072977957, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.14647280476722513, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.2116828562867033, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.number))", "score": -0.26766214045695735, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.28554802032414883, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),movie.title))", "score": -0.31378300365819367, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3140357698246482, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3178753719041545, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))", "score": -0.3316620588920526, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),person.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.35066335735166126, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),company.name))", "score": -0.38311197501949285, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.number))", "score": -0.3861512653505544, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),movie.title))", "score": -0.3876481676956392, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.38790093386209373, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In what oscar categories have oscars been won for movies with a revenue of at most 13391174?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,13391174),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.year),oscar.sub_category))", "score": -0.4067373560138811, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,13391174),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.1462918296553256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.15280661887541433, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.gender))", "score": -0.23342304202305528, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.name),person.gender))", "score": -0.23993783124314402, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.name))", "score": -0.3158956901247464, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.name))", "score": -0.3224104793448351, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,>=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.3314550654020351, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3388224975754822, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.34533728679557096, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.gender),person.gender))", "score": -0.34635259110702316, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>,550000), person.name),person.gender))", "score": -0.3528673803271119, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.gender),person.gender))", "score": -0.3769087045595393, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,<=,550000), person.name),person.gender))", "score": -0.38342349377962803, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.budget,<=,550000),getData(person),oscar_winner.person_id,person.id), person.gender),person.gender))", "score": -0.3869233858856211, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}, {"orig_question": "Are there persons gender for oscar winner movies with a budget smaller or equal than 550000 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.budget,>=,550000), person.gender),person.name))", "score": -0.4030269024924761, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.budget,<=,550000), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.21836573552192257, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.2549842730697351, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.26380631722932546, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.2663058781600787, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.2774108375687656, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.28215522422021794, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.286265724041683, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,directing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.30268338534336947, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3058121138250078, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,movie.id), country.name),country.name))", "score": -0.3171337189153514, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3191697436094951, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3242387927105917, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3353760753349671, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_winner.movie_id,movie.id), country.name),country.name))", "score": -0.33709355744281905, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In which countries were the oscar nominated movies in the sub category directing produced?", "inferred_code": "done(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3543412609260368, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,directing),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.01909778849585564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.release_date))", "score": -0.7510218685529253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.7688442687576753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.runtime))", "score": -0.8213053104154824, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.runtime),movie.runtime))", "score": -0.8314073469409777, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),person.birth_day))", "score": -0.8335079019925615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), person.birth_day),movie.runtime))", "score": -0.8472574707739113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.status))", "score": -0.8543897932431719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))", "score": -0.882949369988637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.title))", "score": -0.8995887106320879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.status),movie.runtime))", "score": -0.9082673546545266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.runtime), movie.runtime))", "score": -0.9168123148920131, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.runtime),movie.runtime))", "score": -0.9286033894786669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.runtime))", "score": -0.929322516607499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}, {"orig_question": "What are the runtimes of those movies with the Released status?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.runtime))", "score": -0.9509950634710549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.name))", "score": -0.1961743296997156, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.gender))", "score": -0.26342671978636645, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))", "score": -0.3431978324369993, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.gender))", "score": -0.41045022252365015, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.name))", "score": -0.4540829254256096, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.name))", "score": -0.5075550047622528, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,!=,f),person.name), person.gender))", "score": -0.5213353155122604, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), person.id))", "score": -0.5507864491955843, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.gender), person.gender))", "score": -0.5748073948489036, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.name))", "score": -0.6011064281628933, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.name))", "score": -0.6545785074995365, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), language.name))", "score": -0.6567025916592684, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.popularity))", "score": -0.6636788384930696, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.name,=,f),person.name), person.gender))", "score": -0.6683588182495441, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}, {"orig_question": "Are there female persons?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.name), movie.revenue))", "score": -0.6703673141018953, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.1733874655001567, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.1760927670839871, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.1807885755515362, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.25899899217023614, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.2613139504263755, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.2658902253505982, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,oscar_winner.movie_id),filter(getData(person),person.birth_day,>,31.8267),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.30842032961894844, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.31519861485589173, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3250589421457413, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,31.8267),getData(oscar_winner),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.32726394405670534, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.34088930245073656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.popularity,>,31.8267), person.death_place),person.death_place))", "score": -0.3453637461938431, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.death_place),person.death_place))", "score": -0.34558511091828564, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.person_id), person.death_place),person.death_place))", "score": -0.35105359480264237, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many death places are there from persons from oscar winning movies with a movie popularity over 31.8267?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),movie.popularity,>,31.8267),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.death_place),person.death_place))", "score": -0.35923585282062465, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.popularity,>=,31.8267),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.21162760391598753, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.24890049665750608, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.2721211022473847, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects),movie.runtime),movie.popularity))", "score": -0.2733460658130922, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3488928804838921, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.38118148961787357, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.39159345274495716, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.3953735045752831, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.39914865508477804, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,movie.id),movie.runtime),movie.popularity))", "score": -0.4127633231706921, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,special effects), movie.id),movie.popularity)", "score": -0.4129455125857413, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),movie.runtime),movie.popularity))", "score": -0.4215892868321531, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.42726056603290363, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,special effects), movie.id),movie.popularity)", "score": -0.42883931218901244, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}, {"orig_question": "How much is the movie popularity from the movie with the shortest runtime in the oscar category special effects?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,special effects),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime),movie.popularity))", "score": -0.43385673917161355, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,special effects),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.10856557429360691, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.2087658420660292, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04), movie.title),movie.title))", "score": -0.2819446973898921, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,>,1947-09-04), movie.title),movie.title))", "score": -0.28529399529009175, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.35487493249370644, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1947-09-04),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3869520692103042, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.birth_day,>,1947-09-04),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.39091902924649136, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),movie.release_date,>,1947-09-04), movie.title),movie.title))", "score": -0.4183725111965649, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), oscar.id),oscar.number)", "score": -0.43790684301008126, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(crew),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.4818534189292375, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(movie),oscar_winner.movie_id,movie.id),crew.movie_id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.48241611415956903, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,1947-09-04), movie.title),movie.title))", "score": -0.4835382083110744, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.death_day,>,1947-09-04),person.gender,>,1947-09-04), movie.title),movie.title))", "score": -0.4872656537049659, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1947-09-04), oscar.number),movie.title))", "score": -0.5135959971375996, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}, {"orig_question": "What movies have an oscar winner that died after 1947-09-04?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.id),oscar.number)", "score": -0.5315374440572708, "correct_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>,1947-09-04), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.10399957819451641, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.15136651621997801, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.2000051485792802, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.226768101431952, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2274918787603305, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.25175285440356054, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_average,>=,160), genre.name),genre.name))", "score": -0.2748588167857921, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,>=,160), genre.name),genre.name))", "score": -0.32349744914509426, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,>=,160), genre.name),genre.name))", "score": -0.33330687274659615, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3703036264923867, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>=,160), genre.name),genre.name))", "score": -0.3720868094680934, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.3752451549693746, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<=,160), genre.name),genre.name))", "score": -0.3860121019281847, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar_winner.movie_id,>=,160), genre.name),genre.name))", "score": -0.403611954124825, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.40511127578588235, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))", "score": -0.019614823864685604, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.popularity),movie.popularity))", "score": -0.4327057262453309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,Released), movie.popularity),movie.popularity))", "score": -0.48790317378370673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.6401326414234063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),person.gender))", "score": -0.7237516995555779, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.popularity),movie.popularity))", "score": -0.72599837859525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.release_date),movie.popularity))", "score": -0.7435709959863743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.popularity),movie.popularity))", "score": -0.7657969256433717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Released), movie.popularity),movie.popularity))", "score": -0.7705303092989197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.7707147724031529, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.release_date))", "score": -0.7823707815296075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Released), movie.popularity),movie.popularity))", "score": -0.8130902906450501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,Released), movie.popularity),movie.popularity))", "score": -0.8138392337168625, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.popularity),movie.popularity))", "score": -0.818331814607518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}, {"orig_question": "What are the different popularities for released movies?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,Released), movie.popularity),movie.popularity))", "score": -0.8507894536051026, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2284995214975025, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2411340730600436, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.2577004640093579, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.30302240898158433, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3123440288334415, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.31946119388869304, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3239589573004166, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,oscar_winner.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),cast.movie_id,movie.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3245665123923036, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33209574545123416, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33659350886295775, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.33872977636608403, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.3486621804250819, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_company),person.id,cast.person_id),getData(company),production_company.company_id,company.id),person.death_day,>=,2017-08-13), company.name),company.name))", "score": -0.3501790894719171, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(has_genre),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.35136434509542436, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies, which employed a person that died after 2017-08-13?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(production_country),person.id,oscar_winner.person_id),getData(company),production_company.company_id,company.id),person.death_day,>,2017-08-13), company.name),company.name))", "score": -0.35315991697907123, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,2017-08-13),getData(crew),person.id,crew.person_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.1614857714988041, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.21311071525878264, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2349831169016308, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2532417282288212, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.number,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.2760286337024522, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>,63), movie.id),movie.vote_count)", "score": -0.2848244066844783, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,<=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3222238094153661, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>=,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3293194888308797, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,>=,63), movie.id),movie.vote_count)", "score": -0.3334644743250084, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3364880778858018, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,>,63),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.35434623438975543, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,63),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.35461738843615764, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.year,<=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3547466624169496, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_count)", "score": -0.3581443042094838, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movies vote count for movies nominated for oscars with an oscar number of 63 or more?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,>=,63),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.vote_average)", "score": -0.36010901004355433, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>=,63), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.327312275830037, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3301723692460063, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.35110936690274647, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3776958524133141, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.3780759524897354, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.38020567888859974, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.38064052699287104, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.39454076637309177, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(spoken_language),person.id,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.3957584219765714, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),spoken_language.movie_id,movie.id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.39955406551618894, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_winner),person.id,spoken_language.iso_639_1),getData(movie),oscar_winner.movie_id,movie.id),language.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.4014929891026392, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.4043778501258135, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Al Lewis),movie.vote_count),movie.budget))", "score": -0.4209882485088122, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,!=,Al Lewis),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),movie.vote_count),movie.budget))", "score": -0.427054970358596, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}, {"orig_question": "How much ist the movie budget with the minimum of votes from all movies without the person Al Lewis?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.name,=,Al Lewis),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.budget))", "score": -0.42810923112133675, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.name,!=,Al Lewis),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.vote_count),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.07183494459715642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.3536817730637267, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity)", "score": -0.43969396419293977, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>,13100000), movie.id),movie.popularity)", "score": -0.5328355644323299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,13100000), movie.id),movie.popularity)", "score": -0.6548818034943784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.release_date))", "score": -0.7485607556300238, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,>=,13100000), movie.id),movie.popularity)", "score": -0.7684774145537215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,<=,13100000), movie.id),movie.popularity)", "score": -0.7742131016102332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.vote_average)", "score": -0.7755012861917199, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.revenue)", "score": -0.7844479677518651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,>=,13100000), movie.popularity),movie.popularity)", "score": -0.8266364192926167, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.popularity),movie.popularity))", "score": -0.8453828699202859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,13100000), movie.popularity),movie.popularity))", "score": -0.8469981217058375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.id),movie.popularity)", "score": -0.8567806010084222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}, {"orig_question": "Show Movie Popularity Where the Movie Budget is equal or greater than 13100000", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,>=,13100000), movie.id),movie.runtime)", "score": -0.8697017576743008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,13100000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.06856398649153092, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.2016475855567919, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average),movie.popularity))", "score": -0.22254280343811167, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.25472282841715593, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(country),country.name,=,South Africa),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.33870462290391756, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,country.name),movie.vote_average),movie.popularity))", "score": -0.3800760957899451, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.vote_average))", "score": -0.3955171194329396, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.name,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4070425940125058, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.421244231929959, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(language),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4216688875954747, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4293350883713367, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "avg(distinct(filter(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,South Africa),movie.vote_average,=,South Africa), movie.id),movie.popularity)", "score": -0.4327378575351437, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "count(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.4352066074705725, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.status))", "score": -0.4461652286391018, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the movie popularity of movies with a minimum vote average that were produced in the country called Souft Africa?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))", "score": -0.45006987913855245, "correct_code": "done(extractValues(min(merge(filter(getData(country),country.name,=,South Africa),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.2174028952323775, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.2384314006899188, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.248885466064461, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.number))", "score": -0.25178287721123044, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.26274863462566433, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.genre_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.3155207882042257, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.31889995838722063, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.3259416520699333, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,oscar.id),genre.id,has_genre.genre_id),genre.name,!=,Horror), oscar.year),oscar.year))", "score": -0.328289014863279, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.3293540237617628, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,oscar_nominee.oscar_id), oscar.year),oscar.year))", "score": -0.3363957174444755, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.person_id), oscar.year),oscar.year))", "score": -0.341241890835511, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.34321720948261825, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.year),oscar.year))", "score": -0.34776005252001113, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}, {"orig_question": "Are there oscar years where the winning movie did not belong to the genre Horror ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),language.iso_639_1,has_genre.genre_id), oscar.year),oscar.year))", "score": -0.350258903165331, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Horror),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,movie.id), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.06295139630674385, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))", "score": -0.4614842484734254, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.birth_day))", "score": -0.4786343556770589, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.death_day))", "score": -0.5469269138702657, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.gender))", "score": -0.5564671439060476, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.birth_day),person.name))", "score": -0.6376648515870329, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),movie.revenue))", "score": -0.6646492761501577, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,!=,Topanga, Kalifornien), person.name),person.name))", "score": -0.6718894616642501, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar.year))", "score": -0.6732870620617177, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,>,Topanga, Kalifornien), person.name),person.name))", "score": -0.7046943091263529, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),person.id))", "score": -0.7074215096363332, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), oscar.year),person.name))", "score": -0.7086584538628813, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,!=,Topanga, Kalifornien), person.name),oscar_winner.person_id))", "score": -0.7167716902622487, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.id))", "score": -0.7222657303354936, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}, {"orig_question": "Are there persons that did not die in Topanga, Kalifornien?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_place,=,Topanga, Kalifornien), person.name),person.name))", "score": -0.7703055523743387, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.death_place,!=,Topanga, Kalifornien),person.name), person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.20308814109795953, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.2585643945981341, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.26237978021654024, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.2656676497715341, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.2790981383175632, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3249592888901149, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3301454210140195, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3343680593339854, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.33838977743614396, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.34167764699113784, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.35847175622401634, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.36891528217850766, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.id),movie.runtime)", "score": -0.3690028646892981, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.38747231235014273, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}, {"orig_question": "What is the movie runtime of the movie with the biggest revenue and where there is no person named Jack Lotz?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),person.id,oscar_winner.person_id),getData(movie),cast.movie_id,movie.id),movie.revenue,=,Jack Lotz), movie.runtime),movie.runtime))", "score": -0.3894370691313256, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name,!=,Jack Lotz),movie.revenue),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.05788481901582221, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Post Production), country.name),country.name))", "score": -0.13461931581642964, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Post Production),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32537719038707674, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.3567406660115038, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3735879819906655, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), person.birth_place),country.name))", "score": -0.391093621356975, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.40404667629777496, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.4246854307294867, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42504513221074863, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.42986759787654444, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1), country.name),country.name))", "score": -0.4323126888982531, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4370503596785702, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.43748053782724466, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(production_country),getData(language),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4390034810039978, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}, {"orig_question": "Do countries exist where movies were produced which don't have the status Post Production? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4392295606888902, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.status,!=,Post Production), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.03763851112483185, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,136),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2142733352735124, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.23840991327248223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3494958411556172, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3526837357022267, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.38566669269955617, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39804044818687623, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3994335328342161, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.birth_place))", "score": -0.41045830352003143, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), movie.status),country.name))", "score": -0.41590981359323975, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.42081930634756715, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42342454145507963, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42395610301649284, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.iso_3166_1))", "score": -0.428683091444515, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}, {"orig_question": "Are there countries in which movies with a runtime of 136 minutes were produced?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,136),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),person.gender))", "score": -0.4319632747036101, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,=,136), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.11552998605682349, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.12029172619216413, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.2443819491707191, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.24591067720121215, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.26757277426723636, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.33353801803537425, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3380576523279332, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.3453768099106379, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.3509423709752609, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), movie.title),oscar.number)", "score": -0.38020354878245005, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4155266898727541, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.41990949965546553, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.42028843000809474, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.4246712494317104, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.sub_category),oscar.number)", "score": -0.430520603506759, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.2606218813258317, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_day),person.death_place))", "score": -0.3261774218781394, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3377257451866406, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.34645928905159973, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.3561978492282458, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.35917001537549814, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3638705703242737, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.36493139309320494, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.36790355924045726, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3693330530498513, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.movie_id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.3706257337699091, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,person.id),oscar_nominee.movie_id,movie.id), person.death_place),person.death_place))", "score": -0.37260410765222246, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), person.death_place),person.death_place))", "score": -0.37764211451434554, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.movie_id),oscar_nominee.movie_id,movie.id), person.death_day),person.death_place))", "score": -0.3970250071321396, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}, {"orig_question": "Where died the persons who have been oscar nominated after the year 2014?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2014),merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,person.id),oscar_nominee.movie_id,movie.id), person.death_day),person.death_place))", "score": -0.40575855099709873, "correct_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2014),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3216655967163496, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.32843765010901405, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3403970156488908, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.353897950199143, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.36771776530779343, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.37148525354915274, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),crew.movie_id,movie.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3853050686578032, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3869056668761793, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Mexico),getData(production_country),person.id,production_country.iso_3166_1),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3885253857591898, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.3932745278573249, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(production_country),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.394006297813461, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),person.id,production_country.iso_3166_1),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.39823892313136966, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(company),production_company.company_id,company.id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.3984124505493515, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,production_company.company_id),person.birth_place,=,Mexico), company.name),company.name))", "score": -0.40563708580872054, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}, {"orig_question": "Which companies from Mexico produced their films in Mexico ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.id,production_country.iso_3166_1),keyword.name,=,Mexico), company.name),company.name))", "score": -0.41996089164777645, "correct_code": "done(extractValues(distinct(filter(merge(merge(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),country.name,=,Mexico), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.06261670913825133, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16021255420882705, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,>=,200000), country.name),country.name))", "score": -0.23774382742149847, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2506595238737308, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2917826334376367, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,200000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2921351210625721, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3468021052517283, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3527565701460113, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.tagline,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3527592282310483, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,>=,200000), country.name),country.name))", "score": -0.35290483667898126, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3548401898448375, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar_nominee.movie_id,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.37047111206678673, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,200000), country.name),country.name))", "score": -0.37608618650612086, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_place,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39721072487242814, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}, {"orig_question": "What are the countries names where movies with budgets of 200000.0 or more are produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,>=,200000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39767892405488736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,>=,200000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.19686105950445695, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2100201752887723, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.22525631420002776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.23905613489252103, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,2016-03-17), oscar.number),oscar.number))", "score": -0.25221525067683637, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2738117707392321, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.28417829343250883, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.runtime,>,2016-03-17), oscar.number),oscar.number))", "score": -0.2973349726388736, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.release_date,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3160068461272962, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),person.birth_day,>,2016-03-17), oscar.number),oscar.number))", "score": -0.32791652460981435, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.year),oscar.number))", "score": -0.3620236552671517, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.category),oscar.number))", "score": -0.36467862148440383, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),person.birth_day,>,2016-03-17), oscar.number),oscar.number))", "score": -0.3701115861363803, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.popularity,>,2016-03-17), oscar.year),oscar.number))", "score": -0.3751827621738783, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}, {"orig_question": "Is there an oscar edition where a movie released after 2016-03-17 won?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),movie.runtime,>,2016-03-17), oscar.number),oscar.year))", "score": -0.4311283052944988, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),movie.release_date,>,2016-03-17),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.1261291323396796, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2079699626657311, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2215824768750959, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.23735981288871857, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.24001574598440292, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2556401283870044, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2686381620030049, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.26925264259636916, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2822506762123697, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3163083277242782, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3221584375368373, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32992084193364296, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3512464631513321, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3606256592020224, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38702172202577045, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), movie.title),movie.title))", "score": -0.1253601656804819, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), movie.title),movie.title))", "score": -0.13435317618342724, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.21952828215599804, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.24921576055303124, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,documentary (feature)), movie.title),movie.title))", "score": -0.2671349080352327, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,documentary (feature)), movie.title),movie.title))", "score": -0.2772897143461626, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.runtime,=,documentary (feature)), movie.title),movie.title))", "score": -0.2878598553044118, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3214452082991221, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,documentary (feature)), movie.title),movie.title))", "score": -0.32204056064803865, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.32975870536996527, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3303110953119354, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,<=,documentary (feature)), movie.title),movie.title))", "score": -0.3304382188020674, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>=,documentary (feature)),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))", "score": -0.3599985647102432, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,documentary (feature)), oscar.number),movie.title))", "score": -0.4690306197236443, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}, {"orig_question": "What are the winner movie titles from the oscar category documentary (feature) that have won the least oscars?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)), oscar.number),movie.title))", "score": -0.4780236302265896, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.17713320954030423, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))", "score": -0.21031989740348375, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.21317988119539372, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2750600214663289, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),language.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.2994156263896608, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.30646156174214345, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),keyword.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3229027765924838, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),genre.name,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3235878015215329, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.movie_id,person.id), movie.runtime),movie.runtime))", "score": -0.33964824960532297, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), oscar.year),movie.runtime))", "score": -0.3402324601477927, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.35071900078719725, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(person),movie.original_language,=,Bad Aibling, Bayern),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.3533920088560732, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.person_id,movie.id), movie.runtime),movie.runtime))", "score": -0.36977791983013597, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.40121895025680115, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "Are there runtimes of movies that have oscar nominees that were dead in \"Bad Aibling, Bayern\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,person.id),person.id,oscar_nominee.person_id),person.death_place,=,Bad Aibling, Bayern), movie.runtime),movie.runtime))", "score": -0.40492237490805355, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bad Aibling, Bayern),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.07166689503355883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.22421460840268992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.3835335155890789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.41878430888621865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.4819308897422161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,=,nb),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.revenue))", "score": -0.49388093723564813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(language),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.53608122895821, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(keyword),language.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6344786031113472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),keyword.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6730453023628797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(country),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.6744114538596477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,=,nb), movie.revenue),movie.revenue))", "score": -0.6855849871353712, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(genre),movie.original_language,=,nb), movie.revenue),movie.revenue))", "score": -0.7194493791030254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),cast.movie_id))", "score": -0.7333843820670154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,nb), movie.revenue),movie.revenue))", "score": -0.7527395734505262, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies in nb language get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),cast.person_id))", "score": -0.7694156282523181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,nb), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.10519651285973262, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1467068613397884, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.18972311685359275, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.1921674410241528, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.25647873253866854, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3099616320726517, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), movie.title),company.name))", "score": -0.33917071995384246, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),person.birth_place))", "score": -0.35010542369246067, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),movie.title))", "score": -0.3597550698023867, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Rumored), movie.title),company.name))", "score": -0.39421166201811464, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), movie.title),company.name))", "score": -0.40369786808941316, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(movie),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.4099428283067083, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.41982255936497503, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), person.birth_place),company.name))", "score": -0.4202169303047517, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the companys names where the movie status was Rumored?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.status,=,Rumored), company.name),company.name))", "score": -0.43510178066474, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.06637960441477667, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.16281280294306139, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,=,35841901),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.26255021591419175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))", "score": -0.3125655079130293, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3416006065258027, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3505334734246435, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.36306223486401407, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36559932220885427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.38206892083887967, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3962167759575093, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.40341904722979216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,=,35841901),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.41254537021955345, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,35841901), company.name),company.name))", "score": -0.4153452118617638, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,35841901),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.4210574328770595, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}, {"orig_question": "Does a production company exist that generated a revenue of 35841901 for a movie? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,35841901), company.name),company.name))", "score": -0.423575848965607, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,=,35841901), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.04436949645067478, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.1647972967389538, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.2737458259013079, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.33685227390639083, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,=,2100), country.name),country.name))", "score": -0.34476337236323007, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>=,2100), country.name),country.name))", "score": -0.3594492505304468, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), person.birth_place),country.name))", "score": -0.36062066928982245, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), movie.status),country.name))", "score": -0.37234601400516437, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.runtime,<=,2100), country.name),country.name))", "score": -0.3885435980091037, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), oscar.sub_category),country.name))", "score": -0.3933652998907772, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,2100), country.name),country.name))", "score": -0.39694494854782114, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),movie.status))", "score": -0.40160332065646226, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<=,2100), country.name),country.name))", "score": -0.4073312974621623, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,<=,2100), country.name),country.name))", "score": -0.421998286603932, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}, {"orig_question": "How many countries with a movie vote count of 2100.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),person.birth_place))", "score": -0.4257210831080389, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,2100), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.09775018044453256, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.21555819495458156, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.2488950620633407, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,!=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2571267198281424, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>=,1990),getData(person),oscar_winner.person_id,person.id), person.death_place),person.birth_place))", "score": -0.3140988009747976, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),person.name,>=,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3377578909175971, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.34687755661354436, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.36930977418144023, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,1990),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.3769451224790491, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3773656049459562, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3795405467290936, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.3845757639220555, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.38586089733172196, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.38675067922519396, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}, {"orig_question": "How many birth places are there from oscar winner since 1990?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,1990),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),oscar.id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))", "score": -0.38803583584635415, "correct_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,1990),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.0587234078993788, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.2886674088960843, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.29357072520219074, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3717807374493213, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3721316777715476, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3766840537554278, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3770349940776541, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3791246033280971, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3840279196342036, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.3931831973683761, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.4226168175690187, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),language.name,=,af), movie.vote_count),movie.vote_count))", "score": -0.4275201338751252, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.43997725812300276, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,oscar.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.444880553385936, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many distinct vote counts are there for movies in the original language \"af\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(oscar),spoken_language.iso_639_1,movie.id),movie.id,spoken_language.movie_id),movie.original_language,=,af), movie.vote_count),movie.vote_count))", "score": -0.4552450250144451, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))", "score": -0.1526493721321458, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.death_place))", "score": -0.1943450712278718, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,m), person.death_place),person.death_place))", "score": -0.30815055897983257, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,m),person.death_place), person.death_place))", "score": -0.4657634659524774, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,m),person.death_place), person.death_place))", "score": -0.5112842409726, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.death_place), person.death_place))", "score": -0.5373188345547533, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,m), person.death_place),person.death_place))", "score": -0.585850449060672, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,m), person.death_place),person.death_place))", "score": -0.627546148156398, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.name))", "score": -0.6330322346329922, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.revenue,=,m), person.death_place),person.death_place))", "score": -0.63792784443649, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,m), person.death_place),person.death_place))", "score": -0.6550896905973786, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_day))", "score": -0.6691622755170101, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,m), person.death_place),person.name))", "score": -0.6747279337287182, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.6780259029619629, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}, {"orig_question": "Where did men die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,m), person.death_place),person.death_place))", "score": -0.7056591652944917, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.10181857384304749, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_place))", "score": -0.4342638470188831, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),movie.revenue))", "score": -0.43743079080741154, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1927-07-04), person.name),person.name))", "score": -0.43976727891276823, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1927-07-04), person.name),person.name))", "score": -0.4734285550148343, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.name))", "score": -0.49137628378230147, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_place))", "score": -0.5866357714112382, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),language.name))", "score": -0.6069520927921985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), movie.id))", "score": -0.6367922823556, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.death_day))", "score": -0.6370336033360218, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),cast.person_id))", "score": -0.6451413251415943, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>=,1927-07-04),person.name), person.death_day))", "score": -0.688831049221335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.gender))", "score": -0.6982085920826648, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,>=,1927-07-04), person.name),person.name))", "score": -0.6984092444836278, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}, {"orig_question": "What are the names of people who were born on or after 1927-07-04?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>=,1927-07-04), person.name),person.name))", "score": -0.7089429152620141, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1927-07-04), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.12744823238845038, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.21720120164072246, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.22468705696205887, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.23571618106279166, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.24117912117509174, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,89), movie.id),movie.popularity)", "score": -0.2860892590814974, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.person_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.302663241490538, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,89), movie.id),movie.popularity)", "score": -0.3116855813163232, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_place,<,89), movie.id),movie.popularity)", "score": -0.3173662578531982, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,<,89), movie.popularity),movie.popularity)", "score": -0.3249149582482555, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,89), movie.popularity),movie.popularity)", "score": -0.3329550056364002, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,>,89), movie.id),movie.popularity)", "score": -0.3383858137436355, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,89), movie.popularity),movie.popularity)", "score": -0.3384179457487002, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id),oscar.number,<,89), movie.id),movie.popularity)", "score": -0.36814831607230514, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity of all movies that had an oscar nominee for an oscar with a lower number than 89?", "inferred_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.death_day,<,89), movie.popularity),movie.popularity)", "score": -0.3833280836551059, "correct_code": "avg(distinct(merge(filter(getData(oscar),oscar.number,<,89),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.vote_count))", "score": -0.23363563824386802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.original_language))", "score": -0.27168903160782065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.29581776667328086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.36352686244936194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.original_language))", "score": -0.4015802558133146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.4257089908787748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.vote_count))", "score": -0.4258703257510206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.original_language))", "score": -0.4639237191149732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.vote_count))", "score": -0.472817924208357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.budget))", "score": -0.4827434163162252, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))", "score": -0.4880524541804334, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.original_language))", "score": -0.5108713175723096, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_count),movie.title))", "score": -0.5350000526377698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), language.name),movie.vote_count))", "score": -0.5502396490046522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.budget,!=,260000000), language.name),movie.revenue))", "score": -0.5667466439376877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.2527578692534007, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.30739488411927596, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.35685628959618043, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.43165606567345094, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.id))", "score": -0.5087608129688306, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5223657652386464, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5378385405638255, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_average), movie.vote_count))", "score": -0.5464855351456208, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.vote_average))", "score": -0.5754960806079907, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5770027801045217, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5792024951078929, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_count), movie.id))", "score": -0.5835605890461011, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.5871217991807498, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,=,Whipped),movie.vote_average), movie.revenue))", "score": -0.6148015291400952, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_average,=,Whipped),movie.vote_count), movie.vote_count))", "score": -0.6212853112228913, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_average)", "score": -0.034555891705105035, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)", "score": -0.3186319216406423, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.42810670511459564, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.48585282455775297, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5038999053726614, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.531956672002755, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.5616460248158187, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.5897027914459123, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.607749881476391, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.runtime)", "score": -0.6091314415516549, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pl), movie.id),movie.vote_count)", "score": -0.6095589188613192, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6151930268776241, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),language.name,=,pl), movie.id),movie.vote_average)", "score": -0.6537339249444394, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,>=,pl), movie.id),movie.vote_average)", "score": -0.6550420502624678, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total vote average of all movies without a original language pl?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,pl), movie.id),movie.vote_average)", "score": -0.6654959917039781, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,!=,pl), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.11689250335918111, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.16481079723895045, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.1930647029845787, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.2492612252805393, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.27378158845619416, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), company.name),company.name))", "score": -0.28819454588408366, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.2881959057450735, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), movie.title),company.name))", "score": -0.2955992750724741, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.3039208935167726, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), genre.name),company.name))", "score": -0.327583587029437, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), genre.name),company.name))", "score": -0.3305336386924352, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), company.name),movie.title))", "score": -0.3446505241871451, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.36380485365979226, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,2012-08-06), company.name),company.name))", "score": -0.37575171970160354, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}, {"orig_question": "What are the names of the companies who produced and released movies after August 6th 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,2012-08-06), person.birth_place),company.name))", "score": -0.3887142366442363, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2012-08-06), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.11309549111126925, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.1255406777603709, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.19828953503985633, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.22706790936119106, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3040879337325127, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3091103351988217, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3151546079262225, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3402205687302159, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,362), keyword.name),keyword.name))", "score": -0.3460019077503223, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.death_place))", "score": -0.35941200566052134, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.name))", "score": -0.37424387207920584, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3811186276069878, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3951183888524461, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),person.name))", "score": -0.4041786178958362, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),person.death_place))", "score": -0.40599949474903557, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.15563343237761762, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.15571874543572725, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.17601893152337508, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.17869140958333596, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.22391686857413645, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.27272685658435414, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.2880581525271592, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.31103081667476795, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.31974922460265315, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),country.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.32178518521337296, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(getData(person),country.name,=,Samatha Pearson),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.33602728115813263, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),oscar.category,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3431610797042845, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.name,=,Samatha Pearson),getData(movie),crew.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.35625627566556844, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3611775930510078, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "Whats the average vote average of movies in which Samatha Pearson is part of the crew?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),country.name,=,Samatha Pearson), movie.id),movie.vote_average)", "score": -0.3766207518383142, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.name,=,Samatha Pearson),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.22374149192894835, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.23177839467544448, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.24762552776541613, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.27933153996936605, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.2873684427158622, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.30321557580583386, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.31131291454529736, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.31934981729179346, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3351969503817651, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3669029625857151, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3700143675603205, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3726639511787355, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.3749398918446978, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),cast.movie_id,movie.id),person.death_place,=,Dayton, Ohio), movie.popularity),movie.popularity)", "score": -0.3885728047017096, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with actors that died in Dayton, Ohio?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Dayton, Ohio), movie.id),movie.popularity)", "score": -0.39078702493466944, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.death_place,=,Dayton, Ohio),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.28493375154721434, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.id),movie.vote_count)", "score": -0.5546782267697744, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count))", "score": -0.5747049133769906, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.title))", "score": -0.5887438152967661, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.vote_count)", "score": -0.6039729982650616, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.title),movie.vote_count))", "score": -0.6079103556512564, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.6), movie.vote_count),movie.vote_count))", "score": -0.611029721894738, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,5.6), movie.vote_count),movie.vote_count))", "score": -0.6465978697924584, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.budget),movie.vote_count))", "score": -0.6643246022103995, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), oscar.number),movie.vote_count))", "score": -0.6709734705327719, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),movie.budget))", "score": -0.7298652027784556, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.vote_count),oscar.number))", "score": -0.7653469239412516, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), person.death_day),movie.vote_count))", "score": -0.7672845927118033, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.id),oscar.number)", "score": -0.7706317222153282, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}, {"orig_question": "Count the number of movies that received revenue with the voting average value of 5.6.", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_average,=,5.6),merge(getData(spoken_language),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.vote_average),movie.vote_count))", "score": -0.796238225439777, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.6), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.09895886420054012, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,tr), movie.id),movie.popularity)", "score": -0.1617241425527025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.3532401310167232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.id),movie.popularity)", "score": -0.4927212636164263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5267831081736636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.5520357086461728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.58846172154133, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.id),movie.popularity)", "score": -0.5958870189350781, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6170720083202119, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,tr), movie.id),movie.popularity)", "score": -0.6357248911209276, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.6437536791486038, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,tr), movie.id),movie.popularity)", "score": -0.6719090103266439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.release_date))", "score": -0.7313252688363718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity)", "score": -0.7322882617168398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "avg(filter(getData(movie),movie.original_language,=,tr),movie.popularity)", "score": -0.7357558754971844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.03082139701903472, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.23338475410784196, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,>,0.041651), country.name),country.name))", "score": -0.2841306296285057, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), movie.status),country.name))", "score": -0.32931519234326745, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.35866365926688765, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), person.birth_place),country.name))", "score": -0.3718704249634238, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,oscar_winner.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.39789756604015925, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.sub_category),country.name))", "score": -0.39932738016191766, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,0.041651), country.name),country.name))", "score": -0.4001820608247239, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), oscar.category),country.name))", "score": -0.4017851873516899, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.gender,<,0.041651), country.name),country.name))", "score": -0.40277064579831795, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), country.name),movie.status))", "score": -0.40290991201057524, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), production_country.movie_id),country.name))", "score": -0.4093933355503432, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.popularity,<,0.041651), genre.name),country.name))", "score": -0.41023593936991404, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries have movies with a popularity below 0.041651 been produced?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.movie_id,country.iso_3166_1),movie.popularity,<,0.041651), country.name),country.name))", "score": -0.41446012519376235, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.041651),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.06666509935166687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.title)", "score": -0.3297975916150167, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.3861826093265795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.4611116896685308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5077291939082272, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5181433495762201, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5308552336927719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.5318771555377407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5483436700486669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,spoken_language.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.54966673201429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),movie.budget)", "score": -0.5846502710258857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_winner.movie_id),movie.popularity,=,10.4764), movie.title),movie.title))", "score": -0.5957883776164731, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,10.4764), movie.title),movie.title))", "score": -0.6024897712050006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,10.4764),getData(movie),movie.id,spoken_language.movie_id), movie.title),movie.title))", "score": -0.6199091925884843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}, {"orig_question": "What is the movie title of the movie with a popularity equal to 10.4764?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.id),oscar.number)", "score": -0.6679754394786402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,10.4764), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.027401051054766867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.4199331528870971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.5782689578263671, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6128066135934205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.659029377195111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.vote_count),movie.revenue))", "score": -0.7067006184151978, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), person.death_day),movie.revenue))", "score": -0.7166594816735596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7555254674880416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.7632481409600587, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7634904957740218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.7919477973555331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.name))", "score": -0.801701126190892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,69), movie.revenue),movie.revenue))", "score": -0.8116629025680595, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.8191341711572022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.8197495318381698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.1385835706886713, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.17653170135154575, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.20661956266756487, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,!=,5.2),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.32188491645057443, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3294394722599723, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name)", "score": -0.357229817830687, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),person.name))", "score": -0.3624736779674672, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.3819664755203034, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),person.name))", "score": -0.40497376762713166, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.41791523264226577, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),language.name))", "score": -0.4216115613295111, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), language.name),language.name))", "score": -0.4226043985396224, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,5.2), language.name),person.name))", "score": -0.43506162894315076, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2), person.name),language.name))", "score": -0.43559855741360504, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "How much spoken languages are there in movies that have not a movie vote average of 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,5.2),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), person.name),language.name))", "score": -0.4551377497165442, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,!=,5.2),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.09263899918008954, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2096569871515293, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.238974687907597, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.26247530437353256, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.26796242902591827, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.2727303353592453, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.27758581228374873, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3017642130444788, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),genre.name,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3191657508224643, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Action), movie.id),movie.runtime)", "score": -0.3212873182442399, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),person.death_place,=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.33419234485331195, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3379104681460629, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.34542046862179704, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Action),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.runtime)", "score": -0.3593221675645835, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}, {"orig_question": "What the total runtime of all movies not part of the Action genre?", "inferred_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,=,Action),getData(cast),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.37990091834459133, "correct_code": "sum(distinct(merge(merge(filter(getData(genre),genre.name,!=,Action),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.18643178813543776, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.1980175648690849, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Documentary),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.19902907492869515, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.2141367661102731, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.2201979340852487, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.id),oscar.number)", "score": -0.25728947152678905, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Documentary),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),oscar.number)", "score": -0.258864732592015, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),getData(oscar),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.3521602014802315, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.number)", "score": -0.3814039464812484, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.runtime),oscar.number)", "score": -0.38306191319523397, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(oscar),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), movie.title),oscar.number)", "score": -0.40910895848280454, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.sub_category),oscar.number)", "score": -0.4125525340799179, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Documentary), oscar.id),oscar.year)", "score": -0.43270234544298913, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.442445330453881, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}, {"orig_question": "What is the average number of oscars nominations in the genre Documentary?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,has_genre.movie_id),has_genre.movie_id,movie.id), movie.title),oscar.number)", "score": -0.4459959807608179, "correct_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Documentary),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),has_genre.movie_id,movie.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))", "score": -0.01366983226762386, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.release_date),movie.budget))", "score": -0.5456970409795758, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.release_date))", "score": -0.6449207257319358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.budget))", "score": -0.6606123523160932, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.revenue),movie.budget))", "score": -0.688652463381004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.revenue))", "score": -0.7079999636698631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.budget),movie.budget))", "score": -0.7113217007208732, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.title),movie.budget))", "score": -0.7502135114118573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.title))", "score": -0.7712858509112266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Rumored), movie.budget),movie.budget))", "score": -0.7872558127928642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),country.name,!=,Rumored), movie.budget),movie.budget))", "score": -0.8116627227354911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.budget),movie.budget))", "score": -0.8158205043364433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.budget),movie.budget))", "score": -0.8208086232552887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.vote_count))", "score": -0.8272897790957359, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}, {"orig_question": "What are the movies budgets when the movies status are not Rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.vote_count),movie.budget))", "score": -0.8562198357030866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.1314398396220193, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.16801708994871836, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.21843172621262355, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.2411919864954507, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.3087642093788101, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.3160502104515554, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(getData(person),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3282089286460118, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3288503360411035, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_count)", "score": -0.34534145970550917, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.35262746077825446, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.36509989515927693, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.3962040895065039, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,crew.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,!=,Labenne), movie.id),movie.vote_average)", "score": -0.401677145485976, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.gender,!=,Labenne), movie.id),movie.vote_average)", "score": -0.40212585386111166, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}, {"orig_question": "How much is the total movie vote average when the cast persons death place was not Labenne?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_place,!=,Labenne), movie.id),movie.runtime)", "score": -0.4045121545934154, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_place,=,Labenne), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)", "score": -0.027615150244802742, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<=,177), movie.id),movie.vote_count)", "score": -0.42612632088792846, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,>,177), movie.id),movie.vote_count)", "score": -0.4904969402310495, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.vote_count),movie.vote_count)", "score": -0.565161426327395, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_average)", "score": -0.7364514820133504, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<=,177),movie.vote_count)", "score": -0.7618592870879874, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.budget)", "score": -0.7714652707212369, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.budget),movie.vote_count)", "score": -0.7860089168355987, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.runtime)", "score": -0.7901895025887324, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(filter(getData(movie),movie.runtime,<,177),movie.vote_count)", "score": -0.8854221719206484, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,=,177), movie.id),movie.vote_count)", "score": -0.907759087443834, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,<,177), movie.id),movie.vote_count)", "score": -0.9269843514556145, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),person.death_day)", "score": -0.9333609313481281, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.revenue)", "score": -0.9343868018184742, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}, {"orig_question": "What is the total vote count of movies with a runtime below 177?", "inferred_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.revenue),movie.vote_count)", "score": -0.9463408725956585, "correct_code": "sum(distinct(filter(getData(movie),movie.runtime,<,177), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.12210954624106465, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), oscar.number),movie.title))", "score": -0.1852650774476595, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.2544215390900555, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), movie.title),movie.title))", "score": -0.2567400672725078, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.26636595838059757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.2951143802173545, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.title),movie.title))", "score": -0.30783115905862735, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.30971074858015296, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,visual effects), oscar.number),movie.title))", "score": -0.31757707029665033, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.movie_id),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.title),movie.title))", "score": -0.3399479484261757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,visual effects),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), oscar.number),movie.title))", "score": -0.35117594925818274, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,visual effects), movie.title),movie.title))", "score": -0.35545683987514515, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.title))", "score": -0.3702739183422984, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.title,=,visual effects), movie.title),movie.title))", "score": -0.37636500880748475, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "Which movies have won the oscar in category visual effects?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,=,visual effects), movie.title),movie.title))", "score": -0.37825377315252984, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,visual effects),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.026579627010878158, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.32992663346138557, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.36349317939692344, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.3674906562351121, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.37466224782846397, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),company.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.39562999967509554, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4007145213761084, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.40146317874492515, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(language),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4142378302516305, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(oscar_nominee),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4168896854018539, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),oscar_nominee.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42551490180057694, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),person.death_place,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4257248494012493, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),oscar.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4259613371503648, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,evolution),merge(getData(production_company),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.42614651970500783, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "How many movies are there, when the keyword name is evolution?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(has_keyword),keyword.name,=,evolution),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4301365987386463, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evolution),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.2563230270365582, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.26409832328005256, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.29351062145888906, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.30128591770238344, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.32783910025325563, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.33561439649675, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),oscar.number)", "score": -0.33775178269289585, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),oscar.number)", "score": -0.3386353114503803, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),oscar.number)", "score": -0.3455270789363902, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), movie.id),oscar.number)", "score": -0.34641060769387466, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.3650266946755865, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.birth_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.3728019909190809, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.37493937711522674, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.release_date,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.movie_id), movie.id),movie.runtime)", "score": -0.37582290587271117, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}, {"orig_question": "What is the total number of movie crew members who have died who have been involved in movies which have release dates after 07-20-2010?", "inferred_code": "sum(distinct(merge(filter(getData(movie),person.death_day,>,2010-10-07),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.person_id), movie.id),movie.runtime)", "score": -0.38271467335872106, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.release_date,>,2010-10-07), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.10383567677745395, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.15395607193107308, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,<=,virginity), company.name),company.name))", "score": -0.1655911571162197, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.1856486503723174, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.3067643646818932, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.30769241367910893, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,7.1), company.name),company.name))", "score": -0.30874245231330455, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.3505524058541622, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,7.1), company.name),company.name))", "score": -0.3568847598355124, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,7.1), company.name),company.name))", "score": -0.35886284746692365, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,<=,7.1), company.name),company.name))", "score": -0.3663402206505937, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,<=,7.1), company.name),company.name))", "score": -0.372547912446071, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>=,7.1), company.name),company.name))", "score": -0.3764128723756204, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,virginity), company.name),company.name))", "score": -0.38232119045199003, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "How many different production companies produced movies which have to do with virginitiy and have a rating below or equal to 7.1?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,virginity), company.name),company.name))", "score": -0.383934165153734, "correct_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,virginity),filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.vote_average,<=,7.1),has_keyword.movie_id,movie.id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)", "score": -0.03623815117328754, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>=,127), movie.id),movie.popularity)", "score": -0.4178373240661476, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,=,127),movie.popularity)", "score": -0.49378577409184704, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<=,127), movie.id),movie.popularity)", "score": -0.553565154807326, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.popularity),movie.popularity)", "score": -0.7189102210325276, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>,127),movie.popularity)", "score": -0.722758123048784, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,>=,127),movie.popularity)", "score": -0.733785032028896, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,127), movie.id),movie.popularity)", "score": -0.8634400970730234, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.revenue)", "score": -0.8746191342283623, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.runtime)", "score": -0.874699587297326, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,127), movie.id),movie.popularity)", "score": -0.9052592049498455, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,>,127), movie.id),movie.popularity)", "score": -0.9181238478533219, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,127), movie.id),movie.popularity)", "score": -0.9220653881071116, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(filter(getData(movie),movie.runtime,<,127),movie.popularity)", "score": -0.9235391341462005, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity for movies with a runtime of 127 minutes?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,!=,127), movie.id),movie.popularity)", "score": -0.9400798564758127, "correct_code": "avg(distinct(filter(getData(movie),movie.runtime,=,127), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.22736137305924387, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.24662466151726942, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2708977374061486, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(oscar),oscar.category,=,visual effects),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2902870148943117, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.29449778864942455, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.2960814502358982, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.31534473869392377, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.362710916950079, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3727661425352384, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3790503979782526, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3815671176143594, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3819742002857532, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), oscar.year),movie.runtime))", "score": -0.38216007609075453, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(oscar),oscar_nominee.movie_id,movie.id),oscar.category,=,visual effects), movie.runtime),movie.runtime))", "score": -0.3902976217155353, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}, {"orig_question": "How many runtimes of movies nominated for oscar in the category \"visual effects\" are there ?", "inferred_code": "count(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,visual effects),oscar.number,=,visual effects), movie.runtime),movie.runtime))", "score": -0.40269314766820924, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,visual effects),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3059284798741973, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3141018831464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.34471993053404665, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3528933338062493, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.3561446414015589, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.36306270642318217, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.36431804467376155, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.3657451395191503, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_day),person.birth_place))", "score": -0.37123610969538484, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.name),person.birth_place))", "score": -0.37391854279135295, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.378274643561028, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))", "score": -0.38644804683323064, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.gender),person.birth_place))", "score": -0.38776426409144144, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.birth_place),person.birth_day))", "score": -0.3949360920614082, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}, {"orig_question": "Which are the birth-day place of all persons with birth day after 1960-11-29?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1960-11-29), person.gender),person.birth_place))", "score": -0.3959376673636441, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1960-11-29), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.0562265168603954, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), company.name),company.name))", "score": -0.10777330689701016, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.status,=,Original Sin), company.name),company.name))", "score": -0.25852363157714686, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Original Sin), company.name),company.name))", "score": -0.3556954234814819, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Original Sin), company.name),company.name))", "score": -0.36497550716842636, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Original Sin), company.name),company.name))", "score": -0.3740736360743028, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), movie.title),company.name))", "score": -0.37986006513906057, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.release_date,=,Original Sin),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3984652793967579, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,=,Original Sin), company.name),company.name))", "score": -0.40855782384689066, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),movie.title))", "score": -0.4158452677174977, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.42110642417043576, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,=,Original Sin),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4221911665233386, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.movie_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.4296456555157216, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Original Sin), movie.title),company.name))", "score": -0.43140686431284264, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "How many different companies produced the movie called Original Sin?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(production_company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,=,Original Sin), company.name),company.name))", "score": -0.43703680644301435, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Original Sin),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.11030852719885363, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2616464822871581, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.27233897673656005, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.2893413241172925, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.29941948064168467, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3002767568418971, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3144496539464325, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(spoken_language),movie.id,spoken_language.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.3211416053575412, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33166711083705247, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(spoken_language),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.333370913516892, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.33616069715077285, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),spoken_language.movie_id,spoken_language.movie_id),language.name,!=,ar), language.name),language.name))", "score": -0.34218385427514786, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,>,ar), language.name),language.name))", "score": -0.342560309913025, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.name,!=,ar), person.name),language.name))", "score": -0.3471122079953662, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "How many spoken languages are there in all movies except the ones that are originally in arabic?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.iso_639_1),language.name,!=,ar), language.name),language.name))", "score": -0.36324120105589747, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.033839496654032186, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.3104062426453311, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.34969957007462765, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,5.2), company.name),company.name))", "score": -0.35600993331194075, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,5.2),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36753092018389394, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.37085412050745803, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),person.birth_place))", "score": -0.37593372904393374, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.3787445945790043, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,<=,5.2), company.name),company.name))", "score": -0.3798895443577409, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), movie.title),company.name))", "score": -0.383894302354502, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),movie.title))", "score": -0.4006641623759786, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), person.birth_place),company.name))", "score": -0.40658587813974423, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.4080317299283271, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),company.name))", "score": -0.41895463435056574, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which companies produced movies with a vote average of at least 5.2?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,>=,5.2), company.name),production_company.company_id))", "score": -0.4254764292860302, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,5.2),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_day))", "score": -0.2051323207488167, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.birth_place))", "score": -0.3356708439459908, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.35614685840846505, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.gender))", "score": -0.4482773097624886, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_day))", "score": -0.46091825537587283, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_day))", "score": -0.4748866634836304, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_place), person.birth_day))", "score": -0.4987829404344666, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,!=,f),person.birth_day), person.birth_day))", "score": -0.5319355225583422, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), crew.person_id))", "score": -0.5650185497870552, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_place),person.birth_day))", "score": -0.5653445025527617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.name))", "score": -0.5664098712077248, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.birth_day), person.id))", "score": -0.5750857146849739, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.gender), person.birth_place))", "score": -0.5914567785730469, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,f),person.name), person.birth_place))", "score": -0.6054251866808045, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "What are the birth dates of female persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.607290973290219, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.029415921944746515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.32897728931493475, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.title))", "score": -0.48166014410890057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.title),movie.release_date))", "score": -0.5373189697820635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.budget),movie.release_date))", "score": -0.5729168901998491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,424), movie.release_date),movie.release_date))", "score": -0.5987331594187708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.6165340269762964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.budget))", "score": -0.6585914359275193, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.756496096666524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,424), movie.release_date),movie.release_date))", "score": -0.7619383786768594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.title))", "score": -0.7812215114790888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.runtime),movie.release_date))", "score": -0.7873908529836626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.id),movie.release_date))", "score": -0.8334424148160906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.title),movie.release_date))", "score": -0.8368803371522517, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.status),movie.release_date))", "score": -0.8503203044492693, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.02468080268954509, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_count))", "score": -0.5428305895511585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,160583018), movie.vote_average),movie.vote_average))", "score": -0.5555694707181829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.5593958190656849, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_count),movie.vote_average))", "score": -0.5618984090142476, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,160583018), movie.vote_average),movie.vote_average))", "score": -0.5797116168287175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.6180024619679898, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.runtime),movie.vote_average))", "score": -0.684750913267635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.runtime))", "score": -0.7479738028232532, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.803662078720663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.original_language))", "score": -0.8292622001354175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,160583018), movie.vote_average),movie.vote_average))", "score": -0.83077176128063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.popularity))", "score": -0.8687339456264453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.popularity),movie.vote_average))", "score": -0.8689916120820271, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the vote averages of movies with a revenue of 160583018 or more?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.title))", "score": -0.8780297668163257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,160583018), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)", "score": -0.03375395833868092, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,3.7), movie.id),movie.popularity)", "score": -0.4003217826189621, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,3.7), movie.id),movie.popularity)", "score": -0.5080910458025661, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,3.7),movie.popularity)", "score": -0.6113091666297156, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,3.7), movie.id),movie.popularity)", "score": -0.6164054747154853, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,3.7), movie.id),movie.popularity)", "score": -0.6797989153683829, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,3.7), movie.id),movie.popularity)", "score": -0.7497383447482541, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.runtime)", "score": -0.7934031798752447, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,3.7), movie.id),movie.popularity)", "score": -0.8150711164818305, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,3.7), movie.id),movie.popularity)", "score": -0.8441829906695325, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.release_date)", "score": -0.8576742338534703, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.popularity,=,3.7),movie.popularity)", "score": -0.8596516442807495, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.revenue)", "score": -0.8857851367321383, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,>=,3.7),movie.popularity)", "score": -0.9059993449835558, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies with an average rating of 3.7?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,3.7), movie.id),movie.popularity)", "score": -0.9178362230181725, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,3.7), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.15652716388671434, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.1712958858471638, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.19352730878174057, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.20009535512022378, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.28754897582037975, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.308965016170669, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.31378795340981896, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3234508683303132, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.32373373813111844, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.gender,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.3297216631820445, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.33112130783111093, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.vote_count)", "score": -0.34616112435322915, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,=,Didsbury, Manchester, England),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.vote_count),movie.vote_count)", "score": -0.3466012891925396, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_place,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.35071598321594977, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "Whats the average vote count for movies for which people born in Didsbury, Manchester, England were nominated for an oscar?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,Didsbury, Manchester, England), movie.id),movie.vote_count)", "score": -0.3520446495344279, "correct_code": "avg(distinct(merge(merge(filter(getData(person),person.birth_place,=,Didsbury, Manchester, England),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
