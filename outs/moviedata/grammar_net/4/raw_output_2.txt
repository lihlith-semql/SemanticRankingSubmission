{"index": 0, "beams": [{"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))", "score": -0.15701504203843797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4856), movie.original_language),movie.original_language))", "score": -0.2122714236693355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.22226402315664018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,4856), movie.original_language),movie.original_language))", "score": -0.301600949497697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,4856), movie.original_language),movie.original_language))", "score": -0.38363720628785813, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,4856), movie.original_language),movie.original_language))", "score": -0.47129790637063707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5412612008721764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), language.name),movie.original_language))", "score": -0.5549229029451515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.588293211322689, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,null,4856), movie.original_language),movie.original_language))", "score": -0.5895098612027141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5957451748747081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5995963147997571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,4856), language.name),movie.original_language))", "score": -0.6019549039816128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), language.name),movie.original_language))", "score": -0.6094068675336319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,4856), movie.original_language),movie.original_language))", "score": -0.6316142930963906, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.13648900077896542, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.title))", "score": -0.16638478324966854, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.release_date))", "score": -0.33902395949917263, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.budget))", "score": -0.5044221697862667, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.budget))", "score": -0.5093239849920792, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.budget))", "score": -0.516894113879971, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.title))", "score": -0.5343179522569699, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.title))", "score": -0.5392197674627823, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.title))", "score": -0.5467898963506741, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.budget))", "score": -0.583984643828444, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.runtime))", "score": -0.5878008721883816, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.title))", "score": -0.6138804262991471, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.627620850900534, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.revenue),movie.budget))", "score": -0.6504284857328457, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.revenue),movie.title))", "score": -0.6803242682035489, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.11915843801954845, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.19570796392375395, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),movie.vote_count),movie.popularity))", "score": -0.22555082788277012, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.24434063552736057, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.27916836574299575, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.3374022597923664, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.33945511193732875, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.revenue),movie.popularity))", "score": -0.3499876678911381, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_average),movie.popularity))", "score": -0.35537169001590785, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.3768094429791888, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.release_date))", "score": -0.3844938075675947, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.release_date))", "score": -0.3924024276391839, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.41579697831388573, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.popularity))", "score": -0.42782310666906137, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.release_date))", "score": -0.43312647917120134, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.06050811445417226, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.3932766488480476, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.runtime)", "score": -0.40711723749484885, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.runtime)", "score": -0.4542625022823802, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.id),movie.runtime)", "score": -0.5525980488032872, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.589893800065198, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.603542598296797, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.641354182247949, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.6501019758485074, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.673382717432105, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6747833318259936, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6780318220249687, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6884319341203922, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6916806202565676, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.runtime),movie.runtime)", "score": -0.7398857718887242, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name),movie.status))", "score": -0.2325833815957056, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.236647558176189, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.2470524190542414, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.25729895460137453, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.2669732830620721, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.popularity),movie.status))", "score": -0.2891464388319337, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.vote_average),movie.status))", "score": -0.304797323272511, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),person.gender),movie.status))", "score": -0.32386338589833646, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),person.gender),movie.status))", "score": -0.34813684643373505, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender),movie.status))", "score": -0.3484116903953612, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender),movie.status))", "score": -0.3553819928491228, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.popularity),movie.status))", "score": -0.3682404345617386, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id),person.name),movie.status))", "score": -0.375507132154342, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.3795713087348254, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day),movie.status))", "score": -0.38098935612326934, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.03885848318142265, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,5.1), movie.id),movie.runtime)", "score": -0.43669215069507733, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.runtime)", "score": -0.44456019182867834, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime)", "score": -0.5201942901910114, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.vote_average),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.6600124191131511, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,5.1),movie.runtime)", "score": -0.6631869768106806, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,5.1), movie.id),movie.runtime)", "score": -0.7081508776520682, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime))", "score": -0.7424230536344112, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,5.1), movie.id),movie.runtime)", "score": -0.7698633238429895, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.vote_average)", "score": -0.7947646735580582, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.id)", "score": -0.8039974452304667, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,5.1), movie.id),movie.runtime)", "score": -0.828773613414977, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.release_date)", "score": -0.865181378570218, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<,5.1), movie.id),movie.runtime)", "score": -0.8653652196832035, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>=,5.1), movie.id),movie.runtime)", "score": -0.9106260402686086, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.14892269666841385, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.15501649838033793, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Adventure),movie.revenue),movie.vote_count))", "score": -0.19994921892901615, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,<,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.26052239694807267, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.3352033498656405, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,!=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.346899424634583, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.35734299545833514, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.36343679717025923, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_count),movie.vote_count))", "score": -0.42380079738092913, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Adventure),movie.revenue),movie.vote_count))", "score": -0.42500255295157496, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.4324118979474626, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,!=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_count),movie.vote_count))", "score": -0.43549687214987165, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,<=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.43595271225899945, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,<,Adventure),movie.revenue),movie.vote_count))", "score": -0.43742261477219474, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.43850569024533553, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.0833981013277385, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.15626641157723498, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.2812165216262317, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.2827812669043295, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.budget),movie.title))", "score": -0.3282698355186174, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.35787769580220236, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3761135667169445, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.38557015389556026, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3930615877953085, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.budget))", "score": -0.4125589732487775, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.4153522842347652, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.41669816597291526, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.43568604642661174, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.43574654728876666, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.43889950891970736, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.vote_average))", "score": -0.2197401498342515, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.vote_average))", "score": -0.2889181424761773, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.vote_average))", "score": -0.2927393366480828, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.popularity))", "score": -0.3277668331647874, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.3664257501150132, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.popularity))", "score": -0.3969448258067132, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.popularity))", "score": -0.4007660199786187, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.revenue))", "score": -0.435603742756939, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.revenue))", "score": -0.43942493692884455, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.vote_average))", "score": -0.6095119018937112, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,66787908), movie.popularity),movie.vote_average))", "score": -0.6131086254390539, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.title),movie.vote_average))", "score": -0.615881909885502, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.6789071364119776, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.6794151451941128, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.6833259502679596, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))", "score": -0.0461823959776666, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,2159280), movie.revenue),movie.revenue))", "score": -0.2792252191284206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2159280), movie.revenue),movie.revenue))", "score": -0.4337790795543697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2159280), movie.revenue),movie.revenue))", "score": -0.542614240286639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,2159280), movie.revenue),movie.revenue))", "score": -0.5643480863363948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,2159280), movie.revenue),movie.revenue))", "score": -0.5819846578815486, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,2159280), movie.revenue),movie.revenue))", "score": -0.592936083296081, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_count),movie.revenue))", "score": -0.6108085534942802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.vote_count))", "score": -0.6149740050022956, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2159280), movie.revenue),movie.revenue))", "score": -0.6732573356421199, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7383204289653804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7473790218247222, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_average),movie.revenue))", "score": -0.7553760431183036, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7558094450214412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.budget))", "score": -0.7818664143269416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.280888996370777, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.2843837359032477, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.44342249487611995, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4651705567966184, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4670356553245505, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.48878371724504893, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4912045150308223, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.502671457179531, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.508056880488987, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5129525769513207, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5189179577148225, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5199449130377616, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.524540261311561, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5298048601057587, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5425310358595262, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.15060917868686374, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.1532938910968369, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.38581780924869236, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.4392998705006903, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.44198458291066345, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.5256482732729637, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5851121244268143, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.release_date))", "score": -0.594335943205806, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.6610305753783905, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.6677802039630478, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6745085010625189, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.release_date),movie.popularity))", "score": -0.6770158598519629, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.release_date),movie.release_date))", "score": -0.679700572261936, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6862139517761534, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.6888986641861266, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.popularity))", "score": -0.2856747615005588, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.popularity))", "score": -0.3115953313972568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.birth_day))", "score": -0.3261810499097919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.birth_day))", "score": -0.3521016198064899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.gender))", "score": -0.4097806322242832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.gender))", "score": -0.4357012021209812, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.popularity))", "score": -0.44575632688065525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),movie.popularity))", "score": -0.45143432494660374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),movie.popularity))", "score": -0.47881339069863316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),person.birth_day))", "score": -0.48626261528988834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),person.birth_day))", "score": -0.49194061335583683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),person.birth_day))", "score": -0.5193196791078662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.release_date))", "score": -0.5279275732900715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.release_date))", "score": -0.5538481431867694, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.name),movie.popularity))", "score": -0.561738859381876, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.22486424790736967, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.287359583888105, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3208135333414744, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.32157207992877473, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),language.name))", "score": -0.3547942033881042, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))", "score": -0.35620723508602836, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.36989503146386676, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.38330886932220976, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.38406741590951016, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.38478744905969486, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),movie.vote_count),movie.original_language))", "score": -0.38697454579394175, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),movie.vote_count),movie.original_language))", "score": -0.4112902824190763, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),language.name))", "score": -0.41728953936883956, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.4323903674446022, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.vote_count),movie.original_language))", "score": -0.4392534106597267, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.04037855002752622, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.5865631806263991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.id),movie.popularity)", "score": -0.5905238382603711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.release_date))", "score": -0.6156698301965662, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.6702363537224301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.release_date),movie.popularity))", "score": -0.6727309000743844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7032685982594558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7149179684529372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7172827766808041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1995-07-07), movie.popularity),movie.popularity))", "score": -0.730535339058406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,=,1995-07-07),movie.popularity),movie.popularity))", "score": -0.7404828192811692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7553942091944919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7726115095028945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.status))", "score": -0.7794790700609155, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity))", "score": -0.8213262861857918, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.36676502266372973, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3676328809820798, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3951312214870786, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.39599907980542864, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.40338000885635716, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.41331221809681795, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.42149961516095924, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.42178282088923597, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.4223674734793093, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.4317150301296968, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4334024333598126, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.44333464260027344, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4447835122796234, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.45180525730204374, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4547157215200842, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Foreign), movie.budget),movie.budget))", "score": -0.30695881975407247, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,Foreign), movie.budget),movie.budget))", "score": -0.3662018133472884, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Foreign), movie.budget),movie.budget))", "score": -0.3909738166403258, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Foreign), movie.budget),movie.budget))", "score": -0.4121658457588637, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,Foreign), movie.budget),movie.budget))", "score": -0.42908896041626576, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.budget),movie.budget))", "score": -0.47140883935207967, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Foreign), movie.budget),movie.budget))", "score": -0.49412849081272725, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Foreign), movie.budget),movie.budget))", "score": -0.4961808426451171, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Foreign), movie.budget),movie.budget))", "score": -0.5231437934708083, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,Foreign), movie.budget),movie.budget))", "score": -0.5248995525907958, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Foreign), movie.id),movie.budget)", "score": -0.5291778305959006, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Foreign), movie.budget),movie.budget))", "score": -0.534295986421057, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.budget),movie.budget))", "score": -0.5533714369084919, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,Foreign), movie.id),movie.budget)", "score": -0.6011287230626524, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Foreign), movie.id),movie.budget)", "score": -0.6100836939164507, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.16805201761137054, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.23346273904564835, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.2528505233465249, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2561498512835574, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2720958806263629, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.27324396071555646, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2887039104777823, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.28918999005836205, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.2901886571520952, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.2980435819655862, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.30464993982058786, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3057980199097814, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.31826124921094445, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3217440349930683, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))", "score": -0.3299124665798162, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.12539217454469964, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.17630935611173057, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.22336897193264063, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.23109153075650024, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.24089366118742916, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.2505020704803646, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.280398149844774, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.28964966793675395, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3290683281444412, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.3295789617855505, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3296871757002617, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))", "score": -0.34015345978818956, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.category))", "score": -0.34226380210192137, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3437233732001328, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.34847886786830556, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.4515828440651418, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.4639099083505995, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.4675222348146096, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.name))", "score": -0.47799421493347, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.birth_day))", "score": -0.4903212792189276, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.4904143675460374, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.birth_day),person.name))", "score": -0.5043972504641784, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.5053546882643745, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.509155189480355, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5209832470316694, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.5214822537658126, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5233497844415536, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_day,=,My Lucky Star),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.5236936640328795, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.birth_day),person.name))", "score": -0.5272893477544723, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.5282468209958022, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.16631335858932284, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.20726909739873048, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.26164827196853563, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.2721870386630644, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2799747759471028, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.30260401077794324, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.status))", "score": -0.3152072944001654, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.3209305147565104, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.329309790591205, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.3674368250086529, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.3675219520422771, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3688860491647528, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.37026552940061264, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.37216658608240827, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.original_language))", "score": -0.374280363616293, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.13312473180258283, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.release_date),movie.release_date))", "score": -0.2342528716327838, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.32447883240752895, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.3343593970030187, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.number),movie.release_date))", "score": -0.33562339526349927, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.33567982554789966, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3444851043649631, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2012),oscar.year),movie.release_date))", "score": -0.3605026027226021, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.37431482575261116, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.popularity),movie.release_date))", "score": -0.39894809741095316, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.release_date))", "score": -0.40545494762238066, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.40628503355301443, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.release_date))", "score": -0.41665594076275136, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.42167920951150356, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.release_date))", "score": -0.4254612195798148, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.04405834319913993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_count),movie.vote_count))", "score": -0.24329169074917445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.title))", "score": -0.5996826796690584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.619932765053818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_average),movie.vote_count))", "score": -0.6236924745971919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,258022233), movie.vote_count),movie.vote_count))", "score": -0.6283572165193618, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.movie_id),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.630423968654184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.634977634363075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6365669886945398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.revenue))", "score": -0.6645544676939608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_average))", "score": -0.6666963009993196, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6707950751660974, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.revenue),movie.vote_count))", "score": -0.6762353398735286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,258022233),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue), movie.vote_count),movie.vote_count))", "score": -0.6899297071344042, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,258022233),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue), movie.vote_count),movie.vote_count))", "score": -0.6936443278119513, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2228317045628336, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.2997859329431301, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30604137097809603, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.33080877199120345, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.3453036286683266, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,oscar_winner.person_id), country.name),country.name))", "score": -0.35824361657662424, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.3586761225275048, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.35886194573515323, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.3735399169776258, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.37768122323845177, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),oscar_winner.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.3855206636855929, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.death_day,<=,1934-03-28), country.name),country.name))", "score": -0.3899294740911946, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.movie_id,country.iso_3166_1), country.name),country.name))", "score": -0.3919908026147367, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.40100052482797466, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,oscar_winner.person_id), country.name),country.name))", "score": -0.4098987236768959, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.2560607907903256, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.2583246261085263, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.2606849673103274, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.2629488026285281, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.28009044875885386, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28854315417422766, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.29454972625928155, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.29617618496919146, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,???),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2991290066273731, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,=,???), genre.name),genre.name))", "score": -0.3009430377996126, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.31228606467282954, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.31995620677783604, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.3222200420960368, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,???),getData(has_genre),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33700328504519556, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(language),language.name,=,???),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.3383773814026801, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.14164904991720742, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.14880978481228627, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.2370326160322222, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.2453802080470431, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,549),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3223754986429061, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), movie.vote_count),keyword.name))", "score": -0.33984302717204523, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), movie.vote_count),keyword.name))", "score": -0.3470037620671241, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3611055976111152, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.vote_count))", "score": -0.3693245493876614, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),movie.vote_count))", "score": -0.37648528428274025, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), oscar.number),keyword.name))", "score": -0.3766930169509904, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,movie.vote_count),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3818216087328236, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.38286204053127537, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), oscar.number),keyword.name))", "score": -0.38385375184606924, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),company.name))", "score": -0.38798873648933274, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.20532443414942694, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.2296099997814954, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.263914262060835, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.2739247819013352, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fame),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.279847641856429, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2852513884647505, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Fame),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3012555421041735, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.30428742314997975, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.31316713776913824, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.31367759251807104, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31383217758675847, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31968748261873514, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.33516930399067396, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.34102460902265064, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3448149590966705, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.0588806251551766, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1832382054308243, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,119),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1871589619744334, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,!=,119), company.name),company.name))", "score": -0.2310158955286603, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,119), company.name),company.name))", "score": -0.24086689290182908, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.death_place))", "score": -0.3009144415658464, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.34240908694971345, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3846582259419622, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3916562651280436, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.3920971912526506, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.birth_place))", "score": -0.4057611527649649, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.416138493176459, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.4194276895069849, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.4226979282054352, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),production_company.company_id))", "score": -0.42623787033281935, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.16303777191205882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.2398192981199827, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.39772730562253855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.40219866725965403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.41717737409635447, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4289395582567477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4425834366993513, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.46245715555632866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.47450883183046244, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4789801934675779, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4860559949593153, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.49395890030427836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5506285974697676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.homepage,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5571812035923358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5670824887638446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.0628935954352326, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.16021231682201875, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ko),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18587491714092688, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.3141032673537009, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.3420869138015406, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.35282677510275134, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3549225771375629, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,ko), genre.name),genre.name))", "score": -0.3630170083820869, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3691976017252687, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,<,ko), genre.name),genre.name))", "score": -0.386175555439099, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,!=,ko), genre.name),genre.name))", "score": -0.38623577103300655, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.3917106961108972, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.3986948266842357, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4053963252290079, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4084639670513461, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_average))", "score": -0.07652159314602613, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),movie.vote_average))", "score": -0.3113240944221616, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),oscar.year))", "score": -0.3896528594195843, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,621), movie.vote_average),movie.vote_average))", "score": -0.4524983949959278, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.revenue),movie.vote_average))", "score": -0.5097263203933835, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.popularity),movie.vote_average))", "score": -0.5503749595955014, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,621), movie.vote_average),movie.vote_average))", "score": -0.5733083100058138, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,621), movie.vote_average),movie.vote_average))", "score": -0.6133533604443073, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), person.name),movie.vote_average))", "score": -0.6192137943580747, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),oscar.year))", "score": -0.6244553606957197, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,621),movie.vote_average), movie.vote_average))", "score": -0.6394680689554662, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.popularity))", "score": -0.664531271904707, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.revenue))", "score": -0.6723305396735668, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_average))", "score": -0.6750972615554929, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,621),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,language.iso_639_1),oscar.id,oscar_nominee.oscar_id), movie.vote_average),movie.vote_average))", "score": -0.8537879201654847, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.24525152426661853, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.2668974758504195, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3500354550566342, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.3512425942358787, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3655274577649348, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.3681914659014546, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.37288854581967973, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.death_day))", "score": -0.3771829169945115, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.death_day),person.name))", "score": -0.3848069428211193, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3871734093487358, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.3898374174852556, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3938137775813281, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.death_day))", "score": -0.3988288685783125, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.4434141552038383, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.4469117433624168, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.03231512737662765, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,Illuminata),movie.vote_average),movie.vote_average))", "score": -0.614484979538247, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_count)", "score": -0.6215859181940171, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.revenue)", "score": -0.6732423563715562, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.6822782545093632, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6941099766069443, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7028611042927905, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7069820803522049, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7082672333921082, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.7124366409093398, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.7178427700086575, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7206337844657568, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average))", "score": -0.7445065634601633, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),has_genre.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7473273681637667, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),has_genre.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.756902904780316, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.08989166830724571, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.21598826711124275, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.389671733501018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.42985659268742893, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.5157683323050151, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.529918452622951, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.555953191491426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.5627975942479679, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1985-12-11), person.death_place),person.death_place))", "score": -0.5669628287578234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.6230905435622844, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.gender))", "score": -0.6386794391000876, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.656015051426948, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1985-12-11), person.death_place),person.death_place))", "score": -0.6778653467918048, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), movie.release_date),person.death_place))", "score": -0.6846759201871464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.688894193051965, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.03606911332717922, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.4839293239462207, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.5115498755161202, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.5296719038848844, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7259628488252567, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7278550579300543, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.7488739130425909, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7592304491016281, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.7621745861625335, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.7641241085649105, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7744806310132594, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.8179841665891338, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.vote_average)", "score": -0.8221737278486734, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.8267874629193042, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.id)", "score": -0.829423450236472, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.3298788832769948, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.34447116382311005, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3514420048526079, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.3522073494839916, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.35973258484622533, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.36211090085165776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.36679963003010685, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.36952288318741056, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.37875946635163477, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.3792139768905151, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3906334696352307, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(country),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3921825805385515, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3926453036483053, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.39401526647099033, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3976072314931122, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.1238656428467948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_count,<=,1045),movie.vote_average),movie.vote_average))", "score": -0.3690965317437076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.44297462758877487, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.vote_average),movie.vote_average))", "score": -0.540281444118591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.vote_average),movie.vote_average))", "score": -0.5741339617234189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.5972715609532315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.status),movie.vote_average))", "score": -0.6346267022017855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.popularity),movie.vote_average))", "score": -0.6505798853759188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_count,<=,1045),movie.vote_average),movie.vote_average))", "score": -0.664575790258823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.7375498481851537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_count,=,1045),movie.vote_average),movie.vote_average))", "score": -0.738063885110023, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_count,<=,1045),getData(cast),movie.id,oscar_nominee.oscar_id),movie.vote_average),movie.vote_average))", "score": -0.7544565584666912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_count,<=,1045),getData(cast),movie.id,movie.revenue),movie.vote_average),movie.vote_average))", "score": -0.7561547087971024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_count,<=,1045),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.vote_average),movie.vote_average))", "score": -0.7680678092863892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_count,<=,1045),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.vote_average),movie.vote_average))", "score": -0.7989531620118752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.08603071710358196, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.13848587890568012, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.23875114423392224, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2781786141050728, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.29414879550765655, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.30942349168804034, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3112948494243459, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33985989676886846, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.34429667609553644, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_day))", "score": -0.34442872670363783, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3520345435402066, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.35679949627543295, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.death_day,!=,380000000),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3609521515422814, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.3618786534901385, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.3790942255023239, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.24541450241878274, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2501177334460295, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.26165841184802907, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2719050177950463, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.28805795247713417, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3078703413281705, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.30834693597530977, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),oscar.year,>=,3.5), language.name),language.name))", "score": -0.31278629032618366, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.3177412443642762, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.3195157996555636, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.33579205354956887, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,>=,3.5), language.name),language.name))", "score": -0.3494956160317354, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,>=,3.5), language.name),language.name))", "score": -0.35050737555057415, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.358209351507659, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3652324166033008, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.05941072006316972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.19184946541281533, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,185), movie.vote_count),movie.vote_count))", "score": -0.5696938884684641, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,185), movie.vote_count),movie.vote_count))", "score": -0.5891034257838328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,185), movie.vote_count),movie.vote_count))", "score": -0.6688424599597056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.revenue),movie.vote_count))", "score": -0.6797587414512236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_average),movie.vote_count))", "score": -0.6908252974280913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.title))", "score": -0.6957027888165612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.revenue))", "score": -0.7245582914219995, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_average))", "score": -0.7452755546437402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,185), movie.vote_count),movie.vote_count))", "score": -0.757872257836425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.revenue),movie.vote_count))", "score": -0.8121974868008692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_average),movie.vote_count))", "score": -0.8232640427777369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.title))", "score": -0.8281415341662068, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,185), movie.vote_count),movie.vote_count))", "score": -0.8329068673083384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.12965599122455163, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.12980045716207855, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13127034042535624, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.17780568227881205, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.292343300636973, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,<=,64572262),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3596638354230733, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3612433491598433, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262),movie.id,company.id), company.name),company.name))", "score": -0.39508546549457063, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.396075457549345, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,64572262), company.name),company.name))", "score": -0.40591509804850257, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,64572262), company.name),company.name))", "score": -0.406811546087524, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262),movie.id,company.id), company.name),company.name))", "score": -0.41343110924893156, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.41999026735806366, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),person.death_place))", "score": -0.43342791318093343, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.4477475310485488, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.14912613996766425, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.16501643034016825, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.17732614564117613, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.22120267001327237, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.24260838293478051, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2550889718827664, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.29332333782870235, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.3013969745692097, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.3123868476139271, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.32618103595690223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.name))", "score": -0.33700003336443, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3568033258792842, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.revenue,>,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.36007087911699354, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.death_day),person.birth_day))", "score": -0.37276590381376334, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,crew.movie_id),person.birth_day,>,f),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.4402988815932171, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.08887063012834037, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.18792221807494863, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.23686293298168878, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.name))", "score": -0.24579722914635213, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2006), person.birth_day),person.birth_day))", "score": -0.28652609375263677, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.292652527343417, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.3089528084961278, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.gender))", "score": -0.32668752365564163, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.34904229872933, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.38064306035038264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.3899327154277522, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.39024368473631854, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.gender))", "score": -0.4029582806440705, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.40519516914292725, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),filter(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.4366150497924407, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.09505058309878223, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.16640820584143512, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.4539794441952836, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.4565212799412479, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.49369250815720145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5247214024585964, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.5253370669379365, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5329694801997727, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.5353765666968967, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5435486447077761, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5478967047702141, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5618926406423689, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.5725477760847479, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.5972644206776749, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1942-11-12), person.birth_place),person.birth_place))", "score": -0.631843143113656, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.25735238376759567, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.29567904014635626, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.death_place),person.death_place))", "score": -0.2966983310683699, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.3015685861980142, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.30800827565552336, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.33534833668010955, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3471288095123728, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.36485655081113355, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.37091591160620985, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3774523684331766, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.3936266686743007, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),getData(person),cast.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.40956331281407615, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),getData(person),cast.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.4181011251132515, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "count(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.42714887479871416, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),movie.budget),person.death_place))", "score": -0.4383219684877459, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.17456879318219623, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.19716315545047788, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.22111334070468225, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.22861802372633133, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.27327106795242506, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.27583179619483106, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2805524688847464, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_average),movie.vote_average))", "score": -0.28241633304280783, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count))", "score": -0.30387308015222303, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.30753719832160203, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.3090447208769425, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.vote_average))", "score": -0.334885549646918, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_count),movie.vote_average))", "score": -0.3419281590655726, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_average))", "score": -0.34657164114771766, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.36059602519228645, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.033431571697292384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,72), movie.status),movie.status))", "score": -0.36530239858984714, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.vote_average))", "score": -0.500093247530458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.popularity),movie.status))", "score": -0.5131848992532468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.5639193782044458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,72), movie.status),movie.status))", "score": -0.5647922305142856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.vote_average),movie.status))", "score": -0.6174393238252378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), person.gender),movie.status))", "score": -0.6318270506089902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.popularity))", "score": -0.649590249893663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,72), movie.status),movie.status))", "score": -0.6637921480214573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,72), movie.status),movie.status))", "score": -0.6989933399236179, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,72), movie.status),movie.status))", "score": -0.7043544796979404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,72), movie.status),movie.status))", "score": -0.7418929195482633, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.original_language),movie.status))", "score": -0.760464543265698, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.runtime))", "score": -0.7675778826451278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.05255623309312796, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.26386067418752646, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,2.6), movie.popularity),movie.popularity))", "score": -0.4195895954817388, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.revenue))", "score": -0.5349471877179894, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.6), movie.popularity),movie.popularity))", "score": -0.5472780927866552, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.6), movie.popularity),movie.popularity))", "score": -0.6714424356669042, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.6), movie.popularity),movie.popularity))", "score": -0.6757807001322362, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.6), movie.popularity),movie.popularity))", "score": -0.6860572208734084, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.6873936062365829, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.vote_average))", "score": -0.7087298343740258, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.revenue))", "score": -0.7462516288123879, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,null,2.6), movie.popularity),movie.popularity))", "score": -0.7550398573130224, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.revenue),movie.popularity))", "score": -0.7552753197578568, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.819888350149995, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.id),movie.popularity))", "score": -0.829921256246962, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.19256463464311338, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.year),movie.status))", "score": -0.2877463714419256, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.number),movie.status))", "score": -0.3138116241972988, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),person.death_day),movie.status))", "score": -0.35070556098218947, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.35149887190831536, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.status))", "score": -0.35844204846150585, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count,>,46),movie.vote_count),movie.status))", "score": -0.3770413336969936, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.3772404375566923, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.revenue),movie.status))", "score": -0.3845187417680298, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,>,46), movie.status),movie.status))", "score": -0.38631783707880674, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.status))", "score": -0.40407813122122427, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_average),movie.status))", "score": -0.4108426713901431, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,46),movie.vote_count),movie.status))", "score": -0.4119711937274567, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.41647917470730905, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.4166219681430337, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.19666925986580924, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.245239783954081, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.25938309559463185, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.runtime),movie.runtime))", "score": -0.2756892691808646, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.id),movie.runtime)", "score": -0.31388263921677345, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.runtime),movie.runtime)", "score": -0.3734390958952595, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.385615660831633, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.38992378316638976, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.41039168241167084, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.4153433952375871, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name),movie.runtime))", "score": -0.42786605195139016, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.4312419672506293, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name),movie.runtime))", "score": -0.4357183531875765, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.runtime))", "score": -0.4419369711997252, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(keyword),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.44920680498007803, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.05375374397798686, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.vote_count)", "score": -0.3506910538735371, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count)", "score": -0.5673855354370464, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.5929038852063427, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.vote_count)", "score": -0.5937668818382066, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.5985599655301457, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.6332217280464272, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count)", "score": -0.6485769771428281, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.6680893900289054, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.6717838752622374, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.7085063461715616, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Rumored),movie.vote_count)", "score": -0.7171699292292548, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.7373282495281557, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),getData(movie),movie.id,movie.vote_average), movie.id),movie.vote_count)", "score": -0.7405173011178573, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Rumored), movie.id),movie.vote_count)", "score": -0.7706601403094834, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.14775155599885517, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.1604156733971348, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,=,Rumored), keyword.name),keyword.name))", "score": -0.17354423892409124, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.20717668433835315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.20853441690517766, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.22104499538159175, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.24214263211297798, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.31985214928870226, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.37494929197005294, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3841794459668955, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.3975791835154757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.4310662611747349, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.4396091478359393, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.name))", "score": -0.4509492256943051, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.46073351326434464, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.0403872040042188, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.406169531022897, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),language.name))", "score": -0.46603873939602636, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.vote_average))", "score": -0.5799777862557676, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), spoken_language.iso_639_1),movie.original_language))", "score": -0.6029513451212551, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.title))", "score": -0.6035604831704404, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,movie.vote_count),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.6108347582427338, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.status),movie.original_language))", "score": -0.6250242563837674, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.6324895795240427, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),spoken_language.iso_639_1))", "score": -0.6736052987107541, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.status))", "score": -0.6737890002259519, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.6841827116950299, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,950), movie.original_language),movie.original_language))", "score": -0.6882473987934645, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.vote_average),movie.original_language))", "score": -0.698200461542001, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),spoken_language.movie_id))", "score": -0.7349829432496335, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.03739104028645159, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,30127963),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22166943730816502, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2695377197570831, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3167395256794649, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3576315363701367, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3684324535286564, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,30127963), country.name),country.name))", "score": -0.3729839139846817, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,30127963), country.name),country.name))", "score": -0.3829853889371345, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3970401988057259, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),production_country.iso_3166_1))", "score": -0.3971118206301648, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),movie.original_language))", "score": -0.3982078731349002, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.4163677376092382, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,30127963), country.name),country.name))", "score": -0.4203724536580948, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.42128483456340043, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.426937619819522, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.1595683039477785, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.16936618836798936, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.23366439877048786, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.27373392764491616, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.2755034197882232, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.budget))", "score": -0.3153008714618951, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.3322505727785858, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.36871671438003395, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.title))", "score": -0.3992465170921175, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,!=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.4002619590148472, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.40839378729860815, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.4341163190323251, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.43430050622302746, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.runtime),movie.budget))", "score": -0.44569265246634, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.4724983804036117, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.popularity))", "score": -0.04092080720147351, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))", "score": -0.26699937150260666, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.revenue))", "score": -0.5986521802042262, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.revenue),movie.popularity))", "score": -0.607244770428224, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.vote_average))", "score": -0.6634188256357447, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.vote_average),movie.popularity))", "score": -0.6682273553815321, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,347325802), movie.popularity),movie.popularity))", "score": -0.6875367706306861, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,347325802), movie.popularity),movie.popularity))", "score": -0.6918039863594458, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<,347325802), movie.popularity),movie.popularity))", "score": -0.7066638415344642, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,347325802), movie.popularity),movie.popularity))", "score": -0.7273522840478108, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,347325802), movie.popularity),movie.popularity))", "score": -0.7316921298988746, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,347325802), movie.popularity),movie.popularity))", "score": -0.7524400578477071, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,!=,347325802), movie.popularity),movie.popularity))", "score": -0.8017640934922383, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.revenue))", "score": -0.8247307445053593, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.revenue),movie.popularity))", "score": -0.8333233347293572, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.042463041417480925, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)", "score": -0.336607297276939, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,Show Me), movie.id),movie.revenue)", "score": -0.5543226234377618, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.656563569779512, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6756846994983411, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Show Me),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.revenue),movie.revenue)", "score": -0.6820692672854297, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.budget)", "score": -0.6849967777997013, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6886932146569348, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6992184869557769, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,Show Me), movie.id),movie.revenue)", "score": -0.7014839238349668, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.7028167536965894, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.7078141875958757, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),has_genre.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.7106987325264886, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.7112529830058342, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.vote_count)", "score": -0.7268550206366413, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.17305071610188752, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.20207256253953543, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.22613734809087832, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.24089737754636628, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.2566884816682344, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.26668501230563446, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.2755183858160935, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.sub_category))", "score": -0.2939840095353571, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3213009314343334, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.category))", "score": -0.32531444543316823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.32860501780508433, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.33533278292406904, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.3433650472605723, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.sub_category))", "score": -0.3521031934944868, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.35786173753112754, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.3675098819273468, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.36920584628040604, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.3731892082192559, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.3857892575480439, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.41783745260970695, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.41878494144848005, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.42536605059078897, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.4270620149438482, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.43138499077726805, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.4410636205998077, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), movie.runtime),oscar.number)", "score": -0.4568460573154452, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), movie.runtime),oscar.number)", "score": -0.45854202166850444, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.year)", "score": -0.47311125829558814, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.year)", "score": -0.47317637182843614, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), movie.id),oscar.number)", "score": -0.47423627303992794, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.20698013195691672, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.21965593699923253, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2410795309094026, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.2511190861942119, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2537553359517184, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.2682231343420106, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2784086892478312, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.29108449429014704, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.31250808820031706, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3251838932426329, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.35865061581345126, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3638313111346091, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3765070740905785, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.37985433744818936, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.39253014249050516, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.09519273181893731, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.21421437772854557, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.23010787656750525, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.24679191064028594, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.2679206088070905, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.288678985299653, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3045447367700428, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.3087349565737428, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.31313557691485966, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3896330989417636, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.death_day,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4018020354272914, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.40744504168053336, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),oscar.number,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.42088795883237323, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4217873689946608, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.revenue)", "score": -0.42348607476718936, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.05740541629897961, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity)", "score": -0.26623004491216795, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.id),movie.popularity)", "score": -0.4976732145734907, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2000-08-21), movie.id),movie.popularity)", "score": -0.5864258684263011, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.594837485632173, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6258848971599011, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6367458111859835, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.release_date),movie.popularity)", "score": -0.6439608322172754, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,movie.id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6592034423512596, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6873171084549485, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.popularity),movie.popularity)", "score": -0.706497843186679, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,2000-08-21),movie.popularity)", "score": -0.7181305635436658, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,2000-08-21), movie.id),movie.popularity)", "score": -0.754824640968866, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<,2000-08-21), movie.id),movie.popularity)", "score": -0.7595642401171417, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)", "score": -0.7747361766896542, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.20411973516456783, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.25368649582378566, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.popularity))", "score": -0.32178651238791645, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.release_date))", "score": -0.3713532730471343, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.status))", "score": -0.4095833383034915, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.4865425794851035, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5010430186521262, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.status))", "score": -0.5272501155268401, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.5361093401443213, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.550609779311344, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5570568998809904, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.status),movie.popularity))", "score": -0.5593681975733489, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.id))", "score": -0.5621573410462588, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.title))", "score": -0.5646226487588137, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5854616432916373, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.0471527438161705, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.2820438892591743, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.33299119541209626, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_average)", "score": -0.4167064655112999, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.4788769026112913, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.49215296097732364, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.vote_average)", "score": -0.5004336349452465, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.5089579092185447, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5298242087642132, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5379616916617185, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5507628436448977, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.vote_average)", "score": -0.5513809410981685, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5558833572513859, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.5599052153714666, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.562968754960193, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.18964929621870397, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.birth_day))", "score": -0.30917556327040074, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.gender))", "score": -0.34532971423323033, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.birth_day))", "score": -0.3558699760978925, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.name))", "score": -0.3926431660001981, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.birth_day))", "score": -0.43637846712226747, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.gender))", "score": -0.4648559812849271, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.gender))", "score": -0.5115503941124189, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.name))", "score": -0.5121694330518949, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_place))", "score": -0.5423588876074064, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,f), person.birth_day),person.birth_day))", "score": -0.5559047341739642, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.name))", "score": -0.5588638458793866, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.5806047331934678, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.5848085891848314, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.gender))", "score": -0.5920588851367938, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.021716220886446536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.1), movie.revenue),movie.revenue))", "score": -0.4243577962042764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.5939682773896493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.popularity),movie.revenue))", "score": -0.5965152179123834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_count))", "score": -0.6581259310478345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_average))", "score": -0.6617583573097363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.popularity))", "score": -0.6871247828239575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.revenue),movie.revenue))", "score": -0.7207522635580972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.1), movie.revenue),movie.revenue))", "score": -0.7595827226759866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,>,6.1),movie.revenue), movie.revenue))", "score": -0.7885548860540439, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.budget))", "score": -0.811143571161665, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.vote_average),movie.revenue))", "score": -0.8298237716080621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.budget),movie.revenue))", "score": -0.8306336795212701, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),cast.person_id))", "score": -0.8321505129570141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),cast.movie_id))", "score": -0.8542241990799084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.24995301415782425, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.26602561376870126, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.27239648439491637, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.28108833283636675, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2934045512822806, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29415666659800416, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2986293499877638, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29924643514222565, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(filter(getData(movie),keyword.name,=,killer robot),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.3043184283138678, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.3080578801341611, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_winner),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3161568519054007, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_nominee),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3176045905106445, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.3520974034970878, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.death_place),person.birth_place))", "score": -0.36865096732302477, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_winner),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,None,killer robot), None),None))", "score": -0.3775571089486042, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.12878131148295366, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1721770604130753, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.19499190464963637, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.22351318237938114, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.23441450561332242, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2506377484782344, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.25720128235383743, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.2959027781075347, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.32302734420638796, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3434099742431674, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,company.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3440752141756566, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.34981021832516007, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3606000057425718, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.362543478505622, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.369717739260105, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_place),person.death_place))", "score": -0.17269801755901426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_place),person.death_place))", "score": -0.2197616141056642, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.birth_place),person.death_place))", "score": -0.24279802700039, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.birth_place),person.death_place))", "score": -0.2898616235470399, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), company.name),person.death_place))", "score": -0.4583536203717813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.48807019130897455, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), company.name),person.death_place))", "score": -0.5054172169184312, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_place))", "score": -0.516330495118068, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_day),person.death_place))", "score": -0.5194256122922525, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,f), person.death_place),person.death_place))", "score": -0.5363739067144194, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_day),person.death_place))", "score": -0.5664892088389024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5724491353969806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5745078078601988, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5806654013979408, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5827239597850096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,1986-05-30),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2255759693069782, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.2935879333911987, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3135584098034675, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.32840154207256733, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3403639215210863, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.34257427042526756, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3483720184848362, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.350696854970631, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,1986-05-30),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35407250093974996, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.3590989643095614, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.death_day,!=,1986-05-30), country.name),country.name))", "score": -0.36856429880301983, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.37066734107383487, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.3740880612171275, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.37517753989339, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30),production_country.movie_id,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.49489481943784597, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.10989873387734406, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.30635077037732117, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.34524131097714417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.3697072171887216, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.41673699297825806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), keyword.name),person.death_place))", "score": -0.43310407080571167, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.450639412709279, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.4620942491941627, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), genre.name),person.death_place))", "score": -0.47012436666409485, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),company.name))", "score": -0.5011930567852687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.5185035614074297, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.5501871254404135, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.name),person.death_place))", "score": -0.5526061979762744, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), movie.title),person.death_place))", "score": -0.5561086265079211, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.5638013308563831, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18458645242282687, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(movie),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3071980502016788, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3074810441596291, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3114276704250086, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.31790456203229234, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.3206904594443289, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.32472834575698584, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.3258981442077421, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3318020492231648, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3352025364111498, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.33590806716358707, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.3372532330421574, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.3411157519270003, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,movie.id), genre.name),genre.name))", "score": -0.3484474813650567, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),movie.id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.3902648013421954, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.16140617168374666, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.19945050354915733, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.20717383543274853, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.21510817807099017, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.2900241914933195, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.2951640243747469, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3047010428227862, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3186396955931158, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.31921750599981774, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.326363027476707, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),country.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3522878721854029, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.3752376923491253, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.release_date,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.37832776214359715, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.death_place,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.3857547884278273, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.5317211445430914, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.09534666000708174, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.16144366664469056, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23753507792107448, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2632331156802223, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3033820287661334, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.303815871997234, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3177230532018802, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32510834648351195, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34593635213971835, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.3463016990946509, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3590392189336657, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.36932340005250097, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,92), genre.name),genre.name))", "score": -0.3730614357325673, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4030529115603743, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,92), genre.name),person.death_place))", "score": -0.4071508865249182, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.027644624322419986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.526233658366203, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5289539429889558, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5333938741364954, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5411674265912663, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5463431308710572, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5506762742504384, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5546907965564527, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5547419079020013, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5640993927081581, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5655855289957625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5791334035111837, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(crew),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5829746418423385, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),person.name), person.name))", "score": -0.5883975241595181, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.birth_day),person.name))", "score": -0.591270156292012, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.06374601732386509, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4023396250922815, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4877042648513452, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.48796990412665764, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.49119753941340605, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.492249908777012, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5011186994743184, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_place),person.death_day))", "score": -0.548356744380726, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5868125389461056, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5998638150413171, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.6405136277098791, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.6493027004325995, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6783296344001428, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6795740601737634, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.6963683058638708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.24860393747146786, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.264317929280966, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id), company.name),company.name))", "score": -0.31295320359283807, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(genre),production_company.company_id,company.id), company.name),company.name))", "score": -0.32486178838628016, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3277765026733508, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.340592390650942, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,T\u00fcrk\u00e7e),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.35458369950396634, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3663637808354333, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.37029769131346446, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,T\u00fcrk\u00e7e),has_keyword.movie_id,movie.id), company.name),company.name))", "score": -0.3727620757089508, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37380087481142515, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.3820777726449314, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_genre),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38403650255141875, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.385330869413979, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id), company.name),company.name))", "score": -0.3933877691456451, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.14603785297367722, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.20573667308781296, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.35110465495381504, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.4108034750679508, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.42617487501749796, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.name))", "score": -0.4575023302459158, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.46127818395691067, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.4785986710527491, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.5040942588918924, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.5132507036050002, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.5274991650228843, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_day),person.name))", "score": -0.5331219537028368, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5340391636010683, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.539197567831305, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.5472362615689019, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.15638565718106498, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,=,f), movie.id),movie.revenue)", "score": -0.2288481676868581, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.29584572674930176, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3683082372550949, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3940552869517765, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.39873997698062624, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.4177639173111701, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.420906235067579, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.42559092509642876, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.42968763339053073, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.4343723234193804, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4446148654269726, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.45339630295154215, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.4565386207079511, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.46122331073680084, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.21624488400363767, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2738477605186249, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.27564156973276455, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2797653727833784, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2874849120150649, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2907112042115571, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.3011687412176429, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3167477876374544, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3281082986359216, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.32991374366767456, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3348951477877851, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,sound),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),genre.name),genre.name))", "score": -0.34928956321677035, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.movie_id,genre.id), genre.name),genre.name))", "score": -0.35277050882336586, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.35396346855635447, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3556167020942631, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.14574005208527055, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.17946733090446268, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.18353628026612243, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.19048756400679687, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.2302728399918592, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,=,56000), country.name),country.name))", "score": -0.24034152297182274, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2571905319010923, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,56000), country.name),country.name))", "score": -0.26402621248859975, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.26440793868553236, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2885200128351298, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,=,56000), country.name),country.name))", "score": -0.3098283372285291, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<,56000), country.name),country.name))", "score": -0.33791709265947434, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3719407392319642, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.38046543238982733, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4452055556415053, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.03464084060760797, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,65), movie.vote_average),movie.vote_average))", "score": -0.43942450860413373, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,65), movie.vote_average),movie.vote_average))", "score": -0.44078951457413496, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,65), movie.vote_average),movie.vote_average))", "score": -0.4729714979221171, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.5682520107075106, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,65), movie.vote_average),movie.vote_average))", "score": -0.6223921416130906, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), oscar.year),movie.vote_average))", "score": -0.6888121576084814, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.id),movie.vote_average)", "score": -0.7411048089655993, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.year,>=,65), movie.vote_average),movie.vote_average))", "score": -0.7462082196761912, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,65), movie.vote_average),movie.vote_average))", "score": -0.7589853693534678, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),oscar.year))", "score": -0.7597045517795777, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.popularity),movie.vote_average))", "score": -0.7609623880161962, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.status))", "score": -0.768304071509192, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.status),movie.vote_average))", "score": -0.7738746464638098, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))", "score": -0.7900926343063475, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.3326969142085037, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.3389892748726939, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.37676391433273704, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.38354142403431246, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.39043831803531, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3904788274710645, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.40045898631872306, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4125388607721591, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.41792739214152713, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.42032567701493, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4225190196198177, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4279075509891857, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.43030584796413157, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.44238571077096983, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.44526658989099954, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.11222169407108436, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.11409235984434453, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),company.name))", "score": -0.1232363027364317, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.22485280266649857, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,hi), company.name),company.name))", "score": -0.3163288953710934, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3176680106950683, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33171051025108994, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35680389623465764, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3669122529010966, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,hi), company.name),company.name))", "score": -0.4156570134176601, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.44620387367121966, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.4474850706590676, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4544030324156602, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.46316292295361206, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.title))", "score": -0.4716664853869976, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.15930209388893418, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.17988512703846396, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.18078792686024628, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2568942226200412, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2797066836826258, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.28064300127316805, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,=,fa), country.name),country.name))", "score": -0.30758817881350903, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3105666593860247, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,fa), country.name),country.name))", "score": -0.32981069119255024, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3490315499011144, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.35346209373191556, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.360825097822958, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,fa), country.name),country.name))", "score": -0.37462206126006786, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.3749478990148419, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.3823109031058843, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.11657578616626142, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.12821024336367595, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,strafzettel),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.17167601969227425, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.18519468742109976, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.2558754385696217, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3428733811206596, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3445009477732261, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3644176271112917, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3660666330589637, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.36989361175161894, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), company.name),movie.title))", "score": -0.38626891778929406, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), company.name),movie.title))", "score": -0.38655023638142466, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.394200647578399, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.4001531257049903, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.4498599990721244, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.15269790690937407, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.16962200549928866, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.19783920636773558, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Angola), company.name),company.name))", "score": -0.2302592626349604, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.23682094699701509, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.23699301342486156, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.32509512330433066, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.32994212364878595, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3362076199335352, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35826104698290834, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3593833669054868, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),country.name,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3612973554803187, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.37977076576344415, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3799180652684097, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id), company.name),company.name))", "score": -0.4199700078180878, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.0651123386596737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.17322515070191002, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,417), movie.original_language),movie.original_language))", "score": -0.6203139934477804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,417), movie.original_language),movie.original_language))", "score": -0.6303502929185925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,417), movie.original_language),movie.original_language))", "score": -0.6431595098947582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6479009424120511, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6482790284277181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6501370697398768, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6505152402051205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6521647234582484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6525428094739154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6544008507860742, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,417), movie.original_language),movie.original_language))", "score": -0.6709996473764477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),language.name))", "score": -0.6719543456820247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.6806252647365909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.24512774954200722, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2645140832092255, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2761074495723372, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2846269620972114, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.29622032846032315, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.30237550955876263, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3024465869797841, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3140399533428958, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.32255946586777, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.3251913056376646, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3308946346576491, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3309885191015611, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3319063065297679, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3375357413892433, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3574416662063879, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.12994108601714313, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.27586880846717365, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.2869007173421486, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.29149315614248245, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.2919942202816011, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.30829529890308605, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.32066486531933924, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),oscar_nominee.person_id,company.id), company.name),company.name))", "score": -0.3404274165057768, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),person.death_place))", "score": -0.3456812000001646, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.34677428264863885, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.362712010736497, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,production_company.company_id), company.name),company.name))", "score": -0.36423060203911245, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.3809355772177028, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.title,>,1959),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.40360854493114445, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.movie_id,production_company.company_id), company.name),company.name))", "score": -0.4094876701438392, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.06297238911793102, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.24090095220566274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.3118442871484219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))", "score": -0.39110203641757835, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.41881207267960924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.4219851173911452, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<,no), movie.vote_count),movie.vote_count))", "score": -0.44156481880054343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.4635750487095376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.47312865986837893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.4897554076223684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.49292845233390437, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.49652073520139, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.5296874813353469, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.5368541579157456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5409712701871664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.1647806332810813, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.21924084695068086, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.2521114423671848, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.2559987241899029, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.2767708616294513, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.runtime),movie.popularity))", "score": -0.28061211126309166, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.popularity),movie.popularity))", "score": -0.30570917617868626, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.31377525365521286, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.number),movie.popularity))", "score": -0.3215592644578297, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.popularity))", "score": -0.34329321386117384, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.36627460071316376, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime),movie.popularity))", "score": -0.36865968961409307, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.birth_day),movie.popularity))", "score": -0.38213938542398923, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))", "score": -0.3821659662743595, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.vote_average),movie.popularity))", "score": -0.38780791369708406, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.2415761786514806, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.26544786341986915, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3036204466261154, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3062850161954915, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.32002482729242276, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.33547232392625015, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3518767045925575, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.3736114450768787, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),keyword.name,=,Sex and the City 2), country.name),country.name))", "score": -0.38187513906764753, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3869251472465918, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.39001585301624614, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3909880507116872, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3944324958258974, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.4144880162328271, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.429831574080583, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.023257215209014248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.popularity),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.5753560795875868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.title))", "score": -0.6549689716703142, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.6610288469164516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.budget),movie.budget))", "score": -0.6745251945030759, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6897792883010059, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6944248766819221, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7032867638499908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7041381927887684, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7087837811696847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.7146597427708912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(spoken_language),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7172530373361404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7176458588338477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.budget),movie.budget))", "score": -0.7216610960822436, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.status,movie.popularity), movie.budget),movie.budget))", "score": -0.7280224909245172, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.03405506451963447, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.4239056772494223, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>,Jason Tobin), person.death_day),person.death_day))", "score": -0.4801884825283196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5188024575763848, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),movie.revenue))", "score": -0.5323806596861687, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5523902243876364, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5987928727408555, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_place))", "score": -0.633312542544445, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.birth_day))", "score": -0.6352321697340813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,!=,Jason Tobin),person.death_day), person.death_day))", "score": -0.6542710472422186, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6565172142290976, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.668628183274626, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Jason Tobin), person.death_day),person.death_day))", "score": -0.700776868587127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), movie.revenue),person.death_day))", "score": -0.704081271745963, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_place),person.death_day))", "score": -0.7274120198271703, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.14927762694219474, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.19068524497116493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.1973399953257525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.32040312701916507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3358824885549092, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.33912252697719725, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3527809496096368, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.sub_category))", "score": -0.36549119127926377, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.36846549540272283, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.37999800413450224, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.38394485693846697, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),oscar.year,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3869741302323708, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.387184895360755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.3933469658898393, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3964721356647778, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))", "score": -0.11292704120569397, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.2086560346215265, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_day))", "score": -0.3034232698410051, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.birth_day))", "score": -0.3991522632568376, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),movie.revenue))", "score": -0.42925747409753967, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_place))", "score": -0.4657263375847833, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.death_day))", "score": -0.5262980602710741, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.death_day))", "score": -0.5358342669933336, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),movie.revenue))", "score": -0.6197537027328508, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.birth_day))", "score": -0.6220270536869066, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.birth_day))", "score": -0.6315632604091661, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_place))", "score": -0.6562225662200944, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar_nominee.person_id))", "score": -0.6629666306107538, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),cast.person_id))", "score": -0.6743004538147943, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.death_day),person.death_day))", "score": -0.678650225236197, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.02383607930096332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,18.3802), movie.original_language),movie.original_language))", "score": -0.5628930078964913, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), language.name),movie.original_language))", "score": -0.5826535318192327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.5948128644668031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,18.3802), movie.original_language),movie.original_language))", "score": -0.6087368338048691, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,18.3802), movie.original_language),movie.original_language))", "score": -0.6092163669090951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),language.name))", "score": -0.6421033409569645, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,18.3802), movie.original_language),movie.original_language))", "score": -0.6682505356293404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.status),movie.original_language))", "score": -0.6868072841461981, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.vote_average),movie.original_language))", "score": -0.7308327052887762, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.status))", "score": -0.7356304791901493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,18.3802), movie.original_language),movie.original_language))", "score": -0.7492009012639755, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.vote_average))", "score": -0.7494573858712101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.title))", "score": -0.7538262871239567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.title),movie.original_language))", "score": -0.7683459750987822, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.22310715574265771, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2281421004197979, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.24852590053357504, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.27433746088433864, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2793724055614788, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.30578370333246846, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3108186480096086, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,oscar.id), language.name),language.name))", "score": -0.3356418355575544, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.3423690519500561, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.3474039966271963, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.35371848618785345, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.35701399449151455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.3594361542981881, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3620489845776074, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.36867014742223175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.06207850330974907, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>=,25.6132), movie.runtime),movie.runtime))", "score": -0.3639958038693294, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5164055025701649, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5165496328011562, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5457709273841118, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5590017051410254, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5591458353720166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.title),movie.runtime))", "score": -0.5739561276277527, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.578669557464293, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.5861916137539714, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5883672202191099, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.5885142695025005, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.6111916310352391, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.6185787838221586, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.vote_count),movie.runtime))", "score": -0.6963489012559876, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.03242525489622494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,49.3535), movie.revenue),movie.revenue))", "score": -0.29820231752091786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,49.3535), movie.revenue),movie.revenue))", "score": -0.5569268579929485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.popularity))", "score": -0.5911218636538251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.vote_count),movie.revenue))", "score": -0.698989713062474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_average))", "score": -0.7002174966837629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.7056045004428597, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.budget))", "score": -0.7246313207651838, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_count))", "score": -0.7262315862681135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), person.death_day),movie.revenue))", "score": -0.7554031251565902, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.7709157934514224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.budget),movie.revenue))", "score": -0.7736928700105636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,49.3535),movie.revenue), movie.revenue))", "score": -0.7817902878159657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),cast.person_id))", "score": -0.8253525012041791, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.8296369185773074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.03652660720399581, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,214), movie.original_language),movie.original_language))", "score": -0.3624787869339343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,214), movie.original_language),movie.original_language))", "score": -0.44198667429736815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.4645934987936796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5014788278131921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,214), movie.original_language),movie.original_language))", "score": -0.5141135694866534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5368252872964379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5737106163159502, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),language.name))", "score": -0.6125550538708922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.6197993157747025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.vote_average,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6264804231197457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.status))", "score": -0.6432320148160215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.id,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6472454720318501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), language.name),movie.original_language))", "score": -0.6616955323552247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.vote_average))", "score": -0.6642490297963377, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.019081543177890126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.revenue))", "score": -0.5996970736669027, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.vote_average))", "score": -0.6302181684659445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,22441323), movie.popularity),movie.popularity))", "score": -0.63560994083673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6372331581882175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6448561207808104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6509649851130529, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.person_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6697634873369269, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),getData(cast),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6795169824646918, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6841177660645154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.status))", "score": -0.7028669321225607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,22441323), movie.popularity),movie.popularity))", "score": -0.7211665160502889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,22441323), movie.popularity),movie.popularity))", "score": -0.7304545886363485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), person.gender),movie.popularity))", "score": -0.7491274752901518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,22441323), movie.popularity),movie.popularity))", "score": -0.7540236275890493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.13861397649701937, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.13866943679237043, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.18576419503268785, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.25367195788526753, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.26840942023448316, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3008608745499913, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.30780103865665986, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.31291163556658197, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.339672767476267, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.37119216568540914, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.original_language))", "score": -0.3736655603288527, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3768189034905286, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3798374146745233, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3837590675971972, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.3904899244272767, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.24833588667791964, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3245426840835232, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.349747171164437, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.360552690194846, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.36598927573923373, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.38211352775037155, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.year))", "score": -0.38760348113939835, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),oscar.year,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.39182647387070246, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar_winner.movie_id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3999758601838912, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,!=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.40285263125577336, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.407066759273479, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,!=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.41909468765277885, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_winner.movie_id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.42319420849005734, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.42330886384827576, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.id,oscar_winner.oscar_id), oscar.number),oscar.number))", "score": -0.42866546801380223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.09572979067252256, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.17717168340722333, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.25699423039452474, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_count),movie.vote_count)", "score": -0.37590812587239164, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.38736319728159946, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.3949008541853645, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.44703689573741967, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_count)", "score": -0.4494815499011092, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_average),movie.vote_count)", "score": -0.45071164490559823, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,fr), movie.id),movie.vote_count)", "score": -0.46053107669165927, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.46721303414145565, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.474723401172666, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4863040499288553, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.48721386526071336, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4979643356020924, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.08174545584679963, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.17206949447364972, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2327375085712962, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,380), country.name),country.name))", "score": -0.2601795887426117, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.26929521088942787, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2752109141288691, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,has_keyword.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2995678224059457, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.3136429224707476, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3612363631211948, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.36477678439176886, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.36965568522204306, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))", "score": -0.3779422673156242, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_company),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38076045636763034, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3852637466666965, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3940985653832683, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.08460378419840708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.2943384512909688, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.3745878204354085, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.49625337595352903, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.4999755710014142, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.birth_day),person.death_day))", "score": -0.5021272977464832, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_place))", "score": -0.528089409286622, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5665612905868329, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5867785378941335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5903622075566091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_place),person.death_day))", "score": -0.6033655782812275, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6076461240299977, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6207507416256703, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Lasse Petterson),person.death_day), person.death_day))", "score": -0.6625832964055007, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.birth_day))", "score": -0.6683630101033486, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.0257903203018941, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2607), movie.revenue),movie.revenue))", "score": -0.40850646008038893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.popularity),movie.revenue))", "score": -0.5461221633595414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,2607), movie.revenue),movie.revenue))", "score": -0.6174898814060725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2607), movie.revenue),movie.revenue))", "score": -0.6328340839245357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.budget),movie.revenue))", "score": -0.6637586651486345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_count))", "score": -0.6899447793257423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_average))", "score": -0.7263518924009986, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.popularity))", "score": -0.7436054701101966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.7446025311219273, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,2607), movie.revenue),movie.revenue))", "score": -0.7652583359158598, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.id),movie.revenue)", "score": -0.7774568684736914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,2607),movie.revenue), movie.revenue))", "score": -0.7811577321044751, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2607), movie.revenue),movie.revenue))", "score": -0.7997806905186735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.budget))", "score": -0.8090221041929908, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.15013752938363736, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.21004878794101375, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.21445568028560474, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.22440070209505597, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.24414089931035646, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.2889018064029885, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2979916731556506, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.32124802789317997, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.title),movie.title))", "score": -0.324054081698925, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.33131190321109044, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.34299858287593604, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.title),movie.title))", "score": -0.3713194742583398, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,m), movie.title),movie.title))", "score": -0.3843670803096201, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,m),movie.title),movie.title))", "score": -0.40876869505586216, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,!=,m),movie.title),movie.title))", "score": -0.4443437387769381, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.02785451372161637, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.revenue)", "score": -0.3337295883215687, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.6232036127380051, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.budget),movie.budget)", "score": -0.6716811087765692, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.691888509100043, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,<,5.3), movie.id),movie.budget)", "score": -0.7160205721730505, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,5.3),movie.budget)", "score": -0.7684853041472001, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.runtime)", "score": -0.7830571945318336, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.vote_count)", "score": -0.7855383521641015, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.id),movie.budget)", "score": -0.8032580791423279, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.budget),movie.budget)", "score": -0.8054620491143158, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.release_date)", "score": -0.8148643716512298, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,<,5.3), movie.id),movie.budget)", "score": -0.816255899677797, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,5.3), movie.id),movie.budget)", "score": -0.8187519467582868, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),person.death_day)", "score": -0.842538538235625, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),country.name))", "score": -0.08053633852382874, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,374), country.name),country.name))", "score": -0.14796273678831545, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.17167737007431821, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.1909421781250355, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<,374), country.name),country.name))", "score": -0.279095215477479, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<,374), country.name),country.name))", "score": -0.3558595944168591, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,374), country.name),country.name))", "score": -0.36442452418149657, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3979439095386275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.40460883399274133, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),production_country.iso_3166_1))", "score": -0.4049429523486575, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.41111603881019104, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4158759359771327, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.42651902414877024, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),movie.original_language))", "score": -0.43034977971979166, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,374), country.name),country.name))", "score": -0.4318508999491698, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.2008305312556331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.3063349074230562, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.3381031259267922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.3458013078957914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.3672072275565258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140),movie.vote_count),movie.vote_count))", "score": -0.3722222405998884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.37756952639952734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140),movie.vote_count),movie.vote_count))", "score": -0.38556019234549505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.4051965325882651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,140), movie.vote_count),movie.vote_count))", "score": -0.4174236794571808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140),movie.vote_count),movie.vote_count))", "score": -0.41869439822752125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.41879217737169594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140),movie.vote_count),movie.vote_count))", "score": -0.43691320355276864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.4369647225729637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.4483262052496063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.11119944413503857, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.19169561584479483, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.23830122226227698, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.2670892859823438, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.2764697004270853, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.3308964105241345, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.vote_average),movie.vote_average)", "score": -0.3571984897611747, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,!=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.36763129303743036, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.40260165164411843, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,!=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.431438417579221, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.4330775998331495, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.vote_average),movie.vote_average)", "score": -0.43769466614960506, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.revenue)", "score": -0.44045389194365775, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.44150138756436513, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.44612244946368035, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.popularity))", "score": -0.3591614466276951, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.3890627285809297, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.40995276065147523, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4119518886872578, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.vote_average))", "score": -0.42720008158357814, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4312238912340631, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4495634685608707, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.4566086786500985, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4704535006314162, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4724526286671987, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.47749871072064404, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4784635734383769, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.4794978387564266, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.vote_average),movie.popularity))", "score": -0.485041449603159, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.490999970780784, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.08432617137231233, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.20720577004666607, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2579366341813409, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.2825152825339505, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.28478729790345536, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.2998361179583349, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.32210952595789116, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.32442064569294204, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.3305899846310903, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.3532878733660889, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.36307230412622643, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.37843718318323993, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3830343562065098, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.39600256000829737, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.40103058801634317, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.16491974117093222, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.18705130465035574, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.19921151207775561, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.name))", "score": -0.22560332196028696, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.name))", "score": -0.2339948628911194, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.name))", "score": -0.24615507031851927, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.death_day),person.birth_day))", "score": -0.3166696982311521, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.death_day),person.birth_day))", "score": -0.32882990565855197, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.3305083094573662, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.birth_day))", "score": -0.3552134987357126, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.35778133323139333, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3617847764528697, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.36310365088326607, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.name),person.birth_day))", "score": -0.3632692958379825, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3706583485398285, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.25190707701764775, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.30747611234328676, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.32202580088458205, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.3458861876072358, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,!=,3854), person.name),person.name))", "score": -0.3536737454705342, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), keyword.name),person.name))", "score": -0.35681577697490063, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.36950248163248745, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3761614099438508, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.37759483621022105, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.39592945102984123, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.3972262465467148, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.4014552162876622, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.40258837934120456, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.4038851748580781, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),keyword.name))", "score": -0.4155261504877256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.053106764958433084, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,10.3042),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.250283373507689, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.30897696557009957, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,10.3042), company.name),company.name))", "score": -0.3221268287481629, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), person.birth_place),company.name))", "score": -0.34163895688265233, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,10.3042), company.name),company.name))", "score": -0.34695362652308354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,10.3042), company.name),company.name))", "score": -0.3559960715931566, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), oscar.category),company.name))", "score": -0.3581192435973338, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.3644163888145906, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.366474861947389, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3722706839941885, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3730823723465917, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3793320491489966, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,10.3042), company.name),company.name))", "score": -0.37940051034419614, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.38958644504598056, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.14589383177215973, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.15911195153064034, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.19845222173044458, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.23848307696595808, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.23982630733344715, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.2547379473251292, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.runtime),movie.runtime)", "score": -0.25912704949917736, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.2686970815936147, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.302627855463203, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3070267534272893, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.3128635195363053, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.33902541294601196, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.34935637863328733, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.41350115713053226, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),movie.release_date,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.41731574307746166, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.2373667312553444, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.25794576514885137, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.2630222252298534, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.2653023236077553, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.27796754082685626, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count)", "score": -0.29487633482594355, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),movie.vote_count),movie.vote_count))", "score": -0.3074891526596074, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.3272377303995157, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3305429907794082, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.33062406511274106, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.33392932549263354, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.33815779786111805, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.3413121242742081, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_count))", "score": -0.3465396606451678, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor), movie.id),movie.vote_average)", "score": -0.3498829137482319, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.3630428758042399, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.41892603892785496, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.429655842193995, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.4375959917961154, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.44020573762827553, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.45233589518060174, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4530688266884286, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.45394169751317165, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.46190585633125936, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4630656984467418, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.46379862995456866, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4646715007793117, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_average))", "score": -0.4772611182706896, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4864786297621694, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4873515005869124, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2555866028868322, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.26445840471208903, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2804915395015581, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2893633413268149, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30093367538308075, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30580158599649404, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30980547720833757, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.31467338782175086, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.33070652261121986, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3395783244364767, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.35114864852492367, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,spoken_language.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.35495131909997396, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.360020465025025, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.name),person.name))", "score": -0.368448905472178, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.name),person.name))", "score": -0.38006348801920803, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.24361712347210487, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.27688798220852046, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,company.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.278936792617402, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.28072832567027245, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.movie_id), country.name),country.name))", "score": -0.2807565620462313, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(company),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.293176334852423, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.name,!=,Quick Six Entertainment), country.name),country.name))", "score": -0.29602404599522203, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,production_company.company_id), country.name),country.name))", "score": -0.296559774696124, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id), country.name),country.name))", "score": -0.3045483311082272, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.company_id,company.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.32114611126881304, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.company_id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.3229376477944702, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(production_company),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.33289393917717963, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(production_company),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.movie_id), country.name),country.name))", "score": -0.3367625296375323, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33915707439482523, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(country),production_company.company_id,country.iso_3166_1), country.name),country.name))", "score": -0.342089655646823, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.16676385902353283, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.18354106111154117, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.21741221770637742, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.2543918829901793, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.27079809599814864, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,!=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.2911155545524303, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.31217661670915225, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3175883360800078, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.3455644093656778, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.34660889612823026, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3580809106603725, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3649839674180839, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3663987469079441, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),keyword.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.36794832987671877, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.42537627267302014, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.09314884762633753, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.21337360191233667, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.2183135709960329, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.2760558256369547, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,movie.id),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.31613801525616714, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3307994701818246, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.33853832528203204, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,2.6),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3397393536594063, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.6),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34427631314592905, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.oscar_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3487940037050464, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.35029766192108813, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,language.iso_639_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3526215082702067, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3583288638910018, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.36190853137614815, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),production_country.iso_3166_1))", "score": -0.3764616221105437, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.02212505360148498, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5245715255204373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.5439938913659716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.5536084018276597, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.6340671993420983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6344727138915763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.6776753914637084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.6892818706546677, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.status))", "score": -0.7064457155393029, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.vote_average))", "score": -0.7111734963582421, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.7181914291904832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.vote_average),movie.original_language))", "score": -0.7271392665200213, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.status),movie.original_language))", "score": -0.7346874130053038, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.7433623922152037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.title))", "score": -0.74533118974432, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.15635087098342187, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23070524400770523, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.23147968760699336, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.2936867475983896, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.31885565644493263, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,spoken_language.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.34278831975529167, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),spoken_language.iso_639_1,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3428450886989346, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,language.iso_639_1),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3474093474304657, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.34762985226437654, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3481538455494724, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),company.name))", "score": -0.36142471325529457, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3682163310236934, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3780266987991511, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<=,982), genre.name),genre.name))", "score": -0.37948345863714683, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<,982),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3911714611903345, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.09452012429317291, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.15469792313665742, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.15645780264898654, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,oscar_winner.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.3268221581049693, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>,122), language.name),language.name))", "score": -0.3506505453601512, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(oscar_winner),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3567828286999946, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,oscar_winner.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3781851147359866, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),movie.original_language))", "score": -0.38086069796974376, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,122), language.name),language.name))", "score": -0.39876736295438936, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.runtime,>,122), language.name),language.name))", "score": -0.40414346238285076, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,122),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4042904781330105, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.40759859104974294, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,language.iso_639_1),movie.runtime,>,122), language.name),language.name))", "score": -0.40945569566381, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,spoken_language.movie_id),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.4125593020570115, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(has_keyword),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4173316140169162, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.14977950359915787, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.2145888711993786, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.27254988638317607, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.28180231573238007, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,????),movie.vote_average),movie.popularity))", "score": -0.2852097713174967, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.30447894485972465, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.3190571853832492, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.3389925878962129, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.3616627189476717, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,????),movie.vote_average),movie.popularity))", "score": -0.36804902815332974, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.37759641912495323, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.3872793119473211, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.38956869128480986, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.39208365688836855, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.popularity),movie.popularity))", "score": -0.39468291731821065, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.42209626905116104, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.43492513549019246, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4525365525718147, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4569367421119706, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.460004415902497, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.46536541901084605, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.46976560855100197, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.47283328234152844, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4873770145572699, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.4904446994231506, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5419320625218038, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5513970227699593, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.5525817675417022, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.562046753937899, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5705767221758828, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24334480198515687, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24997765990533688, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),genre.name))", "score": -0.28208867484156197, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3423179370256282, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35703010778336264, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3670039483398973, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3729476036821402, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), person.death_place),genre.name))", "score": -0.3737751006989488, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),person.death_place))", "score": -0.3738015419998547, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3751428922816424, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.person_id,person.id),getData(has_genre),person.id,crew.person_id),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3788917792151103, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.38408192052952467, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.39222080645530294, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.403495563608617, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,person.id),person.id,crew.person_id), genre.name),genre.name))", "score": -0.43361217240629296, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.22797089707039264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.24504789524547982, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.2673176479118276, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.28106691371872955, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.29298678840484094, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.movie_id),language.name,>,P??????), country.name),country.name))", "score": -0.3270854890433277, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.327305313992677, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,=,P??????), country.name),country.name))", "score": -0.3313069366990125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.3406626535034478, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34162166725950593, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.3422815691290164, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34258481551238995, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.movie_id),language.name,>,P??????), country.name),country.name))", "score": -0.3426459703634018, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3431507989938225, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3453461645876054, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.29895716263244343, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,=,1991-01-04), company.name),company.name))", "score": -0.3349742584587823, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.birth_place,=,1991-01-04), company.name),company.name))", "score": -0.3390588402720666, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.34813718932194593, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36548960259756, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,crew.person_id), company.name),company.name))", "score": -0.3724116395445194, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37759660402280204, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.person_id), company.name),company.name))", "score": -0.38104784732556535, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.3882401502144196, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(company),production_company.movie_id,movie.id), company.name),company.name))", "score": -0.3986997859639957, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_place,=,1991-01-04), company.name),company.name))", "score": -0.41356554863869516, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4146696292870625, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4156282871116974, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4206918576292229, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.42677664123389114, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.1492914171102963, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.18468215364504637, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.2356944596392475, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.24925633363182478, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),person.birth_day,=,8.58322), keyword.name),keyword.name))", "score": -0.2661422795642907, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,8.58322),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2692312195947482, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.27324017333807293, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.287073568811443, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.homepage,=,8.58322), keyword.name),keyword.name))", "score": -0.2967202164487286, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,=,8.58322), keyword.name),keyword.name))", "score": -0.3498825905708495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.3578930436366893, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.37247247947215517, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.budget,=,8.58322), keyword.name),keyword.name))", "score": -0.3735399364222273, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3761344884051985, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),person.death_day,=,8.58322), keyword.name),keyword.name))", "score": -0.38890358874747105, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.09195019362322468, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.12707177531383737, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.1870032215749706, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.30945540509871117, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.3225797473124511, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.3268792030131293, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,0.545825), company.name),company.name))", "score": -0.33119395611925484, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33320204911789775, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33445227055478083, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3726408508373269, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37891240755596056, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(crew),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38388685761813784, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,0.545825), company.name),company.name))", "score": -0.3915296866102388, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4081399102989915, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.436890853264944, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Switzerland), movie.id),movie.vote_average)", "score": -0.17070958423566432, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.22044516750756393, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.28965084906907906, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3234491098898615, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.33869353448034006, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.35580078365714496, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3606295178687677, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.38146327142314046, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.40073357428578515, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4045975658970354, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.41930395998770426, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.vote_average),movie.vote_average)", "score": -0.4740962648781546, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.47622828633943703, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(merge(filter(getData(movie),country.name,=,Switzerland),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.4813358179629166, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Switzerland), movie.id),movie.vote_average)", "score": -0.48709796020052654, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.15404083913573702, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1686131715763937, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.17647819566803782, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22085285054177958, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2353972022754192, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.28364704423286113, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,=,Released), genre.name),genre.name))", "score": -0.2939984690939801, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.30067704592321304, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),person.gender,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3211608121710306, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.3373781512894258, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3596561351391318, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3604847401770009, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,=,Released), genre.name),genre.name))", "score": -0.3651185556682631, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,Released), genre.name),genre.name))", "score": -0.36617941955725, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3668222176208684, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.01996422011870891, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,132), movie.vote_count),movie.vote_count))", "score": -0.46765844023320824, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,132), movie.vote_count),movie.vote_count))", "score": -0.4692732492694631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.6426930090310634, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.revenue),movie.vote_count))", "score": -0.7116654777200893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7593495274195448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.revenue))", "score": -0.7635940305190161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.title))", "score": -0.785879849572666, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7941171551356092, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), person.death_day),movie.vote_count))", "score": -0.8008168005617335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.title),movie.vote_count))", "score": -0.801200416055508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), oscar.number),movie.vote_count))", "score": -0.8039112352998927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_average))", "score": -0.8245913974242285, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,132), movie.vote_count),movie.vote_count))", "score": -0.8396368423709646, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_average),movie.vote_count))", "score": -0.8431088590295985, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.2895419928852152, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.2901708021479799, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3531266119681097, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3635556727370615, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3803618896264581, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.4013257568241244, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.40478111879105505, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.40663622335798, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.4067936355051159, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.41258715704253285, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4149447823230274, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4227508205745052, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.42856103448247285, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.43158201201336927, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.43221082127613397, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.18465035940837207, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.18638235065524697, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2075067377738786, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.222642082369516, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.2633068250789576, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.27493650492198335, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3031075990653854, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.30460324130798133, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3147372789084112, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.3205632478360609, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3243071716262103, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)", "score": -0.3288623937263903, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.330753887614905, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.id),movie.vote_count)", "score": -0.33219293731999083, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3359368611101402, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5371853446476805, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5378800212023169, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5445780727746495, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5496915587551263, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5550883308277903, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5668998683805996, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,United Arab Emirates),movie.popularity),movie.vote_count))", "score": -0.5688967380683546, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5693595424469409, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5829811322298057, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.5869082652703584, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5931344500131149, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.5943009933973274, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5947926692980683, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.6001894413707323, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.6049459870813775, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.10665455285888936, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.1629893672410237, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.1763773080980468, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.24994204023117397, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.26386036624022735, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.28759525714714007, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.2944127479436574, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.29937751228188886, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.31018216671700355, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.31360386809153074, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.34468029212268575, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),person.death_place,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.3520911367653495, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.budget))", "score": -0.40614447191907743, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.title),movie.title))", "score": -0.4112744881731814, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.41265478615306855, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.34903401090541286, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.36750890691131394, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.37725041376862306, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.release_date))", "score": -0.40850915586634073, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.title))", "score": -0.43924604451078875, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day),movie.title))", "score": -0.4463056670645891, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.4532750597082774, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.popularity),movie.title))", "score": -0.46535028151183083, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.4698199888359886, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.47174995571417844, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.popularity))", "score": -0.4784910885064164, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.title))", "score": -0.4838251775177319, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.release_date))", "score": -0.4876417884617241, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.4882948848418896, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.48899235696967586, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.1685359351292028, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.18423706623726346, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.death_place))", "score": -0.1902755266187166, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),movie.release_date))", "score": -0.2835557757054398, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),company.name))", "score": -0.2992569068135005, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),person.death_place))", "score": -0.30529536719495365, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),production_company.company_id))", "score": -0.3146522163777675, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.31473623844578796, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.birth_place))", "score": -0.32707273893312705, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),company.name))", "score": -0.3304373695538486, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),person.death_place))", "score": -0.3364758299353018, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),person.birth_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.36098735279774813, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.title))", "score": -0.363528906832986, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,2000-01-01), company.name),movie.release_date))", "score": -0.36429375308182416, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), person.birth_place),movie.release_date))", "score": -0.3753027693530017, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.05869915287621552, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.release_date))", "score": -0.29358613442309434, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.release_date),movie.release_date))", "score": -0.3015140588177019, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,50.0736), movie.release_date),movie.release_date))", "score": -0.40298893998988206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.popularity),movie.release_date))", "score": -0.5175183191677206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.popularity))", "score": -0.5629353802432888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,50.0736), movie.release_date),movie.release_date))", "score": -0.7161373346825712, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.popularity),movie.release_date))", "score": -0.7524053007145994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7541725013434188, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.popularity),movie.release_date))", "score": -0.760333225109207, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7712634498966509, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7781156594646745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), person.gender),movie.release_date))", "score": -0.7808332219501608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.popularity))", "score": -0.7978223617901676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),person.gender))", "score": -0.8039863984813564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.13339750999148237, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.2679818251126562, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.39604031825001584, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),person.name))", "score": -0.45261579909856664, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),person.name))", "score": -0.46099722543294774, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.46447049891139613, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.5326127388470923, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.popularity),person.name))", "score": -0.5823807732158457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),language.name))", "score": -0.5872001142197405, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),language.name))", "score": -0.5955815405541216, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.5969024653022643, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.59905481403257, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),keyword.name))", "score": -0.5996266582005774, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.6037645318501745, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.vote_average),person.name))", "score": -0.6271673456722056, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.12688225154910016, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.14578169610107436, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.15431355252150192, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.1870445692969253, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.33542150386690733, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3741106617822811, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.3761951591745371, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.38905175387064644, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<=,Colombiana), keyword.name),keyword.name))", "score": -0.39002825851845785, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<,Colombiana), keyword.name),keyword.name))", "score": -0.4064600263209301, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.4073434360396823, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,=,Colombiana), keyword.name),keyword.name))", "score": -0.4079411794169917, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.416142388856631, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4180220470799639, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.4404888667889865, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.revenue)", "score": -0.14400102804813716, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.25941514704378105, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Rumored), movie.id),movie.revenue)", "score": -0.2818495416289177, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.id),movie.revenue)", "score": -0.3503988408230145, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.revenue)", "score": -0.4658129598186584, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.id),movie.revenue)", "score": -0.48824735440379496, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,Rumored), movie.id),movie.revenue)", "score": -0.6728373806329909, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.revenue),movie.revenue))", "score": -0.6853220468765358, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,Rumored), movie.id),movie.revenue)", "score": -0.6911128019897984, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.revenue)", "score": -0.7072559042155363, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.revenue),movie.revenue))", "score": -0.7491447857028106, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.budget)", "score": -0.777089618952912, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Rumored),movie.revenue),movie.revenue))", "score": -0.797934598493157, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.8020529675503228, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,=,Rumored),movie.revenue),movie.revenue))", "score": -0.8392902939522173, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.0518830161599908, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.31516282018856145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.3429053670178518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.38518952944978285, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.44231892961028063, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.gender))", "score": -0.46822277587489225, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.48980939059524237, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.movie_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.5141781160417587, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5361556430109027, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.birth_place))", "score": -0.5495488754531834, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.5562380500602299, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.birth_place), person.birth_place))", "score": -0.5733885028457735, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.5786224071457309, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.death_place))", "score": -0.6058232275827322, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.gender))", "score": -0.6096078129608493, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.05194674932758955, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.3804685808319607, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.49330347828740484, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.5783522880539624, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.revenue)", "score": -0.6242542954007216, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.6517681533508152, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.6606769856833377, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.6727517306876565, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,7.4), movie.id),movie.vote_count)", "score": -0.6815306533908896, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.7101624812257796, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,null,7.4), movie.id),movie.vote_count)", "score": -0.7557461912696787, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.7881448918465175, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,7.4),movie.vote_average),movie.vote_count))", "score": -0.7967424990456493, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<=,7.4),movie.vote_count)", "score": -0.872582397950509, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(filter(getData(movie),movie.vote_average,>=,7.4),movie.vote_count)", "score": -0.8997430132758111, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.07129363441708847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.37391930544617935, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,5.4), movie.vote_average),movie.vote_average))", "score": -0.4312886410007195, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.title))", "score": -0.4374844981903152, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.popularity))", "score": -0.5003088368648605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_count))", "score": -0.5048116697544174, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.revenue))", "score": -0.5071808351749496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.runtime),movie.vote_average))", "score": -0.5074271504381613, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.runtime))", "score": -0.5332965208763198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.status))", "score": -0.5395759596103744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.popularity),movie.vote_average))", "score": -0.5633643512228446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.5648713084483461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.original_language))", "score": -0.5910330070728378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.status),movie.vote_average))", "score": -0.6474530939558463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.6552549849002389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.02927316199929919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.3957750865811249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.4884769501077244, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.5475480450404575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.popularity))", "score": -0.5775724806444487, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.5934938856953522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.release_date), movie.release_date))", "score": -0.6335271146526793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),person.gender))", "score": -0.6452490248339018, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.gender),movie.release_date))", "score": -0.7027564538730076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.790415651499643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.budget),movie.release_date))", "score": -0.8179745568049839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8461377093190094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8510667154187104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8561493822926423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8624099943699548, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.12349243073583784, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,17500000), country.name),country.name))", "score": -0.1863847384264283, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,17500000), country.name),country.name))", "score": -0.19330415021113703, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.20256528796002274, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2053519091291589, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,!=,17500000), country.name),country.name))", "score": -0.2487263307686219, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.25522983272522265, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.29741814875748684, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30004811021434635, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.3096943665282143, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,17500000), country.name),country.name))", "score": -0.32104254669736876, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3423223134042987, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))", "score": -0.38165231225974544, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3817830654636354, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.3970656197571676, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.19277231511334836, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.2035394689044004, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.23066062054853667, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_place),person.death_place))", "score": -0.23786023879756552, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.2556889454706814, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.2710715681354554, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.28183872192650744, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.32187627990874335, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_day),person.death_place))", "score": -0.3683005942294332, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.37199210315609876, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_day),person.death_place))", "score": -0.37550021247846205, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.birth_place))", "score": -0.37929594675486666, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,<,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.3865266967173563, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.birth_place))", "score": -0.3900631005459187, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_day),person.death_place))", "score": -0.39332891416766846, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.09802616151300311, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.15807772770988462, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18123594136736584, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,af), genre.name),genre.name))", "score": -0.21841582117962866, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.231782956985723, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2657430291327314, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.28274472368490294, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,af), genre.name),genre.name))", "score": -0.29688265095782435, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3095473102340378, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3410187713764405, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36133976060225886, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38872942194789856, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3957837935702207, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,af), genre.name),genre.name))", "score": -0.40372779909061574, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41494683193574894, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.12587206921479555, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.14712119902351373, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.17255027000863996, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.1865618211915779, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>=,5.93923), language.name),language.name))", "score": -0.29036329693419183, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.29380102183473034, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2979732940269702, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3326929481349372, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.3406582367996546, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>,5.93923), language.name),language.name))", "score": -0.3510530489109742, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.3779975665570448, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),movie.original_language))", "score": -0.3888863886659686, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), movie.original_language),language.name))", "score": -0.3968436323097022, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.40642678407107735, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,5.93923), language.name),language.name))", "score": -0.40941268948758247, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.07358906716763158, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.2467661343580403, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.original_language))", "score": -0.3868564341282763, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.4729071455353901, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.47536978051721235, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.5178808899881879, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5341789516831559, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.title))", "score": -0.560033501318685, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5646636245837726, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5791526961359538, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.580154103092804, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.title),movie.original_language))", "score": -0.5949939880680168, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.popularity))", "score": -0.6050593675380177, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.6062792513643449, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),language.name))", "score": -0.6200470320945897, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.05204557014258171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.budget))", "score": -0.2884182756915834, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,149), movie.budget),movie.budget))", "score": -0.4868248504735675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),person.death_place))", "score": -0.4960924758725014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,149), movie.budget),movie.budget))", "score": -0.5806856257058826, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,149), movie.budget),movie.budget))", "score": -0.6066474145427492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_place),movie.budget))", "score": -0.6082396939546015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.6093178871073556, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.revenue),movie.budget))", "score": -0.6226245597154048, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.revenue))", "score": -0.6369614972882118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.title))", "score": -0.6567575111203041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,149), movie.budget),movie.budget))", "score": -0.7231975560225692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),person.death_place))", "score": -0.7324651814215031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_day),movie.budget))", "score": -0.7687069013863947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,<=,149), movie.budget),person.death_place))", "score": -0.7702527753604118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.023551276969639257, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,movie.revenue),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.5788919476569598, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.5974044327648406, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.budget)", "score": -0.6370573346341531, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,4.6), movie.id),movie.revenue)", "score": -0.6675037535752468, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.popularity)", "score": -0.6992311034771254, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,4.6),movie.revenue)", "score": -0.7420510103916911, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,<,4.6), movie.id),movie.revenue)", "score": -0.7587439149720668, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.vote_count)", "score": -0.8058814684193499, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.revenue),movie.revenue)", "score": -0.8078764418724298, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),cast.movie_id)", "score": -0.8095283822624014, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,4.6), movie.id),movie.revenue)", "score": -0.817654617909037, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),person.death_day)", "score": -0.8334713657316658, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,4.6), movie.id),movie.revenue)", "score": -0.8417650138297373, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,4.6), movie.id),movie.revenue)", "score": -0.8429726857140868, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))", "score": -0.12027429418255856, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.popularity),movie.status))", "score": -0.18610060056716324, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.status))", "score": -0.20750742263565405, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,New Zealand),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.status),movie.status))", "score": -0.2227428599762106, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.release_date),movie.status))", "score": -0.2573747053968594, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.release_date))", "score": -0.3081097700997707, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.runtime),movie.status))", "score": -0.3306172462404439, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), person.gender),movie.status))", "score": -0.3335676143081445, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.runtime))", "score": -0.36755753559823867, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), country.name),movie.status))", "score": -0.3693805373793012, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.status))", "score": -0.3711778990402063, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.release_date))", "score": -0.3800198432503803, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.title))", "score": -0.39003613299479334, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.runtime))", "score": -0.39074651508122277, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,New Zealand), movie.status),movie.status))", "score": -0.39253479206160946, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1716871701989311, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.24002550062867897, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<,2013-02-13), company.name),company.name))", "score": -0.24415593440885203, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2565968827924126, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.26281559678051014, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2665411687684099, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2013-02-13), company.name),company.name))", "score": -0.2835474433356689, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.29385472913943944, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<=,2013-02-13), company.name),company.name))", "score": -0.2954474685393609, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.33505808916977275, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.34864707644740034, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.3618527462095054, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,cast.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37397742628187747, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,Sloven\u0161?ina), company.name),company.name))", "score": -0.3766364295761005, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.4065417302878982, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.12011080638149708, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.19969907838840695, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2525202908596892, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.26988932171507996, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.276606698994081, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.280143092035439, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.28123490112423294, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.29255293426362183, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1986-11-27), movie.id),movie.popularity)", "score": -0.29630206604718956, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3158965935265572, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.32017573543937167, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),filter(getData(person),person.birth_day,>=,1986-11-27),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.34092171637175067, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.34097024435288975, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,<=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3459433743567333, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.36076573084938607, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.3671633932306947, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.number)", "score": -0.3865325098344223, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.3906454012369181, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4040709386673715, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.40738727358406424, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.41416960659921104, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.year)", "score": -0.4250218779795966, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(movie),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4251121554066713, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.oscar_id), oscar.id),oscar.number)", "score": -0.43199645629592226, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.4328524776928434, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4353483809206662, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.4417974220464601, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.444468160210089, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.4445267814446158, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.44513309907154097, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))", "score": -0.1348647929771687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.status),movie.status))", "score": -0.194275007401302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,How She Move), movie.status),movie.status))", "score": -0.3810173876627232, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,How She Move), movie.status),movie.status))", "score": -0.3850323267324711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.popularity),movie.status))", "score": -0.4921778420030023, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,How She Move), movie.status),movie.status))", "score": -0.5303075619085575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,How She Move), movie.status),movie.status))", "score": -0.5341786451681401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,How She Move), movie.status),movie.status))", "score": -0.5430081196172978, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.popularity),movie.status))", "score": -0.5515880564271356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,How She Move), movie.status),movie.status))", "score": -0.6118898697241093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.vote_average),movie.status))", "score": -0.6137220839082147, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.vote_average))", "score": -0.6541926165155019, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.vote_average),movie.status))", "score": -0.673132298332348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.status),movie.vote_average))", "score": -0.7136028309396352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.popularity))", "score": -0.7305226822427358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.03914428859752661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.popularity),movie.revenue))", "score": -0.47401877803531534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.5131887064599141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_average))", "score": -0.546493706142428, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_count))", "score": -0.5794498294944788, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2.2), movie.revenue),movie.revenue))", "score": -0.6423757822140033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2.2), movie.revenue),movie.revenue))", "score": -0.6465202719791705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.id),movie.revenue)", "score": -0.7019625303447236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,2.2), movie.revenue),movie.revenue))", "score": -0.7034217269047076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.vote_average),movie.revenue))", "score": -0.7076444284411991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.budget),movie.revenue))", "score": -0.713570441434058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),cast.person_id))", "score": -0.7248329490776086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.person_id),movie.revenue))", "score": -0.7279280082675541, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.popularity))", "score": -0.7360450595970178, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.movie_id),movie.revenue))", "score": -0.7622426406833256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.08426838003286051, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.17429142327727273, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.21228586879411504, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.279495875626989, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.30210376831006014, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3114512615873114, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3139510648507129, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.35686559146561836, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.374344675084973, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.39111099784377923, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.39732056019954354, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3982714854815729, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,>,1999-12-16), genre.name),genre.name))", "score": -0.4121958420071662, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.41901781399915244, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.43299510040447625, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.title))", "score": -0.3180074418851291, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.runtime))", "score": -0.3867892275520717, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.id),movie.title))", "score": -0.40706214559759246, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.popularity),movie.title))", "score": -0.4122625912496005, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.runtime),movie.title))", "score": -0.4376426066228305, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.title),movie.title))", "score": -0.46609136713232147, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.status),movie.title))", "score": -0.4686939443417941, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.id),movie.runtime))", "score": -0.47584393126453506, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.release_date))", "score": -0.47771565122093307, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.popularity),movie.runtime))", "score": -0.4810443769165431, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.560605925575546, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.title))", "score": -0.572606439684063, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.release_date))", "score": -0.5726919104084286, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.release_date))", "score": -0.5846924245169455, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.5876002056322112, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.07011952031037297, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19292463858970602, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22407191820572084, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.26467212697305587, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.27654595747769123, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3087001333119785, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.3145365635182283, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>=,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32975898922350916, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.35563842000206913, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.36512034768438695, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.367056324685799, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3730157263370707, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3793470815241688, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>=,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38270330025312116, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.396722532284019, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.1385754405349692, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.21013992511624702, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.24163780403632495, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.25095995149716516, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2553277605982106, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.25990033191637735, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2912867621352202, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.30734859737615317, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Sweden), movie.title),movie.title))", "score": -0.3541842683754055, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3608100099618638, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3656438627532047, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3656936364825085, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3736737851076133, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.37586911881865254, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.original_language,=,Sweden), movie.title),movie.title))", "score": -0.3872816445813409, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.043654364460962825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.4549419034810853, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.4821401032822905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.revenue))", "score": -0.5058244219253538, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.5271332046755357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6423979242536006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6844867667766752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6988852390752848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.release_date))", "score": -0.7121972492168425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.7300778614041887, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.revenue),movie.popularity))", "score": -0.7322366345179034, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.vote_average))", "score": -0.7379814436862944, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,26500000), movie.popularity),movie.popularity))", "score": -0.7906906399148284, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.8011919377822778, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.vote_average),movie.popularity))", "score": -0.8053735602152301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.026816933379450347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.46350906878797105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.release_date))", "score": -0.5719252000199049, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.vote_average),movie.runtime))", "score": -0.6375005149384378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.status))", "score": -0.6499240169869154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6634721615919261, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6725204591275542, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6890571121693938, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.release_date),movie.runtime))", "score": -0.7214876317520975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.7652724245199352, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.vote_average))", "score": -0.7872214088783949, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.status),movie.runtime))", "score": -0.793663968994224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,2006-06-26),movie.runtime), movie.runtime))", "score": -0.7980783308594255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.8141151074887603, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.8169222473152331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.06070896127333214, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.24263420013839282, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.3046044239181808, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.vote_average)", "score": -0.40394395177035675, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4443260137125968, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.4644994486936683, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.4708388037103658, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4864238283887011, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.48785388300730975, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5007131098983492, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5062962374923848, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.5264696724734563, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5274847448471742, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.5328090274901538, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5403624834943875, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.vote_average))", "score": -0.26858910472852976, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.3140805046810709, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3156769046981457, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.32756492148333316, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget,!=,tape recorder), movie.id),movie.vote_count)", "score": -0.3276731803027819, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.3518189861054669, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget,!=,tape recorder), movie.id),movie.vote_average)", "score": -0.35644494587932757, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count)", "score": -0.3578398838442726, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.revenue),movie.vote_average))", "score": -0.35989597597826667, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.3676372498446641, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count)", "score": -0.3696898935095691, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.37846675509924255, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.3840456104756634, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.3849222454195217, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.3853715249890201, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.13653928945482988, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.16130345652834271, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.20544682435214218, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.2323654587919418, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.2359367346561647, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.26570569272990635, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.26684748454164675, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.2733265702960099, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.28351535023543895, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.30863019138197634, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.31985973111902605, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.budget),movie.revenue)", "score": -0.36269246234471164, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.3887672660163383, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.39193570005517203, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.4141742193952804, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.21838943802955735, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.2952468745068491, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.30857794466895583, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.33561766395774745, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3627092808010435, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(person),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.3667193957894207, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3897490000898351, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.homepage,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.39651856174245637, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.3966637425794183, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.3969850274137385, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.3972825389124871, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.4022921750508109, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.4077008579773622, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.41504827784819287, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),country.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.4277196290361113, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.19947987448540516, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.death_place))", "score": -0.21534757714834996, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.3201119548119213, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.3507457779342627, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.39365294765853426, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.40094672856999986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.42422479603555985, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4242867707808757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4315805516923413, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,crew.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.43574299020077945, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.birth_place))", "score": -0.44009249869850464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1975-10-25), person.death_place),person.death_place))", "score": -0.4499864171084482, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.45351444809052643, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1975-10-25), person.birth_place),person.death_place))", "score": -0.465854119771393, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.47224887028709683, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.17632018195475865, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2582101113642071, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,movie.id), genre.name),genre.name))", "score": -0.3075479641051467, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,South Paris), genre.name),genre.name))", "score": -0.31196347702696475, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(has_genre),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31604940013920463, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3420100208362725, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,South Paris),getData(has_genre),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3523205790954583, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3609456479383258, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3693992377986063, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.person_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3776492259349405, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.oscar_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3793550718563177, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,genre.id), genre.name),genre.name))", "score": -0.379607583491603, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.37982012212580574, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3883348722547962, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.39099864513390015, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.08316225638180462, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.15555845542398236, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.1780544227443286, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,is), country.name),country.name))", "score": -0.2815656976099042, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.3365197199442725, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.35177723074395617, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38051086695457353, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.3807781025047018, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.38613982362264726, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38818794127319767, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),spoken_language.iso_639_1,country.iso_3166_1), country.name),country.name))", "score": -0.3893629385898753, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.3950581853570652, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),movie.original_language))", "score": -0.39998251880929886, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.40236627899867233, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),movie.original_language))", "score": -0.4069935885780436, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.11530808056920752, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.16914966849414526, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.18520853564530582, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.18809768093761414, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.revenue),movie.revenue)", "score": -0.2883207237142779, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)", "score": -0.3112328429834128, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.32324088115265925, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.32565843280377543, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.32778430270058534, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3414336799092436, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.344573700996312, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.36244667001494085, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,<,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3708786588723364, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.budget)", "score": -0.384721168518414, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.budget),movie.revenue)", "score": -0.3891783150601916, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.14565741062688176, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.25345014572667424, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.35482155323552433, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.44033107698487584, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.46029094398545567, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.4626142883353168, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.popularity),movie.release_date))", "score": -0.4880261940561468, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.runtime),movie.release_date))", "score": -0.4900095982156927, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.4987466090969974, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5266590768151218, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5328597396292025, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.title),movie.release_date))", "score": -0.5572025103174383, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5679558867268497, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.status),movie.release_date))", "score": -0.5955344361864263, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.popularity),movie.release_date))", "score": -0.5958190017991001, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.23197897093945807, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),keyword.name))", "score": -0.3246583244624271, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(has_keyword),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.34904223875369056, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.vote_count))", "score": -0.3529588140871386, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),keyword.name))", "score": -0.3576966470629913, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.title))", "score": -0.37008722610654055, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.3968034904039702, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.4227157760934972, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.original_language))", "score": -0.423087762721182, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(has_keyword),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),keyword.name))", "score": -0.4417215922766596, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),oscar.number))", "score": -0.45239867907130277, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), oscar.number),movie.title))", "score": -0.45259064154253525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),movie.vote_average))", "score": -0.4527552387990171, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(has_keyword),movie.id,oscar_winner.movie_id),getData(oscar),has_keyword.keyword_id,person.id),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.5390929566214735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(has_keyword),movie.id,oscar_winner.movie_id),getData(person),has_keyword.keyword_id,person.id),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.5439097739844099, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1256495681758945, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.12832671446229327, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.2164598812425026, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Sardaarji),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2416253314633249, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.2858965163329818, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.294247079865367, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.3212496165986784, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3323315220025288, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),person.death_place))", "score": -0.33326628356852045, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Sardaarji), company.name),company.name))", "score": -0.3486852945078447, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.3540718861148169, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3552805042508022, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),oscar.category,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36238106479685256, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Sardaarji), company.name),company.name))", "score": -0.38158982907573, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,=,Sardaarji), company.name),company.name))", "score": -0.3824360299540688, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2096145241979617, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.24381500403728723, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24501128129532065, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2786151849590771, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2890124376325943, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.31895444865158085, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,!=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3399767747082968, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.35962597710830774, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3654033752750734, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.36594072106358055, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,>=,160),getData(has_genre),oscar.id,oscar_nominee.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3733011837393585, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3889396157091365, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.3944261295110603, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,>=,160), genre.name),genre.name))", "score": -0.3977916040737811, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.4007408801115457, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,cs), movie.status),movie.status))", "score": -0.11989853575505549, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,cs), movie.status),movie.status))", "score": -0.20742563202657038, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,cs), movie.status),movie.status))", "score": -0.3099398989943438, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,cs), movie.status),movie.status))", "score": -0.4013980407980853, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,cs), movie.status),movie.status))", "score": -0.4671481628683978, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,=,cs), movie.status),movie.status))", "score": -0.5590331335333758, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar_nominee.movie_id,=,cs), movie.status),movie.status))", "score": -0.5638411422041827, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,cs), movie.status),movie.status))", "score": -0.6277802439653897, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6298567963783965, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.number,=,cs), movie.status),movie.status))", "score": -0.6304753357326263, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6421280763192104, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),spoken_language.iso_639_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6691418046980632, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),production_country.iso_3166_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6704197687899848, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6720146153820604, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,country.iso_3166_1),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6742160380871215, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.1055062854134212, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.12558090550009884, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13622304819123482, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,<=,Nine), company.name),company.name))", "score": -0.25238038338343655, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Nine), company.name),company.name))", "score": -0.26024691244700676, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.31386137946948134, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.34496474137732386, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Nine), company.name),company.name))", "score": -0.353012837584561, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.390011083319729, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,<=,Nine), company.name),company.name))", "score": -0.3911750364509881, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.4105099104616672, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.43053452142341697, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Nine), company.name),company.name))", "score": -0.4313370698223616, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.43342978441612484, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.43586135454793645, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.03597232464314262, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.budget,<,7500000), company.name),company.name))", "score": -0.29410777417336526, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,7500000), company.name),company.name))", "score": -0.30084811516682375, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.32423121890906714, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,7500000), company.name),company.name))", "score": -0.3317259696005506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.34522702933997235, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),person.death_place))", "score": -0.37228087943107707, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), person.birth_place),company.name))", "score": -0.3771438590198628, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.38576712352582865, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), oscar.category),company.name))", "score": -0.3862679662768344, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3882200398391328, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,7500000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.39277508129522476, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,7500000), company.name),company.name))", "score": -0.3944006731595847, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),movie.title))", "score": -0.3955871816825495, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3958783278281002, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.18728439197583197, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.20196204092116746, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.23104075384993936, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.2494249874855895, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.2695499156365828, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.27454035140227173, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.28348625177807746, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.3086016156947597, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.31313151241701626, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.33300371138551627, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.name))", "score": -0.34293150404070294, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),filter(merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),movie.status,=,writing (original story)),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3565674098327941, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3736001194714658, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.death_place),person.birth_place))", "score": -0.3765269048564318, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),oscar.id,person.id), person.birth_place),person.birth_place))", "score": -0.4376854354609308, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.08928056927990657, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.1903450294108996, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.19602383163703455, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.25970312232582277, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.2970882917680276, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.31659521652659345, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.3607675824568158, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3664463846829507, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>=,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.3696848563608599, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.38608021209659427, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3866239579268997, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar_nominee),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3937133276076392, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.39419555996538236, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.40086964717644474, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4106244420089502, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.09735530052421382, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.1768405828261166, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.birth_place))", "score": -0.324370436333993, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.birth_place))", "score": -0.40385571863589576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), company.name),person.death_place))", "score": -0.600594023206213, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.6145898322210996, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_day),person.death_place))", "score": -0.6255169901633053, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1909-11-09), person.birth_place),person.death_place))", "score": -0.6341270599150448, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.6557584613590606, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),company.name))", "score": -0.6670785769456415, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.6747187544268314, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1909-11-09),person.birth_place), person.death_place))", "score": -0.6892272688637604, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.birth_place))", "score": -0.6927427686050686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1909-11-09),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.6931090398870084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.6940751145230024, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.10325890796154044, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.17046086255450646, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.19487929840139429, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2643420813280824, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.2685853581168905, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.3065911092794748, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.31740792506399673, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.revenue)", "score": -0.3199793985690147, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.32895554794323634, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.34201772396343766, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,movie.id), movie.popularity),movie.popularity)", "score": -0.35283453974795964, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.popularity)", "score": -0.35780585318031105, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)", "score": -0.3692351797571572, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3871813531619807, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.39333971104776333, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.14151721931496278, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.16191966217356626, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.1713550035605565, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.23258368658327522, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.24357872582219442, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.2627410351611771, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.27102356784077275, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2975733530578848, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3066262873410651, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.3081602724511101, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3354176864836063, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.39652975209648506, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,keyword.id), keyword.name),keyword.name))", "score": -0.4085242348467416, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.4182024966511588, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4194287753697656, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.1345091268826697, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.224831314960581, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.2317690188004862, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.2827938329256316, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.2990693784317545, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.29926549354003185, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31721141130875186, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.3220912068783975, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.32352267759627845, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32409725307368825, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.33678107174919136, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3483456526477606, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), country.name),country.name))", "score": -0.3541463451789647, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3677558614218673, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3968475935098771, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.15210952050690374, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2248366419676508, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.232828112236587, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.27832938873998825, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.27916548424873205, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2833600165582601, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.2853151174731445, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2911949457641119, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.number),oscar.number)", "score": -0.3020007710428262, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.33802879947239617, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3453260405280103, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.number),oscar.number)", "score": -0.3629616603442473, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.number),oscar.number)", "score": -0.36379777485124354, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.3886588078720031, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.runtime),oscar.number)", "score": -0.39059686497081975, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.2717781660667242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.313276290666181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), keyword.name),movie.title))", "score": -0.38074350334318297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), language.name),movie.title))", "score": -0.4463959930053534, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),keyword.name))", "score": -0.48573756195219175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.4882592556587042, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.510787904035169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),keyword.name))", "score": -0.5272356865516485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.vote_count))", "score": -0.529757380258161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,260000000),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), movie.vote_count),movie.title))", "score": -0.5325879832215746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.5460738898533084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.5686519476869026, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.title,!=,260000000), person.name),movie.title))", "score": -0.5815314041294013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.5901911705112544, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), language.name),movie.title))", "score": -0.5968004413639842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.39470955476281233, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.4340594087552745, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.4399809439491946, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.46008881673333235, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.4793307979416568, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.revenue),movie.vote_count))", "score": -0.4919379700731952, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.4994386707257945, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5053602059197146, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.revenue),movie.vote_count))", "score": -0.5312878240656573, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5447100599121768, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5544906084251124, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.revenue),movie.vote_average))", "score": -0.5573172320437152, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), oscar.year),movie.vote_count))", "score": -0.5622399796557147, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),oscar.year))", "score": -0.5768001948308665, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5938404624175746, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.13526766459670772, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.19574048970850305, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.19659417480078734, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.21441465846460353, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.2839537264809432, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.29611783243306405, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.30826279469148316, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3198968952267965, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.3347601624900518, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.34756737124688053, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3510013155567152, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.36601498790543624, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(oscar),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3824956372254877, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),oscar.number))", "score": -0.38408643189918495, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.38748899726975894, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.title))", "score": -0.09451320376683725, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.release_date),movie.title))", "score": -0.31024106201221, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.budget),movie.title))", "score": -0.3786971157460357, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.title))", "score": -0.38683016952563776, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.runtime))", "score": -0.4092641061215545, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.id),movie.title))", "score": -0.5012280529408599, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.budget))", "score": -0.528892356720462, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.532504015822974, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.release_date))", "score": -0.5448067372708465, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5757256586148287, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5778162617280032, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.5932714555957568, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6046357728330407, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6086988507383755, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.63901495074117, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.04709433838434052, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.4255037002997008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.46446353621650416, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr),movie.popularity),movie.popularity))", "score": -0.49469210989619206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.popularity),movie.popularity))", "score": -0.5069673755642725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr),movie.popularity),movie.popularity))", "score": -0.5129241632531102, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5423847058836251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.5425245805178761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.popularity),movie.popularity))", "score": -0.5744445165928069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.5814844164346795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.600328307528537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.6108673197108901, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr),movie.popularity),movie.popularity))", "score": -0.6113195081794379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,=,tr),movie.popularity),movie.popularity))", "score": -0.6342833160015289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.revenue))", "score": -0.6521704330079956, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.popularity))", "score": -0.17673054515034892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.release_date))", "score": -0.2797027024498675, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),person.birth_day))", "score": -0.31752302675158717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.revenue))", "score": -0.33205350665957667, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.popularity))", "score": -0.3864085990062449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.runtime))", "score": -0.41291519431979395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.popularity))", "score": -0.4778196531406138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.release_date))", "score": -0.4893807563057635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.vote_average))", "score": -0.5143218281737063, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),person.birth_day))", "score": -0.5272010806074832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.revenue))", "score": -0.5417315605154727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,27000000), movie.popularity),movie.popularity))", "score": -0.5748589289432857, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.runtime),movie.popularity))", "score": -0.5749844628444407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))", "score": -0.5807918104401324, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),person.birth_day))", "score": -0.6186121347418521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.1575836860451862, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.18508636030631692, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.25104914606714784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2598379958420535, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.26324653788914487, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.2785518203282786, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,sl),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.28090186317619886, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.2833249325539171, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.29074921215027566, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.29721834561029953, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.31082760681504784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3154077632832237, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_day))", "score": -0.32994287759271557, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),language.name,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33157055295402826, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,sl),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.34671774986745846, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.030083861311140936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.38778900179750053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.5068999115537736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.5749278893854353, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.5811189046289655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.5821693149555358, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6568431738924119, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,69), movie.revenue),movie.revenue))", "score": -0.6745731234477716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.death_day))", "score": -0.7284118762399885, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7728456488039228, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7826100221063825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.7996205893505248, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,69), movie.revenue),movie.revenue))", "score": -0.8083753195751342, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_average))", "score": -0.8235308757211897, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.popularity))", "score": -0.834267400779936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.17779503029721527, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18978798145077638, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2998498204559218, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3022971730682275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3177041782066574, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32057644936850815, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3701983464408252, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3854243170184445, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3910996044948368, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.year,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39814031174950776, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.vote_average,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3995803913403024, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.40092494123032163, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4011177490939489, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4024427867643409, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),language.name))", "score": -0.5035781645970877, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.13798822188192125, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.17020153383621403, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.24610496417175706, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.2838236538305368, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.28408005212374887, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.29245143073545005, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.40546971169700546, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.runtime))", "score": -0.42445521255999197, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),person.death_place,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.4289181086796842, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.44136818692558466, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.46441218394636785, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.46944606275909656, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign), movie.id),movie.runtime)", "score": -0.47185631498141584, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.4905149024779261, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.5188069937207603, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.014757314987946302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_count))", "score": -0.539709955046419, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_average))", "score": -0.6640380318858661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.6814034925118904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.7340933494851924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.revenue),movie.revenue))", "score": -0.7465669614612125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Released), movie.revenue),movie.revenue))", "score": -0.7688450060086325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.revenue))", "score": -0.7898178510949947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.revenue), movie.revenue))", "score": -0.8084494172944687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.revenue),movie.revenue))", "score": -0.8149584970669821, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.revenue))", "score": -0.8224288039491512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.834523051569704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.revenue))", "score": -0.8558081202791072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.8577255900599994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.revenue),movie.revenue))", "score": -0.8637177450000308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.045356087051914074, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.40231199248105326, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.41501303161065395, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4177583018368974, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.43045934096649807, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.46642668065539233, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.47054705801384195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.47534264933237796, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(person),movie.id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4778417273802285, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.47930324837292654, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))", "score": -0.47980542348473076, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4867085499476245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.49153172073686724, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5202013712466432, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.524321742582869, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.17180727795449358, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.19326616152301115, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.20540021306701023, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2671392320644672, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.2679738139259482, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.28705738378213264, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2925692078617315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.32892903278475, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.34374799511234966, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy),movie.title),movie.title))", "score": -0.3516964046749247, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.39008716664856674, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.3917990500387738, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.39815731300893176, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.4013451587531389, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name),movie.title))", "score": -0.41970932570653213, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.031490653520449996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,75000000), movie.budget),movie.budget))", "score": -0.5172737741377205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.revenue),movie.budget))", "score": -0.5412904885597527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6000787783333931, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,75000000), movie.budget),movie.budget))", "score": -0.6056107813492417, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6115571780885116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6296837852120107, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6353893470234264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6388944751589218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6468677467785449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6503728749140403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.movie_id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6521957896324347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,75000000), movie.budget),movie.budget))", "score": -0.7029105359688401, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.title))", "score": -0.7227582377381623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,75000000), movie.budget),movie.budget))", "score": -0.7336399459745735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.28627336882889814, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,cinematography), movie.release_date),movie.release_date))", "score": -0.29935949132570217, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.29941747302064325, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,cinematography),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.29955255452816226, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(person),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.30400499780631995, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3280357653626928, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3449395999260459, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.35551026606538577, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,cinematography),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(getData(person),movie.release_date,!=,15843608),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.3574318658856892, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,cinematography), movie.release_date),movie.release_date))", "score": -0.363685987620716, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.37241410062873886, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.3736725611691025, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3848946088598443, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.3905763957324556, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),None))", "score": -0.40019413002726667, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)", "score": -0.1888341964486796, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.2957372907110079, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,6.6), movie.id),movie.budget)", "score": -0.3598849161105565, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.3714123229732153, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,6.6), movie.id),movie.budget)", "score": -0.37929998682261157, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.41863214704745955, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,=,6.6), movie.id),movie.budget)", "score": -0.41878999473662115, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4292937295449176, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.433238845105886, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4332612868624518, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,!=,6.6), movie.id),movie.budget)", "score": -0.43555992965806745, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.44448407773062315, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),person.name,=,6.6), movie.id),movie.budget)", "score": -0.4481435833116969, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.455550903437959, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.45825229872057033, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.popularity)", "score": -0.03553313036715844, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity)", "score": -0.5176055432677148, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,42000000), movie.id),movie.popularity)", "score": -0.5407868418226672, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,42000000), movie.id),movie.popularity)", "score": -0.5529196150594675, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.6209017638121146, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,42000000), movie.id),movie.popularity)", "score": -0.669382220220971, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.7036245485901963, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.7423372818851266, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity))", "score": -0.7626643838157179, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.budget,>=,42000000),getData(movie),movie.revenue,movie.revenue), movie.id),movie.popularity)", "score": -0.788701217517647, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.release_date)", "score": -0.7956285947372755, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.revenue)", "score": -0.8339388947693448, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(filter(getData(movie),movie.budget,>,42000000),movie.popularity)", "score": -0.8365178412498454, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,>=,42000000),movie.popularity),movie.popularity))", "score": -0.8392916914599482, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,42000000), movie.id),movie.popularity)", "score": -0.8494950046678956, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.12796371714161678, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.2410927673530512, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.budget))", "score": -0.25909881618390224, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.2773949539885314, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,11),oscar.number),movie.budget))", "score": -0.2913529382457947, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11),movie.budget),movie.budget))", "score": -0.2990870292250174, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number),movie.budget))", "score": -0.29970851479287675, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,11),oscar.number),movie.budget))", "score": -0.32694554747882365, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),movie.runtime),movie.budget))", "score": -0.3555823424525618, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.year),movie.budget))", "score": -0.3624577806504746, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.budget))", "score": -0.38477399598903783, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,11),oscar.number),movie.budget))", "score": -0.3954221772921492, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.category),movie.budget))", "score": -0.3960166331603544, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.number,=,11),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.budget))", "score": -0.39654890821253297, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.42467353470201635, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.17646509949796985, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.19233358265194073, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),country.name,!=,Germany),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.2855488164312169, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.33497909205490234, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3608801766214193, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_company),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.37378357331634254, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3776973022837301, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.3787844977442587, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.3834164173530043, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.38667051261410085, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.3886393786661595, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.39666177103696376, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3981481653870882, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.4111082159910791, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.43018012711723563, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.0385495953305508, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.32728504836995853, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.4981187934039453, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5431386929984775, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5504900760100937, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.5700781738243289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.5755069758216891, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5946570681060465, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Middletown, Rhode Island),person.name), person.name))", "score": -0.6224731855327263, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),company.name,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6234186261935974, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6298395741541754, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.birth_place))", "score": -0.6506905785572599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6520239681049134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.birth_day),person.name))", "score": -0.653154703839391, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.661919710044458, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.11398696659308445, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.19736749994719938, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.21816153558163748, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.22629653365019192, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2512446907405988, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.2917654510972511, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2982551219707524, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.3127307955771791, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3154308300296625, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.34958708985123216, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.3952335112923887, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.40069057735129454, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.40920499886384337, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.43473841836662136, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.4432528343822216, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.3998715680101352, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.4315528937140107, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),language.name))", "score": -0.45645056932644373, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.4628062322857907, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.4690379576001445, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.4708178822232067, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),language.name))", "score": -0.48813189503031923, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.4944875579896662, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,!=,4.5),getData(spoken_language),oscar.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.49863680018963624, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,<,4.5), genre.name),genre.name))", "score": -0.49870298625396914, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.5007192833040199, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.5024992079270822, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.5037450346633707, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,>=,4.5),getData(spoken_language),oscar.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.5134011976956474, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),language.name))", "score": -0.5193852336020992, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.3542925683005773, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.4661764530814232, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),person.death_day)", "score": -0.47450083938083926, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),movie.revenue)", "score": -0.48212755258790285, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5337178169806717, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5377364180714911, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),person.death_day)", "score": -0.5410574674767412, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.5462229907381863, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.5502415918290056, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),movie.budget)", "score": -0.5682882717555336, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5820089746265199, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5886131301210745, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5900644287411748, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5926316484135401, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),person.death_day)", "score": -0.5936065876879005, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.07341424979676958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.3549728696089005, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.40838932011683937, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.4711218480806565, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), person.gender),movie.release_date))", "score": -0.5447885892208433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5466858968182009, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5473298622198385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5717071955355644, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.572351160937202, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5980106437212475, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5986545991550661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.623031959882294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.runtime))", "score": -0.6468387250642991, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,424),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.budget),movie.release_date))", "score": -0.7054660151828704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.7189402773038817, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.16297809205443084, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.title,=,writing), company.name),company.name))", "score": -0.2767203895125313, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.runtime,=,writing), company.name),company.name))", "score": -0.29486833662873607, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3019934143102577, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,writing),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.30231099147956414, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.movie_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3092999318791924, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing), company.name),company.name))", "score": -0.3314371086531907, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.person_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.33882855536166473, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34046774213476433, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34303575491416133, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.person_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34487467878077255, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.oscar_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3492559748739924, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3511982488805877, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), person.death_place),company.name))", "score": -0.37438498861110747, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3934244565889072, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.08464809540600982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.popularity))", "score": -0.2824100371071836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.release_date))", "score": -0.33808186124952044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.status))", "score": -0.4212510104844114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.release_date))", "score": -0.4460631258407375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.5229754102037987, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.popularity))", "score": -0.5358438029506942, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.id))", "score": -0.5446283932396909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.title))", "score": -0.5503459389874479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.original_language),movie.release_date))", "score": -0.568408752194955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.original_language))", "score": -0.5740972574421903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.status),movie.release_date))", "score": -0.5878497011581203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.6147187900351128, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.6309396467258921, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.popularity))", "score": -0.6438250675419113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.04316147781355539, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.43329187198855457, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.43641833818995834, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.4476288951151007, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.45488231832664067, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4574863955058589, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4606128617072627, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.gender))", "score": -0.4700330951382057, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.4704965996167335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.479076841843945, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.502653391878016, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.5057798533723942, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5334996435582713, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5346063080392123, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.death_place))", "score": -0.536907509820594, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.15162627349715868, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.20346066987100475, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.268028076119236, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1920-05-11), movie.id),movie.popularity)", "score": -0.2741228810938251, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.2903800543165496, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3117751730584536, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.3156839906165356, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.3198624724930821, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.32470189273433187, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.3422144506903957, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3462236346071191, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.35300236163610277, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.36751837734947745, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,person.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.3822305214154263, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<,1920-05-11),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.3983994960803855, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.13109040321114981, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.19278079804474457, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.2557842609656871, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.28598371557173224, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.2900895157712439, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.2936064188352947, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.3328897171451738, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.34441648549502474, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(production_company),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.35159752878798295, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.35468025856249474, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX), movie.id),movie.vote_average)", "score": -0.3602414633827757, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_count)", "score": -0.36534182047075076, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), company.name),movie.vote_average)", "score": -0.3694894333630712, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.37131852096602697, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,IMAX),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.id),movie.vote_average)", "score": -0.373458215993694, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.07251956989293465, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.15996558184791745, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19012498049553567, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.20217569210518266, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.32922254530829415, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.3355506083507226, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.33637459927808966, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),person.death_place))", "score": -0.38713641507817026, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.399155272934802, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4018606022491998, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.43604995287596765, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(language),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4444540833286197, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.44471741095295464, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4533377179456226, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.4657045259799875, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
