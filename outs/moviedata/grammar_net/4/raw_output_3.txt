{"index": 0, "beams": [{"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))", "score": -0.15716651548154914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4856), movie.original_language),movie.original_language))", "score": -0.2087274985433396, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.22880512942083442, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,4856), movie.original_language),movie.original_language))", "score": -0.30365738738782966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,4856), movie.original_language),movie.original_language))", "score": -0.3680304335475739, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,4856), movie.original_language),movie.original_language))", "score": -0.4605483459354218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5059535495775658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), language.name),movie.original_language))", "score": -0.5515303470731395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.568507930487257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5756748365697636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,null,4856), movie.original_language),movie.original_language))", "score": -0.5869804071307954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5883619783447623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,4856), movie.original_language),movie.original_language))", "score": -0.5907032332126864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,4856), language.name),movie.original_language))", "score": -0.6140847371199981, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,4856), movie.original_language),movie.original_language))", "score": -0.6352506205485042, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.10437813570024446, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.title))", "score": -0.19929316808702424, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.release_date))", "score": -0.3561620431137271, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.budget))", "score": -0.4707632882636972, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.budget))", "score": -0.4775496412185021, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.budget))", "score": -0.5035693271202035, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.budget))", "score": -0.5512814808753319, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.title))", "score": -0.565678320650477, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.title))", "score": -0.5724646736052819, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.runtime))", "score": -0.5967167930793948, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.title))", "score": -0.5984843595069833, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.revenue),movie.budget))", "score": -0.6203382535022683, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.6342700040263001, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.title))", "score": -0.6461965132621117, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.id),movie.budget))", "score": -0.6607782168430276, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.1226537247974493, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.1863761413297312, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.23993467866084178, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),movie.vote_count),movie.popularity))", "score": -0.25612189492717774, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.2731056772279244, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.revenue),movie.popularity))", "score": -0.29806645687585615, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_average),movie.popularity))", "score": -0.3219359541849743, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.32436334070984896, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.37201958334038204, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.release_date))", "score": -0.37637294815576133, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.3811952298062756, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.popularity))", "score": -0.38410350615427924, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue),movie.popularity))", "score": -0.39075743726577294, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.release_date))", "score": -0.39137772221547135, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.4207948254633313, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.05636050148499276, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.4046122956671665, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.runtime)", "score": -0.4223895539356975, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.runtime)", "score": -0.4686251860461442, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.id),movie.runtime)", "score": -0.5591193735749067, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.5742588273418257, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.5935459394045262, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime))", "score": -0.6359163405722938, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.643785800543005, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.6559196803505829, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6563762809908031, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.6578084215910467, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.660994970240061, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6756633853974916, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6802820823027617, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.2303646171246435, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name),movie.status))", "score": -0.25895355327728997, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.2768879450934943, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.28060432066958624, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.popularity),movie.status))", "score": -0.2832466518781925, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.28348741303114117, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.vote_average),movie.status))", "score": -0.322294266623202, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.3398651142406629, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender),movie.status))", "score": -0.345684883332049, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),person.gender),movie.status))", "score": -0.34891380166164143, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),person.gender),movie.status))", "score": -0.356178737494172, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.gender),movie.status))", "score": -0.3570266882092725, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.3798287315577989, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day),movie.status))", "score": -0.3836118178606873, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.popularity),movie.status))", "score": -0.40088372436411085, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.038616074643154946, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,5.1), movie.id),movie.runtime)", "score": -0.4397354295012025, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.runtime)", "score": -0.44741926063358783, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime)", "score": -0.5202666964157898, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,5.1),movie.runtime)", "score": -0.6541471202603991, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.vote_average),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.6690610616120015, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,5.1), movie.id),movie.runtime)", "score": -0.704007432702157, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,5.1), movie.id),movie.runtime)", "score": -0.7760687961357664, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.vote_average)", "score": -0.7800100011643624, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.id)", "score": -0.8044393941291105, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,5.1), movie.id),movie.runtime)", "score": -0.8313956084214125, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime))", "score": -0.8616169287706725, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<,5.1), movie.id),movie.runtime)", "score": -0.8629043762845193, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.release_date)", "score": -0.8651986653910041, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,5.1),movie.runtime)", "score": -0.8945786016195784, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.1476969174136764, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.1566838320416035, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Adventure),movie.revenue),movie.vote_count))", "score": -0.19778370958212044, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,<,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.2642132908767528, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.3456013868263647, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,!=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.3577238140051049, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.3653053993692255, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.37429231399715257, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Adventure),movie.revenue),movie.vote_count))", "score": -0.42007308980946406, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.432665145597641, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,<=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.43903755447974235, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.4416520649325937, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_count),movie.vote_count))", "score": -0.4459663517911786, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,<,Adventure),movie.revenue),movie.vote_count))", "score": -0.44899634660764276, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Adventure),movie.vote_count),movie.vote_count))", "score": -0.4515588762564291, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.08581133945953082, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.1617196954175597, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.28390250513901655, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.29135647036880846, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.29670643480345826, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.budget),movie.title))", "score": -0.33819938694922064, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.3606225159969977, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3738206866107342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.3861236924577681, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3918415639717438, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.budget))", "score": -0.40286423255530895, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.41655619055810184, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.4321928797127197, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.44098971606839443, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.44642795347159503, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.vote_average))", "score": -0.2093805549229728, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.vote_average))", "score": -0.2750018192018615, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.vote_average))", "score": -0.27517656511918176, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.popularity))", "score": -0.34115515924349893, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.3745083091343986, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.popularity))", "score": -0.40677642352238763, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.popularity))", "score": -0.4069511694397079, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.revenue))", "score": -0.4401295734132873, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.revenue))", "score": -0.44030431933060754, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.vote_average))", "score": -0.6056272787536727, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.title),movie.vote_average))", "score": -0.6058792275871383, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,66787908), movie.popularity),movie.vote_average))", "score": -0.6062162350426661, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.status),movie.vote_average))", "score": -0.6424669427360641, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.7323513894634474, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.7347718505584493, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))", "score": -0.04756482403172413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,2159280), movie.revenue),movie.revenue))", "score": -0.27613146688236156, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2159280), movie.revenue),movie.revenue))", "score": -0.43364287997974316, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2159280), movie.revenue),movie.revenue))", "score": -0.5412594237495796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,2159280), movie.revenue),movie.revenue))", "score": -0.5675806947183446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,2159280), movie.revenue),movie.revenue))", "score": -0.5844373860527412, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,2159280), movie.revenue),movie.revenue))", "score": -0.5958210773897008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.vote_count))", "score": -0.6012445934247808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_count),movie.revenue))", "score": -0.6217149660587893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2159280), movie.revenue),movie.revenue))", "score": -0.6785655565690831, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2159280), movie.revenue),movie.revenue))", "score": -0.738362804906501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7562170782257454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_average),movie.revenue))", "score": -0.7687729165554629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.budget))", "score": -0.769099438948615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,2159280), movie.revenue),movie.revenue))", "score": -0.796147337568982, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.2765030849259347, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.28660277905873954, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4346145541495612, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4540816955792182, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4575421678860916, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4770093093157486, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.48094373590529116, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.49824942890623775, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5004108773349482, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.506415857700631, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5082964587291996, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5149032816517407, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5177166480018169, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.53070346894674, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5312241501316523, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.14110639817954507, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.16307882346154656, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.3834740383172175, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.4299971213185927, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.4519695466005942, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.5237180553449434, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5818915925992769, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.release_date))", "score": -0.6089157424939913, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.656319860376243, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.release_date),movie.popularity))", "score": -0.667292301877751, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.6673564774537226, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6723647614562651, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.674645692910417, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6871189185039839, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.release_date),movie.release_date))", "score": -0.6892647271597525, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.popularity))", "score": -0.30974991300172405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.popularity))", "score": -0.3098972556836088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.birth_day))", "score": -0.33382463880843716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.birth_day))", "score": -0.3339719814903219, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.popularity))", "score": -0.4341178653485258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.gender))", "score": -0.4402546478158911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.gender))", "score": -0.44040199049777584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),movie.popularity))", "score": -0.4457479534394224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),person.birth_day))", "score": -0.4581925911552389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),person.birth_day))", "score": -0.4698226792461355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),movie.popularity))", "score": -0.49830008723802166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),person.birth_day))", "score": -0.5223748130447348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.release_date))", "score": -0.5323771280891378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.release_date))", "score": -0.5325244707710226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.death_place),movie.popularity))", "score": -0.5512557444817503, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.23089359864982034, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.2916017490052007, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3248118988989737, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3328721607815753, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))", "score": -0.35381649835142626, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),language.name))", "score": -0.35431411984428035, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.36419064458747114, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.37074356846755774, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.38552004925435407, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),movie.vote_count),movie.original_language))", "score": -0.3922003795804072, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.3935803111369556, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),language.name))", "score": -0.41502227019966065, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),movie.vote_count),movie.original_language))", "score": -0.4211004623072048, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.42489879494285143, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.43145172436061524, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.02987228482743376, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.5824915313605743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.release_date))", "score": -0.6040412831098365, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.release_date),movie.popularity))", "score": -0.6558191765543597, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.6581320586592483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.id),movie.popularity)", "score": -0.6751985500905041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7008997344855743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7048262777716445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7129591250304657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1995-07-07), movie.popularity),movie.popularity))", "score": -0.725636556137033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7544796699112339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.status))", "score": -0.7702675509244727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7718777799491363, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1995-07-07),movie.popularity), movie.popularity))", "score": -0.7849963293992914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),crew.movie_id,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.8428323244188505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.35739630689357244, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3602485944929041, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3844388209103625, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.38729110850969417, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4005048785611279, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.4059580371254332, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.40689545849539244, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4094316435720661, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.40974774609472403, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.4148848021363714, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.4241595799286972, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4412559326573808, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.444419103122496, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.44670909689280625, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.4498722616868014, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Foreign), movie.budget),movie.budget))", "score": -0.44922498108644504, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,Foreign), movie.budget),movie.budget))", "score": -0.5104023093153955, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Foreign), movie.budget),movie.budget))", "score": -0.5134142661263468, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Foreign),movie.revenue),movie.budget))", "score": -0.5149699028333998, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Foreign), movie.budget),movie.budget))", "score": -0.5224686512519838, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,Foreign),movie.revenue),movie.budget))", "score": -0.5544900025925017, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,!=,Foreign),movie.revenue),movie.budget))", "score": -0.5645404483875609, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,Foreign), movie.budget),movie.budget))", "score": -0.574352117793751, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.budget),movie.budget))", "score": -0.5836459534039022, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Foreign), movie.budget),movie.budget))", "score": -0.5866579102148535, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,!=,Foreign),movie.revenue),movie.budget))", "score": -0.6040605635134852, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,!=,Foreign),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.6359153879338733, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,!=,Foreign),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.revenue),movie.budget))", "score": -0.6425068349420106, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,!=,Foreign),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.revenue),movie.budget))", "score": -0.6618896264731592, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.vote_average,!=,Foreign),merge(getData(cast),getData(movie),has_genre.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.revenue),movie.budget))", "score": -0.675076046328482, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.15611952791484873, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.23372646718356557, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.24337503012383901, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2782804276395797, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.27998032618246044, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.28940994193033215, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.29693717802045827, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3014022986607579, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3031021972036386, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3170307754444731, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3187306919848046, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.32098196939255585, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.name))", "score": -0.3259722848219243, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))", "score": -0.3312026159160853, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,2.3),getData(oscar_winner),movie.id,cast.movie_id),getData(person),cast.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.3473544970215645, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.12145225373794656, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.18088981819046468, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.21943792248469862, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.22740600419328685, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.23941857804313463, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.24918380676274338, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.3027964691384313, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3065475722710587, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.31672340290113826, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3253916729400389, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.33406431642437173, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.category))", "score": -0.33595198784393454, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3465970323190026, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))", "score": -0.3470053321132463, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.34716947550949545, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.444373202473358, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.45338559927650673, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.birth_day))", "score": -0.47084549665073483, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.4793773168404769, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.name))", "score": -0.4798578934538836, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.494705704683795, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.5003192605806491, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.5016567388201609, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5093316573837979, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.birth_day),person.name))", "score": -0.5131031042204415, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.5167453733072052, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.516985126663479, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.death_day))", "score": -0.519299790812719, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.5202290662019479, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5257577701103539, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.16490235809191273, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.1982496253023209, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.26414179017385975, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.27350430993808594, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.281190667858812, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.2974890573842679, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.status))", "score": -0.31227467755344984, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.31453793506922023, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.3309774257162605, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.36356923581919026, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.36432469292666864, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.36539838096842375, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Joanna Foley),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.3722729262234655, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.3727437420200329, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.37539916732045586, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.16014658432589265, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.release_date),movie.release_date))", "score": -0.1636788864099612, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.32218703928028747, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.33256618187689774, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.33801092961564155, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.34439014154711345, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.34652318113822295, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3509287117680001, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.popularity),movie.release_date))", "score": -0.3525884295786773, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.number),movie.release_date))", "score": -0.3609733372180651, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3773872963180308, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.3806687367942412, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.38116760021502993, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,>,2012),oscar.year),movie.release_date))", "score": -0.3887814935633796, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.release_date),movie.budget)", "score": -0.4195350076366422, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.04185138708271552, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_count),movie.vote_count))", "score": -0.24045358849980403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.title))", "score": -0.6019519418041455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,258022233), movie.vote_count),movie.vote_count))", "score": -0.6219245220563607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_average),movie.vote_count))", "score": -0.6229066811065422, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.movie_id),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6283700584721872, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.632093654755318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.632585487284814, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.person_id),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6380225823744916, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.revenue))", "score": -0.6449375003139721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_average))", "score": -0.6452299207012402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6659583663131343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.revenue),movie.vote_count))", "score": -0.6727322898368584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,258022233),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue), movie.vote_count),movie.vote_count))", "score": -0.694495771209258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,258022233),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue), movie.vote_count),movie.vote_count))", "score": -0.6970843163115764, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22093671460970385, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.2967961192563076, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30623193448065694, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3368947506179503, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.3526846396155391, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.35506573512874184, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,oscar_winner.person_id), country.name),country.name))", "score": -0.3564128909022195, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.36077705679715577, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.3701285571137955, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.3793960026187455, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),oscar_winner.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.3823840816578992, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3884829178235507, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.movie_id,country.iso_3166_1), country.name),country.name))", "score": -0.391154895633619, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.3964340751880223, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.death_day,<=,1934-03-28), country.name),country.name))", "score": -0.40091166529178646, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.24213689240881778, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.25017501277163506, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.2538714829326967, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.26190960329551394, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.26666158660269873, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,=,???), genre.name),genre.name))", "score": -0.3017843940328104, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,???),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30294152795568235, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3032267882111386, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.30513244147908897, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3077789910460159, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.3082504647333164, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3082569977761219, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,genre.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.3131705765501795, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,<,???), genre.name),genre.name))", "score": -0.3137289728758964, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(language),language.name,=,???),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.3397880126048012, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.14644131567457722, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.1505336502358862, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.23528109380921125, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.24040503117339113, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,549),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.31983785939498954, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), movie.vote_count),keyword.name))", "score": -0.342973956555209, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), movie.vote_count),keyword.name))", "score": -0.347066291116518, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.36977144036065346, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.vote_count))", "score": -0.3701064581413351, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),movie.vote_count))", "score": -0.37419879270264406, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), oscar.number),keyword.name))", "score": -0.3803905082995134, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), oscar.number),keyword.name))", "score": -0.38448284286082235, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,movie.vote_count),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3857130633153372, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.3875603543348244, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,movie.vote_count),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.38980538790882735, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.2110348859698855, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.2363416931016493, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.2682536592309676, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fame),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2714668201402183, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.28108868850803553, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2816927289615246, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Fame),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30230206885613936, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.3103319165701899, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3121775486969736, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.31946553055291677, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.31997818098037545, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.32561661842753054, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3329046002834737, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3393424468020239, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.35278151653258083, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.055170078849558116, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,119),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.20334779651335386, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.20505867565570773, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,!=,119), company.name),company.name))", "score": -0.22717354507834772, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,119), company.name),company.name))", "score": -0.23866723203471452, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.death_place))", "score": -0.2925588362812483, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3370040894808418, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3537538962695885, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3823084959619857, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.38793369569465813, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.birth_place))", "score": -0.39915361052411846, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.40960292217233824, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.41652384570613815, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4193875411507243, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.4197368187313043, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.15843715446681017, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.24406339901179308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.379503979558649, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4148365400978946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.41664399134606356, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.43898058352444874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.44497590440005297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4651302241036319, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4692913385612479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.48186438458651537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5004627846428775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5022702358910465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.homepage,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.545602395410242, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5473340370008373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5512321733185672, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.0694103589594473, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.14578185761954243, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ko),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18794425862275185, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.29313220395233264, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.3272196675289395, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,ko), genre.name),genre.name))", "score": -0.3387031610393471, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3545651855436629, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3599657722452389, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36404688873590335, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,<,ko), genre.name),genre.name))", "score": -0.37275982684472103, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.37489073996780087, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,!=,ko), genre.name),genre.name))", "score": -0.37493606751666253, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3991165950503062, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.40217574149290997, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.41207338278353295, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_average))", "score": -0.07758191709581297, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),movie.vote_average))", "score": -0.3090545173472492, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),oscar.year))", "score": -0.38936503433797043, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,621), movie.vote_average),movie.vote_average))", "score": -0.45284240243199747, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.revenue),movie.vote_average))", "score": -0.5124753351992695, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.popularity),movie.vote_average))", "score": -0.563401454288396, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,621), movie.vote_average),movie.vote_average))", "score": -0.5722853314800886, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), person.name),movie.vote_average))", "score": -0.6116849120444385, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,621), movie.vote_average),movie.vote_average))", "score": -0.6143298327660887, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),oscar.year))", "score": -0.6208376345894067, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.popularity))", "score": -0.6417637636623112, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,621),movie.vote_average), movie.vote_average))", "score": -0.6601665541820694, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.revenue))", "score": -0.6658229997119633, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_average))", "score": -0.6698572572058765, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,621),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,language.iso_639_1),oscar.id,oscar_nominee.oscar_id), movie.vote_average),movie.vote_average))", "score": -0.8522212400078449, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.24667705687703825, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.26891732083398506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.34475954415619325, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.35156518366494083, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.365094178218535, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.3669998081131401, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3684280913440474, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.death_day),person.name))", "score": -0.37687544904305603, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.38733444217548185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.39066835530099425, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3940167704954545, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.death_day))", "score": -0.3972831206370028, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.death_day),person.name))", "score": -0.3991157174301446, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.442733397478801, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.44581473496718105, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.028172564523518344, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_count)", "score": -0.6237929102910607, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.revenue)", "score": -0.6621106550472409, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6645397353976696, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6753051002382006, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6921016332801536, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6928465173283378, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,Illuminata),movie.vote_average),movie.vote_average))", "score": -0.7012896619562525, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7057301640626433, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7156822267604441, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average))", "score": -0.717008618368709, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.7175160751053773, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7196599485310775, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7223282695303914, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.7340281941357559, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.08937419293215498, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.22051360917976126, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.38690580701222643, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.42900390637805685, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.5180452232598327, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.5255692777573131, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.5573355461820029, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.5601433226256631, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1985-12-11), person.death_place),person.death_place))", "score": -0.5665400204597972, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.5919017238047672, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.gender))", "score": -0.6503144623129629, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.6567086940049194, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1985-12-11), person.death_place),person.death_place))", "score": -0.67267345165601, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), movie.release_date),person.death_place))", "score": -0.6766893173917197, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.6884749624296091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.03331919179789291, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.5024531824993786, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.511468560114406, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.5206739301972297, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7152082112245168, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7297992333874576, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.7695009315949374, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.7802327109278533, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7818810967097186, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.id)", "score": -0.8085734157694608, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.vote_average)", "score": -0.8146734600481272, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.8192221313727264, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.8207528041863598, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.release_date)", "score": -0.8418415730750989, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,=,7.2), movie.id),movie.runtime)", "score": -0.8505278682980713, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.32440050042644797, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3419384656909416, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.3472052205215236, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.34795374198762535, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.34844791753579946, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.35955776784064536, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.36234332743506986, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3647431857860172, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3702876648661136, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3742511214495153, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.3760881963881153, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.38103545821146073, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(country),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3863195136192197, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.38971501846655615, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.39055653644055977, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.148650520175579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.26875939941759003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_count,<=,1045),movie.vote_average),movie.vote_average))", "score": -0.41501170297851786, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.vote_average),movie.vote_average))", "score": -0.5718995776696829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.vote_average),movie.vote_average))", "score": -0.5964316275640158, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.status),movie.vote_average))", "score": -0.6098601209669141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.624821290068212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.id),movie.vote_average)", "score": -0.6300222653971339, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.popularity),movie.vote_average))", "score": -0.6378745424299268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.7042012260235979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.708570066419657, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.id),movie.vote_average)", "score": -0.7166055329000871, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.oscar_id),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.7304839503036185, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.7541151390614687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.vote_count,<=,1045),getData(cast),movie.id,oscar_nominee.movie_id),movie.vote_average),movie.vote_average))", "score": -0.7639078051727899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.08617055692185106, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.13922871638995354, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2350072021939411, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2765013595480797, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.3033831448427836, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.3082575300650698, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.31103786286433804, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3371366438776104, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.34138655199339046, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.35264445019177815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_day))", "score": -0.35340291011443103, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3577177020275598, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.death_day,!=,380000000),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.35852594786959996, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.3613156895331723, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.37779819713327895, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.2304235956468997, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.26337230146637136, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2658597585780488, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),oscar.year,>=,3.5), language.name),language.name))", "score": -0.2990619477840198, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.29914143311002656, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.30807301111450824, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.3166916034822539, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.31744758086423563, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.32252017703904146, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.32358166557801205, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,>=,3.5), language.name),language.name))", "score": -0.33887906042668225, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.34790806214082803, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,>=,3.5), language.name),language.name))", "score": -0.3542249131822604, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.3639233484430411, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.36734784670551324, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.058119643063037074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.17687542694875447, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,185), movie.vote_count),movie.vote_count))", "score": -0.5602685506946727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,185), movie.vote_count),movie.vote_count))", "score": -0.5873866971141979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,185), movie.vote_count),movie.vote_count))", "score": -0.6629370744831249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.revenue),movie.vote_count))", "score": -0.6828356797832384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.title))", "score": -0.7168357661485061, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_average),movie.vote_count))", "score": -0.7172269041675463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.revenue))", "score": -0.7313224962472304, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_average))", "score": -0.7606153777360305, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,185), movie.vote_count),movie.vote_count))", "score": -0.7619027282835305, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.revenue),movie.vote_count))", "score": -0.8015914636689558, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,185), movie.vote_count),movie.vote_count))", "score": -0.8272692855007335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.title))", "score": -0.8355915500342235, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_average),movie.vote_count))", "score": -0.8359826880532637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.13023636344507106, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.13212920264442843, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13840936202772053, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.17039611150576975, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.28869585852104396, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.367676652441473, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,<=,64572262),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3763474749619598, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262),movie.id,company.id), company.name),company.name))", "score": -0.39707859994787026, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.40175522123550417, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,64572262), company.name),company.name))", "score": -0.4055480544336511, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,64572262), company.name),company.name))", "score": -0.40665924030253064, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262),movie.id,company.id), company.name),company.name))", "score": -0.41709790763994664, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4205510498358019, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.4323741927289206, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),person.death_place))", "score": -0.4377459366012429, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.15155586665433857, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.16500756773564604, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.1800001857860504, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.22015346496158467, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2219292909464438, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.25289270343228576, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2976094828260471, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.3020161255897386, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.31159435612557895, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3339358482469011, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.name))", "score": -0.3425893082796228, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,127869379),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.34928022706580975, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.360931161319493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.3785914223357298, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,crew.movie_id),person.birth_day,>,f),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.4420040671866568, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.08583594099698941, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.1892205764541062, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.2335143672575886, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.name))", "score": -0.2565762524335667, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2006), person.birth_day),person.birth_day))", "score": -0.283991630198172, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.3035935388191719, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.32221565878324127, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.324660181803673, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.gender))", "score": -0.33315135853204275, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.37472184557027455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.380655079454681, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.3829432726677898, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.39238141303476404, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.gender))", "score": -0.41450257002690455, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.movie_id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.4269932032568058, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.10486891238542739, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.16594674556108657, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.4383840295666461, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.4599977864563698, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.4755237196036353, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5015669589847601, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5139319142724206, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.5164637890017496, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5168515452207686, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.521075619632029, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.523931062327541, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.53353236766541, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5387066390539305, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.5523643535321084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5566958434281473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.16136861730742053, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.19594527099816322, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.24571966583993002, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2970115532742417, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3070548317319269, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(getData(oscar_nominee),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3094354662662765, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.3139348134555079, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),getData(person),cast.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3334421837587882, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(filter(getData(oscar_nominee),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.34947314235859855, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(filter(getData(oscar_nominee),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.3762467908758002, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.3869021389194023, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,<,41), person.death_place),person.death_place))", "score": -0.39524705959986095, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(person),cast.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.39588960822312996, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,41), person.death_place),person.death_place))", "score": -0.40389224956945025, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.43824144841551194, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.17266610482923314, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.19175368156444778, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.2172797081654445, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2210094066767802, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.26121777361557663, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2635828667992573, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2803868797913483, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.3094914961676424, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_average),movie.vote_average))", "score": -0.3159025630342938, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.3245570797533592, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count))", "score": -0.3251732249724779, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.33511853136716024, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_count),movie.vote_average))", "score": -0.36874894843735445, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_count))", "score": -0.3704573693669616, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.vote_average))", "score": -0.3757336607588208, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.033848500133899506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,72), movie.status),movie.status))", "score": -0.36218538253888255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.vote_average))", "score": -0.49896316814556485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.popularity),movie.status))", "score": -0.5172959452247596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,72), movie.status),movie.status))", "score": -0.5649489101706422, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.5890749513273477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.vote_average),movie.status))", "score": -0.615540820894239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), person.gender),movie.status))", "score": -0.6330188100910163, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.popularity))", "score": -0.6353238134397543, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,72), movie.status),movie.status))", "score": -0.6615382370291627, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,72), movie.status),movie.status))", "score": -0.6964925464926637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,72), movie.status),movie.status))", "score": -0.7049717840491212, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,72), movie.status),movie.status))", "score": -0.7440176145391888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.runtime))", "score": -0.7564051060689962, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<,72),movie.status), movie.status))", "score": -0.7597245269644191, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.044501832580863265, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.28625798121720436, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,2.6), movie.popularity),movie.popularity))", "score": -0.41835185781746986, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.revenue))", "score": -0.5218151690314698, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.6), movie.popularity),movie.popularity))", "score": -0.5504255582454789, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.5767648117071076, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.6), movie.popularity),movie.popularity))", "score": -0.6670707155826676, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.6), movie.popularity),movie.popularity))", "score": -0.6686882664325822, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.6), movie.popularity),movie.popularity))", "score": -0.6757006764055404, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.vote_average))", "score": -0.7122441114734102, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.revenue),movie.popularity))", "score": -0.7567023506962869, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,null,2.6), movie.popularity),movie.popularity))", "score": -0.7578842331531632, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.7626179502731247, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.revenue))", "score": -0.763571317667811, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.id),movie.popularity))", "score": -0.8208087554776284, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.18594598155489647, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.year),movie.status))", "score": -0.2817797333228667, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.number),movie.status))", "score": -0.31104680013015995, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count),movie.status))", "score": -0.3421207843405192, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))", "score": -0.34441922541025505, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),person.death_day),movie.status))", "score": -0.3477198323279066, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.3585353987077664, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),movie.vote_count,>,46),movie.vote_count),movie.status))", "score": -0.36633568326071503, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.revenue),movie.status))", "score": -0.38129204884485685, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.status))", "score": -0.3820240986809325, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,>,46), movie.status),movie.status))", "score": -0.39247774571819605, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.3972951339829822, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,46),movie.vote_count),movie.status))", "score": -0.40577322367899205, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.40627914586437325, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.40736920438735014, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.19346465534700225, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.23218701386905002, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.25022970524793015, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.runtime),movie.runtime))", "score": -0.26390384764234365, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.id),movie.runtime)", "score": -0.3457499956312457, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.380416694618507, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.38113069170058683, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.runtime),movie.runtime)", "score": -0.38887518477290633, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.40438473193566277, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name),movie.runtime))", "score": -0.4173033508310403, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name),movie.runtime))", "score": -0.4186202695117739, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.4254864893396911, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.43172262972290826, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.runtime))", "score": -0.43682044653882657, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(getData(person),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.45862557597140335, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.05417783833575849, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.vote_count)", "score": -0.3355246290886877, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.vote_count)", "score": -0.5907145014229326, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.6072638860751237, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count)", "score": -0.617673018975632, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.6178957125925864, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.6262207901543854, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count)", "score": -0.6752819832851686, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.7060644331333846, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Rumored),movie.vote_count)", "score": -0.7074053709364126, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.724855930957105, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Rumored), movie.id),movie.vote_count)", "score": -0.7615884108628678, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),getData(movie),movie.id,movie.vote_average), movie.id),movie.vote_count)", "score": -0.7629790620375255, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Rumored), movie.id),movie.vote_count)", "score": -0.803309007437172, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.budget)", "score": -0.8136654837727633, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.15046694640306513, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.16581098864537983, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,=,Rumored), keyword.name),keyword.name))", "score": -0.17429111450201848, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2048759128950946, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.20769899201725278, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2158046826865397, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2584284929596789, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.32023283530436447, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3773128217347005, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3853759200140142, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.39921116568037746, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.4234407156451145, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.44537431868780786, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.4497004713265438, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),person.name))", "score": -0.46454069904503614, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.057671844253491145, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.4026516810481553, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.4339492397775757, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),language.name))", "score": -0.47190522890741704, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,movie.vote_count),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.6168705509520463, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.vote_average))", "score": -0.6216215167587507, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), spoken_language.iso_639_1),movie.original_language))", "score": -0.6279498415460694, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),movie.id,language.iso_639_1),movie.id,movie.vote_count),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.6344992666295824, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.status),movie.original_language))", "score": -0.6348493175973999, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.title))", "score": -0.6464286122863996, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),spoken_language.iso_639_1))", "score": -0.6892982993667829, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.status))", "score": -0.7047437105720746, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,950), movie.original_language),movie.original_language))", "score": -0.7088981529159355, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.vote_average),movie.original_language))", "score": -0.7118963079919922, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language)", "score": -0.7565812071303981, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.0399157734001832, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,30127963),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.20862743438841577, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.24810841390813762, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.32057005828327023, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3599912727315688, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3744501446202774, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,30127963), country.name),country.name))", "score": -0.3773371364579633, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,30127963), country.name),country.name))", "score": -0.3847524533238376, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.39844164234960827, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),production_country.iso_3166_1))", "score": -0.39925342262745234, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),movie.original_language))", "score": -0.4063369357220638, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.42120268275715156, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.4229091098060787, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,30127963), country.name),country.name))", "score": -0.425664386891835, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.42942844255183565, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.17270638540510697, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.1736406054349433, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.24847388370216114, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.2674450482241677, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.2838025532774738, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.3005277455210593, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.budget))", "score": -0.3111403335167057, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.3385560752592029, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.396324941761487, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.title))", "score": -0.41133160651721373, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.41428407885356433, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,!=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.41631548605818625, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.4328676146723843, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.runtime),movie.budget))", "score": -0.4399061064505995, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.4493349951122758, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.popularity))", "score": -0.03778299276746111, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))", "score": -0.26770350669539766, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.revenue))", "score": -0.6183040925025125, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.revenue),movie.popularity))", "score": -0.6278841423991253, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.vote_average))", "score": -0.6768464036940713, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.vote_average),movie.popularity))", "score": -0.682987027168565, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,347325802), movie.popularity),movie.popularity))", "score": -0.6847871745194425, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,347325802), movie.popularity),movie.popularity))", "score": -0.6941337788666715, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<,347325802), movie.popularity),movie.popularity))", "score": -0.7069129551018705, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,347325802), movie.popularity),movie.popularity))", "score": -0.7224046621195157, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,347325802), movie.popularity),movie.popularity))", "score": -0.7259906733597745, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,347325802), movie.popularity),movie.popularity))", "score": -0.7544989619127591, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,!=,347325802), movie.popularity),movie.popularity))", "score": -0.8050375017992337, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.revenue))", "score": -0.8482246064304491, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.revenue),movie.popularity))", "score": -0.8578046563270618, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.04917389807354848, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)", "score": -0.3553452279231104, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,Show Me), movie.id),movie.revenue)", "score": -0.5611114903626941, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6348152555856827, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6559118224574203, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6693962035743027, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6755959265396859, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6781866121729119, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6883070390850374, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),has_genre.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6894658712348539, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6904927010102632, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6931450699993285, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.revenue),movie.revenue)", "score": -0.7008433447400441, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,Show Me), movie.id),movie.revenue)", "score": -0.7082769823272557, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.budget)", "score": -0.7267099835962854, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.18452008010705684, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.1955378102571881, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.23173086006673474, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.24451405174454652, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.24570835240010164, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.26064012515997376, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.2830753366059686, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.sub_category))", "score": -0.2917248317042244, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.3108106673028873, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.32897397150539354, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.33028611656564655, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.category))", "score": -0.33297919301438555, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.3430693082434583, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.sub_category))", "score": -0.3529721745466346, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3588521742060077, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.35535333674182373, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.3578379588179901, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.3700198969389963, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.3867571554333839, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.40636844680698186, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.41828935461079125, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.4210710344329605, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.4235556565091268, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.43502661310517887, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.4509330804921755, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), movie.runtime),oscar.number)", "score": -0.4556427316904297, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), movie.runtime),oscar.number)", "score": -0.45812735376659597, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.year)", "score": -0.46391276540064097, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.year)", "score": -0.46461616577220965, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.number)", "score": -0.46871211186776657, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.20422288976368852, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.21975574636833833, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.23706640112802072, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2525992577326705, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.26058160143027015, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.27566076807279954, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.2823681324734881, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2911936246774493, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3085042794371317, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3240371360417815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.36202335971093846, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.3656740791589334, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.37755620742069435, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.37904032262026904, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.38632076537881027, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.09222474135997881, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.23849052315776098, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.24554134466657945, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.26057947584034474, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.26145733176750524, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.2764481715369915, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.3074688040469588, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3190831855738029, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3269111974623139, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.death_day,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.3939835484003356, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4095700012650906, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),oscar.number,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41234309659199103, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.revenue)", "score": -0.4148045303086268, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.revenue),movie.vote_count)", "score": -0.41677548472463105, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41915315542988185, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.05388565843660652, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity)", "score": -0.3021853560064933, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.id),movie.popularity)", "score": -0.5032394922456924, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2000-08-21), movie.id),movie.popularity)", "score": -0.581661308900084, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.5976311297909981, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6291467147843, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,movie.id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6609081679291915, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6735303992772436, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.release_date),movie.popularity)", "score": -0.6764183741935953, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,2000-08-21),movie.popularity)", "score": -0.7113097490821729, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.popularity),movie.popularity)", "score": -0.7515391898155792, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity)", "score": -0.7523530618594167, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,2000-08-21), movie.id),movie.popularity)", "score": -0.7579603987690334, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,<,2000-08-21), movie.id),movie.popularity)", "score": -0.7597643993107398, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity))", "score": -0.7851790749846259, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.20755662854935508, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.2517496579530416, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.popularity))", "score": -0.3201027632894693, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.release_date))", "score": -0.3642957926931558, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.status))", "score": -0.43037135239865165, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.48569353942002635, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5091712725552497, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.5298865688237129, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.status))", "score": -0.5429174871387659, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.5533643019589363, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.id))", "score": -0.5599278294685064, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5634246113913832, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.title))", "score": -0.5696145379188238, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.status),movie.popularity))", "score": -0.5730081022920785, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.release_date), movie.id))", "score": -0.5735682751910645, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.04064877257664743, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.28937782190375805, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.3286559091641301, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_average)", "score": -0.45793195484958726, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.4865959757685991, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.5058181829956723, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5176606844332444, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5258740630289712, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.5450962702560445, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5485768549451043, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.vote_average)", "score": -0.5549729042205985, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.original_language,=,ar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.runtime)", "score": -0.555780610806447, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5667939606554877, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5686840936402063, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5714719794267772, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.1784759938091156, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.birth_day))", "score": -0.2991759955257294, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.gender))", "score": -0.3483755841225502, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.birth_day))", "score": -0.35628535145224305, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.name))", "score": -0.40574249171913834, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.birth_day))", "score": -0.4235606390357134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.gender))", "score": -0.469075585839164, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.gender))", "score": -0.5261849417656776, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.name))", "score": -0.5264424934357521, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_place))", "score": -0.5342052831620094, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,f), person.birth_day),person.birth_day))", "score": -0.5442606407523272, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.5739383763939259, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.5829942292839405, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.name))", "score": -0.5835518493622658, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.gender))", "score": -0.593460229349148, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.024488680690410547, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.1), movie.revenue),movie.revenue))", "score": -0.42519087639811914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.popularity),movie.revenue))", "score": -0.5745828635263024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.6344388071811409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_average))", "score": -0.6602586283552228, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_count))", "score": -0.6616542711126385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.popularity))", "score": -0.6847427263128338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.revenue),movie.revenue))", "score": -0.7202222153282491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.1), movie.revenue),movie.revenue))", "score": -0.7622610136604635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.vote_average),movie.revenue))", "score": -0.8095747119950829, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.budget))", "score": -0.8174940123426495, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),cast.person_id))", "score": -0.8177007808553753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,>,6.1),movie.revenue), movie.revenue))", "score": -0.8425682420347584, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.budget),movie.revenue))", "score": -0.8436221963929711, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.id),movie.revenue)", "score": -0.8460058377692661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.24581983874352553, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2636372710054277, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2705553636188618, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.28639103746374267, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29004070027197987, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29042431818657755, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2946896982287932, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.29603195268034327, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(filter(getData(movie),keyword.name,=,killer robot),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.30284818505179023, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.30764575098208197, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_nominee),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.31502477665743034, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_winner),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3165743913002661, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.35286294050303924, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.death_place),person.birth_place))", "score": -0.37139325207742935, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_nominee),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,None,killer robot), None),None))", "score": -0.3739806692454196, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1284964189021047, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1623047197094525, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.1863100385879712, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.2202901324712144, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.239416601157283, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.2418349271316348, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.24486918347645945, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.2972208569058, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.32179990791104507, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.332615236878529, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,company.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3371554506011973, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.3465357196042917, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3469016076009809, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.36167545120013456, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.36531292672298654, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_place),person.death_place))", "score": -0.17681092247948982, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_place),person.death_place))", "score": -0.2230865381716285, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.birth_place),person.death_place))", "score": -0.23373795524821617, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.birth_place),person.death_place))", "score": -0.28001357094035484, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), company.name),person.death_place))", "score": -0.4527933545468841, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.4869575185045565, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), company.name),person.death_place))", "score": -0.49906897023902275, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_place))", "score": -0.5125822025253255, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_day),person.death_place))", "score": -0.5145921655057464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,f), person.death_place),person.death_place))", "score": -0.5227516835985309, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,f), person.death_place),person.death_place))", "score": -0.5555835838382768, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_day),person.death_place))", "score": -0.560867781197885, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5781500801268006, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.name,!=,f), person.death_place),person.death_place))", "score": -0.5795532159177654, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5826134666078054, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,1986-05-30),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.24947902547182502, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3205756936117432, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.33934631043829716, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.35547060868425284, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.35556105445777947, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3599292747886777, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3672972087189387, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.3742412255108068, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3743316712843334, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.death_day,!=,1986-05-30), country.name),country.name))", "score": -0.37452691649058667, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3860678255454926, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.3892576339133288, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.3896436798640199, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.3904559695302891, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30),production_country.movie_id,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.4797678938939675, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.10516467526031192, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.31325957014632877, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.34806200697494205, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.3774639142001934, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.4125491662271088, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.4420509694464272, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), keyword.name),person.death_place))", "score": -0.4500549717195099, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.4683764243395306, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), genre.name),person.death_place))", "score": -0.4791380448587006, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),company.name))", "score": -0.5145053455926245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.5273638133686539, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), movie.title),person.death_place))", "score": -0.5495125634915894, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.5629288039906127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.name),person.death_place))", "score": -0.5738603456265992, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),movie.budget))", "score": -0.5783167669869727, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18795492182868465, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(movie),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.299896312881132, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3027678953083351, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3043728208146213, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.3087542009637236, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.3115733305128626, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.318657077280145, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.32214237279596314, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.3249615023451022, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3369634456444216, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34056525324022235, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.34333173301620584, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,movie.id), genre.name),genre.name))", "score": -0.34907823157460277, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.39339620535358627, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),movie.id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.3999035162491547, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.15323649419534804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.194647927519482, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.20934182160417783, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.2173860110147887, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.2989342524530105, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.30124268829454826, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.30968380060125533, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3150252202767467, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3166745865767287, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.33136848066142455, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),country.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.34450973062295864, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3874436238922925, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.3886978948897148, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.release_date,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.3913924416025557, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(production_company),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.5439986366365434, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.09288423407116597, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.17055081740657063, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2349519882149028, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26387503544444835, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.30068139718765236, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.30180288005788064, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3152511954942247, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3284622710653897, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3504172073141784, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.3504419869982786, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35726899740905566, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.36510729946768294, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,92), genre.name),genre.name))", "score": -0.384268224478228, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4063576619843928, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,92),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4120618217879039, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.03687481989618391, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5216922278802776, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5238555498565922, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.525863963659795, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5308205880862873, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5378413349199122, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5509115640623138, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.551802833331941, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.553019146533256, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5589309500937816, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5596598606154185, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5634506699861959, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),person.name), person.name))", "score": -0.5714732611959334, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5789580051300476, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.birth_day),person.name))", "score": -0.5904627296840772, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.06294562946277438, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.3998328829111415, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.48185334447043715, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.48555436263995944, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4949667979890364, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4966921396480757, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.5042488179096836, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_place),person.death_day))", "score": -0.5554586849102634, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5895240236932295, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6003225827516872, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.6074599324201699, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.6296397400947171, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.name))", "score": -0.6703377319427091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6735932612718898, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6744721317591029, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.24678584277323176, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.27641289403708985, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3209073060086708, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id), company.name),company.name))", "score": -0.32292147881225236, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33117254760861015, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(genre),production_company.company_id,company.id), company.name),company.name))", "score": -0.3323669485437113, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,T\u00fcrk\u00e7e),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3495982306756066, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36656255246046016, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36690585814293253, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,T\u00fcrk\u00e7e),has_keyword.movie_id,movie.id), company.name),company.name))", "score": -0.37548922916428107, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_genre),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37628756000551683, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,T\u00fcrk\u00e7e),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.3792252819394647, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.38370455568095385, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(production_company),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38898511752826576, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.39381959689047213, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.140524070156971, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.2056809993518982, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.36168710273341276, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.42684403192834, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.43469272383379554, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.name))", "score": -0.449195828725351, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.4671687859527506, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.47704906514587736, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.5158406265592699, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.5193642174055971, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_day),person.name))", "score": -0.5286582315780277, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5295436884354211, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.5360797114199928, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_day),person.name))", "score": -0.5473275222029701, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.5518402795245522, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.1536242058326469, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,=,f), movie.id),movie.revenue)", "score": -0.2313396456363505, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.30701029655790657, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.37580501194576765, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3810016544044971, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3847257363616102, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.39620946624343695, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4054794519813459, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.4096382885306611, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.41067609444007536, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.4148349309893905, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4258839062790152, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.43004272354652195, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.4393127092844309, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.4445093517431603, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.22132923540621197, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.26830132326135214, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2763815354337273, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.28897953272974736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.29000095092353084, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.29497004249585074, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.30319138697437703, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3149567392020851, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31712120657992887, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3269655287764801, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3281294772829136, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3325407761668828, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.33546600463191634, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.movie_id,genre.id), genre.name),genre.name))", "score": -0.33619646004094816, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.movie_id,genre.id), genre.name),genre.name))", "score": -0.33998794933845977, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.15888404842750822, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16702924746197576, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.19517563919039127, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.20181103886545115, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,=,56000), country.name),country.name))", "score": -0.21973936366096367, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.22957186574618418, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,56000), country.name),country.name))", "score": -0.24408561510232332, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2713792734748008, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.27883704478904187, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.29081038899192263, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,=,56000), country.name),country.name))", "score": -0.3085034550478918, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<,56000), country.name),country.name))", "score": -0.3377582769434478, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.37820267915881417, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3813525358217189, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,>=,56000), country.name),country.name))", "score": -0.4310260333701123, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.03556644896889338, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,65), movie.vote_average),movie.vote_average))", "score": -0.4415814548628987, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,65), movie.vote_average),movie.vote_average))", "score": -0.44565778671676526, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,65), movie.vote_average),movie.vote_average))", "score": -0.4729689199375571, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.559367597597884, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,65), movie.vote_average),movie.vote_average))", "score": -0.6253655522959889, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), oscar.year),movie.vote_average))", "score": -0.6920786402552039, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),oscar.year))", "score": -0.7435642641867162, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.year,>=,65), movie.vote_average),movie.vote_average))", "score": -0.7446998495506705, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.id),movie.vote_average)", "score": -0.7534424339530379, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.popularity),movie.vote_average))", "score": -0.7564777634470374, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,65), movie.vote_average),movie.vote_average))", "score": -0.7580663103508414, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.status),movie.vote_average))", "score": -0.7639207742540748, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.status))", "score": -0.7729594868505956, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,65), movie.vote_average),movie.vote_average))", "score": -0.801661071171111, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.3336990634520406, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.3403029516825705, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3750411011445893, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3811727177826886, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3819939029903292, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.38874401535702247, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.39265407357904325, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4017745009641976, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4071864419949926, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.412360629379832, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.41325585676055226, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4186677977913473, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.42384211465359733, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.43296251583390677, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.43610298014732735, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.11162087112661137, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.11434874088423115, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),company.name))", "score": -0.1265283072187193, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.21816481133615656, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3204670721337272, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,hi), company.name),company.name))", "score": -0.3236635797248951, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3271426828586916, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3495362341495821, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36638959676169847, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,hi), company.name),company.name))", "score": -0.41770059902456974, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.44274486955722714, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.4475693647817023, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4614145952996832, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.46492565676429154, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),person.death_place))", "score": -0.4696431013907692, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.15456316502623982, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.16668735983152966, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2043048891734946, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2704950172312421, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,=,fa), country.name),country.name))", "score": -0.30023524925412487, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3027188883883261, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3087944031890366, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3226043415205438, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,fa), country.name),country.name))", "score": -0.3233736845752255, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.3370405942798022, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.3457743285230232, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.3491647890850921, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3540731672045122, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.357898523328313, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,fa), country.name),country.name))", "score": -0.36838051664905713, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.11975384948965817, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.11985855266522574, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,strafzettel),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.17075440860830907, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.2041732169271852, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.26460299419930344, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.342918933441312, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.34504434312250937, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3608762102024339, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.36463082265641855, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), company.name),movie.title))", "score": -0.37439530601317234, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3765900205395182, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.38540998068287247, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), company.name),movie.title))", "score": -0.38974155268687266, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.title),movie.title))", "score": -0.44977762595293225, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.4529842664176749, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.15437208763372787, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.17153843380378828, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.19969428272534273, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Angola), company.name),company.name))", "score": -0.23006818500233825, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2381564906879476, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.23863876814481522, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33162296506743366, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33677014295512064, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3421308979755329, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35789694520280635, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3599058959703361, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),country.name,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36686649754504275, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.3713910328840248, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3813633730342904, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,Angola), company.name),company.name))", "score": -0.454176209860681, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.062219354636908974, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.19200418455147883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.601613657308917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,417), movie.original_language),movie.original_language))", "score": -0.6214763928073808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,417), movie.original_language),movie.original_language))", "score": -0.628966640062572, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6478345674199114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6502788006554279, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.656922205750175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6576221327021254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6593664389856915, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6600663659376419, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,417), movie.original_language),movie.original_language))", "score": -0.6606676088049426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),language.name))", "score": -0.6869946514125331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,417), movie.original_language),movie.original_language))", "score": -0.6882881332057877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,417), movie.original_language),movie.original_language))", "score": -0.692324827738048, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2260894835490035, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2631532070031229, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.27486147352210194, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2838091902560163, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2955174567749953, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3009748509070705, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3126831174260495, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3164700826186997, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.32163083415996385, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.32947204325466384, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.33007152560320674, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.33301904811386684, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3333391006789429, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.34354116361236803, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.35094175524090493, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.13931394413142856, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2743224937143224, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.2908535371230431, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.2975624627441809, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.2987901572737852, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.3139523745676034, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.32297987499367625, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),oscar_nominee.person_id,company.id), company.name),company.name))", "score": -0.34656797357009217, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.35186303810285113, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),person.death_place))", "score": -0.3525041743052274, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,production_company.company_id), company.name),company.name))", "score": -0.3670610525151584, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.38157115307119943, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.title,>,m),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.4019278164996872, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.movie_id,production_company.company_id), company.name),company.name))", "score": -0.4089456061064565, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>,m),oscar_nominee.person_id,production_company.company_id), company.name),company.name))", "score": -0.41463460897810156, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.06913772583357058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.21417925189936418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.28868477077293864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.3962269673730925, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.3967240292750169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))", "score": -0.40118009023717605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.4397877004010561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.45010045178618946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<,no), movie.vote_count),movie.vote_count))", "score": -0.4533373730664607, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.46879172920452983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.4707324862466669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.47122955728575866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.4775455607683964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(min(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no),movie.vote_count),movie.vote_count))", "score": -0.4875729299295357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5350767574643914, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.17858811621951448, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.2000290841645524, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.22807354996740936, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.popularity),movie.popularity))", "score": -0.2710348511543395, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.runtime),movie.popularity))", "score": -0.2715067239766665, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.2851939385295851, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.2889552104133377, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.29263767946383573, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.popularity))", "score": -0.3259382000934467, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3410022443152338, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.number),movie.popularity))", "score": -0.35223640812773527, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime),movie.popularity))", "score": -0.36436611572633043, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.vote_average),movie.popularity))", "score": -0.37288997238480304, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.birth_day),movie.popularity))", "score": -0.37563133908835555, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),person.birth_day),movie.popularity))", "score": -0.3766805079710077, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.2516860915047068, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2603902900979376, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3097548942124114, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.31815500513452544, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.33602708289516214, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3531122212901613, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.370984299050798, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.383775535042908, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.38607251562059536, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.39089967270913956, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3915351322386586, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),keyword.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3994824721037113, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.40394460831565515, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.40395892221242413, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.44272989048008304, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.022676534343190724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.popularity),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.5654339653684227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.6613852575865167, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.title))", "score": -0.666125882857159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.budget),movie.budget))", "score": -0.6729837397324445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.6878458056162344, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6891881738801782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6940215293881101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7026648067824501, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7054070999534521, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7102404155901084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7188836946803621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(spoken_language),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.7199251817524177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.budget),movie.budget))", "score": -0.7230192111783253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.status,movie.popularity), movie.budget),movie.budget))", "score": -0.7279798075948681, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.033557552815182135, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.43232781809638254, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>,Jason Tobin), person.death_day),person.death_day))", "score": -0.4750848440162372, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5138652352325153, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),movie.revenue))", "score": -0.5204324274964165, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5488117150671314, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6007818144271643, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,!=,Jason Tobin),person.death_day), person.death_day))", "score": -0.6225737790955463, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_place))", "score": -0.6291867941326927, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.birth_day))", "score": -0.631426438660128, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.650668363989098, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Jason Tobin), person.death_day),person.death_day))", "score": -0.697774979256792, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), movie.revenue),person.death_day))", "score": -0.7125345457752701, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_place),person.death_day))", "score": -0.7327923167904373, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Jason Tobin), person.death_day),person.death_day))", "score": -0.7532815662852954, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.14203134035585332, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.18516842503908193, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.19825150462230465, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.2997381449240755, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.32314959880454197, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.32383857666121074, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3447133541119507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.sub_category))", "score": -0.34970986009114846, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.35595830919052684, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.3594458147932998, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),oscar.year,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.3771977050260795, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.37924006459775533, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3793697630709933, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.38005874092766206, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,<=,7.4), oscar.sub_category),oscar.sub_category))", "score": -0.38435521034783837, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))", "score": -0.11841392432688735, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.19734454070567153, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_day))", "score": -0.3129124595725443, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.birth_day))", "score": -0.3918430759513285, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),movie.revenue))", "score": -0.4309826633834746, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_place))", "score": -0.45548830842017196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.death_day))", "score": -0.5290533854567911, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.death_day))", "score": -0.5409852220618632, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.birth_day))", "score": -0.6079840018355753, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.birth_day))", "score": -0.6199158384406473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),movie.revenue))", "score": -0.6254811986291315, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_place))", "score": -0.6499868436658289, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar_nominee.person_id))", "score": -0.6730029723548796, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),cast.person_id))", "score": -0.6772499225044157, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.death_day),person.death_day))", "score": -0.6845419291348662, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.023214145767269656, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,18.3802), movie.original_language),movie.original_language))", "score": -0.5660553597554099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), language.name),movie.original_language))", "score": -0.5896720571618062, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.6103489544038894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,18.3802), movie.original_language),movie.original_language))", "score": -0.6198591612919699, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,18.3802), movie.original_language),movie.original_language))", "score": -0.6215586055477615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),language.name))", "score": -0.6218498963571619, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,18.3802), movie.original_language),movie.original_language))", "score": -0.6658092164143454, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.status),movie.original_language))", "score": -0.6865716858010273, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.status))", "score": -0.7245593685365748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.vote_average))", "score": -0.7272977847314905, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.vote_average),movie.original_language))", "score": -0.7425422949891072, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.title))", "score": -0.7553110737062525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,18.3802), movie.original_language),movie.original_language))", "score": -0.7576658714970108, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.title),movie.original_language))", "score": -0.7726424617867451, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2257358420411933, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.23166177682274555, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.26973224383014394, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.28364651516513206, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2895724499466843, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.3088519603972286, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3153797311190721, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.32130566590062437, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,oscar.id), language.name),language.name))", "score": -0.32524255762717325, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.33850306606522607, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(spoken_language),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.3458340348518054, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.35226452630650623, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.3581904516740073, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(oscar_winner),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.3631675159167433, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3),getData(movie),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.38758156479347383, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.05390242707289872, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>=,25.6132), movie.runtime),movie.runtime))", "score": -0.35601834800399956, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.548930776433963, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5534663909766139, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.title),movie.runtime))", "score": -0.5682821700938803, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5760439171932006, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5923564532687307, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.596891994714043, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5983401508456154, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.5996729389507433, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.6129159726947485, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.6451416061007784, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.id),movie.runtime))", "score": -0.6817644069560629, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.vote_count),movie.runtime))", "score": -0.6925586293109518, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.release_date))", "score": -0.7091022917193186, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.036139511241344735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,49.3535), movie.revenue),movie.revenue))", "score": -0.29968730799737386, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,49.3535), movie.revenue),movie.revenue))", "score": -0.5627311288553756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.5758391913113883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.popularity))", "score": -0.5845930895011406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.vote_count),movie.revenue))", "score": -0.702621460048249, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.budget))", "score": -0.7095169147651177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_average))", "score": -0.7105365714232903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_count))", "score": -0.7349176129500847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), person.death_day),movie.revenue))", "score": -0.7578704358020332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,49.3535),movie.revenue), movie.revenue))", "score": -0.7665108750225045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.budget),movie.revenue))", "score": -0.7703502179065254, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.7745610612619203, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "sum(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.id),movie.revenue)", "score": -0.8173144717567876, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),cast.person_id))", "score": -0.8181250414054375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.0394945686293795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,214), movie.original_language),movie.original_language))", "score": -0.35259773783218407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,214), movie.original_language),movie.original_language))", "score": -0.441987330241318, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.44782467850137403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.460568641274181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,214), movie.original_language),movie.original_language))", "score": -0.5118955319358065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5285035090555427, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5412474718283496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),language.name))", "score": -0.6020911761170282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.6042780408029286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.vote_average,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6249509605568082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.id,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6321324423593688, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), language.name),movie.original_language))", "score": -0.6536207517219736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.vote_average))", "score": -0.6599675842171564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.status))", "score": -0.6620207854157343, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.01813392939584446, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,22441323),getData(cast),movie.id,cast.movie_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.6015356244618105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.revenue))", "score": -0.6091360046302725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,22441323), movie.popularity),movie.popularity))", "score": -0.628988508880866, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,22441323),getData(cast),movie.id,cast.movie_id),getData(movie),cast.person_id,movie.id), movie.popularity),movie.popularity))", "score": -0.6295474460515007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6435252891945525, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.person_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6485458813849229, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.vote_average))", "score": -0.6532829000389029, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6769186750758994, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(spoken_language),getData(movie),cast.person_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6828175942215507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.7179906465171371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.status))", "score": -0.72202118176574, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,22441323), movie.popularity),movie.popularity))", "score": -0.7222992239294399, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,22441323), movie.popularity),movie.popularity))", "score": -0.7229614315328945, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), person.gender),movie.popularity))", "score": -0.7306883469464083, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1386185222702058, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.142027048586833, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.1806596530950629, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.24437215444991786, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.26843200927082234, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3034543723519996, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.31073131003103144, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3109917021584394, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.3451056740843016, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3743585738521152, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.original_language))", "score": -0.3782203762976528, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3801363305518005, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.38156777596864805, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3876736603582403, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.3906288747042362, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.2454098118721122, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.3280146243919861, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.3565521033409219, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.35906971945359845, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.3773691198250714, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3796538901090748, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),oscar.year,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.3900901867233904, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.year))", "score": -0.3952968436939226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar_winner.movie_id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3976656003700489, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.39795329048054773, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,!=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.4152731931610881, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_winner.movie_id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.4242364308611876, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar_winner.movie_id,oscar_winner.oscar_id), oscar.number),oscar.number))", "score": -0.428753477391907, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.movie_id,movie.id), movie.title),oscar.number))", "score": -0.4296220274413395, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.movie_id),oscar_winner.movie_id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.45870400447353976, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.07862252540011659, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.19743601957877088, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.2807232398642814, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.39949441282396847, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_count),movie.vote_count)", "score": -0.41742665233197485, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.4221136060947567, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_average),movie.vote_count)", "score": -0.46553729124161997, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,fr), movie.id),movie.vote_count)", "score": -0.4728338513729294, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4741622900668234, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_count)", "score": -0.4845577700976609, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,!=,fr), movie.id),movie.vote_count)", "score": -0.49288397177080284, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.5036790685823825, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.5047983651416117, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.5054008312007193, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,fr), movie.id),movie.vote_count)", "score": -0.5174294524808672, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.07875875324921988, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.17517261620761557, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2373109618802795, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,380), country.name),country.name))", "score": -0.26272497556861213, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.270809804058043, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.27367767192821724, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,has_keyword.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3034150160005451, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.32207485535506736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3576625908784274, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.36651843939991025, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.37149014472105557, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))", "score": -0.37999401897595864, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3815562451966227, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_company),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38184320386751497, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.39637285432400504, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.08565102451393614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.3082598813707591, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.38330999695608625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.4940432145158411, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5078703065300942, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.birth_day),person.death_day))", "score": -0.5121558693135739, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_place))", "score": -0.5185161710614921, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5616406633416773, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5921353765661479, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Lasse Petterson),person.death_day), person.death_day))", "score": -0.5971631578868255, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6037228175337077, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_place),person.death_day))", "score": -0.6090374079431058, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6246922680074931, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6405084638754488, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.birth_day))", "score": -0.6504848779077292, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.026196046768745873, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2607), movie.revenue),movie.revenue))", "score": -0.43351872036146233, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.4836738266167231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.popularity),movie.revenue))", "score": -0.5560930231949897, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.budget),movie.revenue))", "score": -0.6033636192223639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,2607), movie.revenue),movie.revenue))", "score": -0.6172763235299499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2607), movie.revenue),movie.revenue))", "score": -0.6253800518243224, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_count))", "score": -0.7001921458067955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.popularity))", "score": -0.7209507150473655, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_average))", "score": -0.7403522057356895, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,2607),movie.revenue), movie.revenue))", "score": -0.7495273314052611, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,2607), movie.revenue),movie.revenue))", "score": -0.7734087066855864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.budget))", "score": -0.775479666692263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2607), movie.revenue),movie.revenue))", "score": -0.8083549099173979, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), person.death_day),movie.revenue))", "score": -0.824491308107099, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.14231469654819245, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.20842876959945814, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.21434877685137782, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2217053900941591, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.23778526324768048, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.2838158267624502, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2943097605303047, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.30828329568391744, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,!=,m), movie.title),movie.title))", "score": -0.3221098478186117, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3304077957728413, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.3356831358339458, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_nominee.person_id),person.birth_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.3668039557416861, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.title),movie.title))", "score": -0.3810233263170085, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,m), movie.title),movie.title))", "score": -0.3852886765667792, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,m),movie.title),movie.title))", "score": -0.42558763795924454, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.0292516347876338, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.revenue)", "score": -0.320810821635827, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.6238233071638349, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.budget),movie.budget)", "score": -0.6679018554217852, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.6959333128216292, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,<,5.3), movie.id),movie.budget)", "score": -0.7102702241271579, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.vote_count)", "score": -0.7650488953842487, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,5.3),movie.budget)", "score": -0.783780393415535, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.runtime)", "score": -0.7972606525946151, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.id),movie.budget)", "score": -0.798478052913252, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,<,5.3), movie.id),movie.budget)", "score": -0.8139894948337039, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,5.3), movie.id),movie.budget)", "score": -0.8225098877376142, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.release_date)", "score": -0.8364753302043965, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),person.death_day)", "score": -0.8420746385857187, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,5.3), movie.id),movie.budget)", "score": -0.8507859357308517, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),country.name))", "score": -0.0742284824352396, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,374), country.name),country.name))", "score": -0.1435706888449523, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.1912719157067499, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.20200764211564387, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<,374), country.name),country.name))", "score": -0.27590966347213985, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<,374), country.name),country.name))", "score": -0.34712348423866035, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,374), country.name),country.name))", "score": -0.35789738992154546, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),production_country.iso_3166_1))", "score": -0.39794651047094254, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.41322539266369185, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),movie.original_language))", "score": -0.4217764200335759, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,374), country.name),country.name))", "score": -0.42723959633125813, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4273857868874842, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.4277736768500592, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), movie.original_language),country.name))", "score": -0.42928724674029817, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.43207183658345727, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.13300184554827865, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.2832651604630554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.3066762267061206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.31893031326688664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.34234137950995186, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.3791254908663251, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.3830669015743024, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.38511092243398426, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,140), movie.vote_count),movie.vote_count))", "score": -0.3995783942073186, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.4025365571093903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.4064779678173676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.4147906436701563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,140), movie.vote_count),movie.vote_count))", "score": -0.4229894604503838, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140),movie.vote_count),movie.vote_count))", "score": -0.4510283252140215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.46676208557270477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.10352383477689013, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.1822599811606347, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.22591916618337848, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.2631423188434744, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.26640729353986414, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.3362432569014988, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.vote_average),movie.vote_average)", "score": -0.36383731274882136, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,!=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3787153723258202, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.4049691836492928, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.revenue)", "score": -0.4164608840519301, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.4234083898585504, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(merge(filter(getData(language),language.name,=,Italiano),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.4398243751466293, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.vote_average),movie.vote_average)", "score": -0.4425734781308184, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), language.iso_639_1),movie.vote_average)", "score": -0.44542097574037537, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.popularity)", "score": -0.4484065850138157, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.popularity))", "score": -0.36228990377276205, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.3964373370215565, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.vote_average))", "score": -0.4104455095657613, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4189420405684121, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4194720450042288, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4377672101602094, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4483209640242053, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.45715952206593236, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4703205284604337, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4708256675710609, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.47135567200687756, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.479664225612788, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.4801942300486046, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4845014574947322, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4896508371628582, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.0831779598281809, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2067739910550296, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24779809039721232, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.27515275805333955, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.2892928382689096, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.31572815024396345, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.3191733958238352, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.3240587191695487, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.34851231066967936, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.35180750109141984, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.36820365020591106, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3810463658888109, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.3846464829081755, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3946601173385532, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.39561331149344137, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.16863869762689107, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.18685748983260253, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.20533858803692331, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.name))", "score": -0.21759197637230981, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.name))", "score": -0.22066010916056242, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.name))", "score": -0.2391412073648832, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.death_day),person.birth_day))", "score": -0.3099134325135254, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.death_day),person.birth_day))", "score": -0.32839453071784613, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.33834572047652417, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.death_day),person.name))", "score": -0.34371605184148524, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.birth_day))", "score": -0.3503534370031016, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.name),person.birth_day))", "score": -0.3603094843759096, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.death_day),person.name))", "score": -0.36219715004580605, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.36230125952207154, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3692505500931357, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.25448764944179525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.3075708835120804, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.32458989539657085, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.3485333251259231, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,!=,3854), person.name),person.name))", "score": -0.3517378282738723, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), keyword.name),person.name))", "score": -0.35741780380173566, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.36542150521260786, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3726827201522281, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.377673129466856, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.3900274294113766, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.39179484331419784, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3972886443509968, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3990560582538181, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.4016166001750192, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.41640076751296656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.04912987711523769, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,10.3042),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.27790249168198483, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,10.3042), company.name),company.name))", "score": -0.318484368427669, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), person.birth_place),company.name))", "score": -0.338250986607513, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,10.3042), company.name),company.name))", "score": -0.3465153459501927, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3513140367174512, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), oscar.category),company.name))", "score": -0.35626215309785403, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,10.3042), company.name),company.name))", "score": -0.3566943638163198, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3683751598570927, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.36956429988424416, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.37082286549307264, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3710885005960963, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,10.3042), company.name),company.name))", "score": -0.3730986559490136, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3755404960773452, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3855121071675231, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.1503018944059337, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.16361931320938675, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.18729116607563248, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.23001403850107557, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.24402082797176566, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.25504166077857077, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.runtime),movie.runtime)", "score": -0.26238424601949334, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.2752243698586879, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2914932952639011, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2955094198585265, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.30077709131354285, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.32937405482019577, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.34066481760753703, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.40214407437036254, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),movie.release_date,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.4064882408569739, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.22359397465473738, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.24711819127398227, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.24952056194814234, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.2549675593466217, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.26430134783654136, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count)", "score": -0.2723105709799225, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.30057267611864885, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.30403396942926236, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),movie.vote_count),movie.vote_count))", "score": -0.3214796219856322, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.32162409969343203, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.32506299552873763, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.32852428883935114, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_count))", "score": -0.347681466772729, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.35036292772549693, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_average)", "score": -0.35837215086887814, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.3918591197289061, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4193485576275492, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.42919017063884946, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.43637838750873925, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.45457197213936, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.45764583040773926, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.45995214890110947, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.46113524483052415, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4644135851506603, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4686955939687323, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4697937619124098, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4709768578418244, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.47852360649119324, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.488365292599832, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4897317567447317, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2597858321302424, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2696109251430376, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2813729558620322, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.29119804887482736, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30007371821381307, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30878653111272175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30989881122660823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3186116241255169, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3303736548445116, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3319881057541352, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3401987478573067, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3490744171962924, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,spoken_language.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3567034371078264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.35889947165301034, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Post Production),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.name),person.name))", "score": -0.3837206417721693, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.24481406955391313, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.name,!=,Quick Six Entertainment), country.name),country.name))", "score": -0.27267207512589053, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.2750850558855579, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,company.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.2833112819893183, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.29276793962628933, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.movie_id), country.name),country.name))", "score": -0.29297513670592074, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(company),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.29808641751429943, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,production_company.company_id), country.name),country.name))", "score": -0.30453960456809215, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id), country.name),country.name))", "score": -0.30558265017840114, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.3093361763312309, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,company.id),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment), country.name),country.name))", "score": -0.30978711538584314, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.company_id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.3160594575980474, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.31952873069635246, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3250437348997693, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id), country.name),country.name))", "score": -0.33228848988196574, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.16295868096446953, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.18885720595888372, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.2229035758639549, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.24855114119468838, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.27480930961560684, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,!=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.29764146588992785, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.31904902343549285, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3245101920483206, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.3505908872783812, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3510021458232476, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.35193251014425186, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.3544936546907135, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.37120785541089235, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),keyword.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.3718744113641592, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.39274935365392594, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.0815007309132288, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.2114708456287311, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.21626570209750792, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.2778973730880119, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,movie.id),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3097347173082066, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3236557233292919, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,language.iso_639_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3427603074975753, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.34623581681301024, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3489551277931447, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.oscar_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3541254041629196, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3551362572894702, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3596785861272362, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,2.6),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.36214544764197076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),production_country.iso_3166_1))", "score": -0.3703500058015152, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),movie.status))", "score": -0.3802044662238278, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.022706367075443268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5045975413877078, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.5404493515379727, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.5504378790501505, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.6133453457150608, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6197079296307313, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.6673143673688173, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.vote_average))", "score": -0.6977398006711155, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.status))", "score": -0.7033537833485752, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.vote_average),movie.original_language))", "score": -0.7088520566353022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.7217739934567362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.status),movie.original_language))", "score": -0.7317359615117311, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,6.24827),getData(spoken_language),movie.id,cast.movie_id),getData(movie),spoken_language.iso_639_1,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.7381464924169098, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.7381890831332346, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.7475713659077883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.16711877161892835, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2087650724630195, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.2311385721710168, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.2918324900054697, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3187869902951098, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3254107473651867, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.34466566763159223, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),spoken_language.iso_639_1,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3540763766215526, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,spoken_language.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.35477318475372627, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,language.iso_639_1),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.35830578198300855, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3725987257314935, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),company.name))", "score": -0.3738939743804522, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.37661598821860875, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<,982),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3859567870541827, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<=,982), genre.name),genre.name))", "score": -0.38914333486366465, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.09308321675091363, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.15557185035119236, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.15943788751902294, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,oscar_winner.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.3245943766774499, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>,122), language.name),language.name))", "score": -0.35273424431481865, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(oscar_winner),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.35898904644509844, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,oscar_winner.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3793866660474635, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),movie.original_language))", "score": -0.38006281511355944, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,122), language.name),language.name))", "score": -0.4001666718794736, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.40738770695647863, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,language.iso_639_1),movie.runtime,>,122), language.name),language.name))", "score": -0.40844661078463457, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,spoken_language.movie_id),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.41052532105577416, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,122),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.41458260847600714, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.runtime,>,122), language.name),language.name))", "score": -0.4168418713926841, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_keyword.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.4187362355839684, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.16529667282102148, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.23517647956419627, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.25152948245681556, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.28721858213862306, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.29998335739604143, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.33281436478485044, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3376111469375967, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.35290447031945554, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.36203787369887114, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,????),movie.vote_average),movie.popularity))", "score": -0.36250317369967394, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),movie.original_language,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.3775669656445743, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.39502502232180836, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.39834825809422264, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),language.name,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.3988983851952921, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,????),movie.vote_average),movie.popularity))", "score": -0.40374898505045165, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.42881743000558514, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4428300037335897, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.4531121588986437, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4613948847782776, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.46243107277783746, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.4671247326266483, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4754074585062822, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.476443646505842, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,best picture), person.gender),person.birth_place))", "score": -0.4790012784436715, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.48568961367133623, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.486725801670896, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5516051592384043, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.552136069069908, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,best picture), person.gender),person.birth_place))", "score": -0.5692791585935817, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,best picture), person.gender),person.birth_place))", "score": -0.5806259303565952, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.25195585190682057, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2522635847387862, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),genre.name))", "score": -0.26974969963984713, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35667603351005095, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), person.death_place),genre.name))", "score": -0.3667477568910911, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),person.death_place))", "score": -0.3682532918259226, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3804355240728246, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3858407560136775, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.39182355861401347, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.39341119250896733, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.39939396640774233, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,person.id), genre.name),genre.name))", "score": -0.4079532630309027, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,person.id),person.id,crew.person_id), genre.name),genre.name))", "score": -0.41674511613859716, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,person.id),person.id,crew.person_id), genre.name),genre.name))", "score": -0.4327403976254645, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.person_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,person.id),person.id,crew.person_id), genre.name),genre.name))", "score": -0.4370775703837027, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.2384608782240591, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.2563284460867385, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.27590197245407344, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.29009615742209777, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.30237906890508387, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.32105682943536423, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3229994288626926, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.movie_id),language.name,>,P??????), country.name),country.name))", "score": -0.3329438725360076, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3334265327620326, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33419815712771517, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33559796780312373, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3375405672304521, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,=,P??????), country.name),country.name))", "score": -0.33877401878533, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.movie_id),language.name,>,P??????), country.name),country.name))", "score": -0.3438589621481558, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.3474076673727625, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.30734257840995277, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,=,1991-01-04), company.name),company.name))", "score": -0.333710105126036, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.birth_place,=,1991-01-04), company.name),company.name))", "score": -0.3448720775780631, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.35155642951236477, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,crew.person_id), company.name),company.name))", "score": -0.37039106781136033, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3728770979397593, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.person_id), company.name),company.name))", "score": -0.38114356731880294, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.38289414234843266, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3848763671784506, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(company),production_company.movie_id,movie.id), company.name),company.name))", "score": -0.410266791525857, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4170909490421713, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_place,=,1991-01-04), company.name),company.name))", "score": -0.42006714136644757, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.movie_id,movie.id), company.name),company.name))", "score": -0.42710799345084466, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4282269763691662, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4290902182808626, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.15486485692732777, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.1956458355058342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.22448373670925334, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.26350639208984405, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),person.birth_day,=,8.58322), keyword.name),keyword.name))", "score": -0.2754739769548939, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,8.58322),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2769765810870671, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.2791550569753366, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2845689133185031, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.homepage,=,8.58322), keyword.name),keyword.name))", "score": -0.3089133601022603, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.34605382092983134, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.3614440181105438, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,=,8.58322), keyword.name),keyword.name))", "score": -0.3632792796880141, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.budget,=,8.58322), keyword.name),keyword.name))", "score": -0.3789656503944873, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.39013673029856705, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,=,8.58322),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.40498175673206305, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.08564165277922309, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1282197209153495, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.19565192356753608, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3030677358319958, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.3183747194741205, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.3216937169717495, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3284456723842795, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.32892637820294274, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,0.545825), company.name),company.name))", "score": -0.34533487094280974, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36624293908293554, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37322060723137246, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(crew),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37630929574961863, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,0.545825), company.name),company.name))", "score": -0.40171174671396126, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4085843781207369, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.43662569552050734, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Switzerland), movie.id),movie.vote_average)", "score": -0.16900985040585623, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.22353112366953837, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.2762193638896771, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.32301143125189236, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.33899333737745363, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3572842309888539, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.36773049097364136, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.382278926212333, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.40351690586710465, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4052312775418715, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.40997247120899266, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.41711434870328323, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4220966086434189, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,movie.id),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4291175801250539, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Switzerland), movie.id),movie.vote_average)", "score": -0.48103488686344675, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.15420909636094618, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.16389071536722788, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.180332255498851, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22946115833874747, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.23820482718885486, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.2716791628327704, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,=,Released), genre.name),genre.name))", "score": -0.2806093362054404, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.30306003199507203, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.32237972407543464, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),person.gender,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.325983300983668, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,=,Released), genre.name),genre.name))", "score": -0.35419819894849935, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,Released), genre.name),genre.name))", "score": -0.355331548816446, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.35547771602898337, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3628994845418388, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.37081283214031724, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.021913590950134676, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,132), movie.vote_count),movie.vote_count))", "score": -0.46711779024190037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,132), movie.vote_count),movie.vote_count))", "score": -0.476289872189227, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.537688431526476, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.revenue),movie.vote_count))", "score": -0.7104426557125407, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7599999505255255, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.revenue))", "score": -0.77177752530406, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.title))", "score": -0.7856137303097057, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.title),movie.vote_count))", "score": -0.7927066618503886, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), person.death_day),movie.vote_count))", "score": -0.7932292157711345, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7980054813597235, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), oscar.number),movie.vote_count))", "score": -0.8039869600834209, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_average))", "score": -0.832878485081892, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,132), movie.vote_count),movie.vote_count))", "score": -0.8412185647684964, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,132),movie.vote_count), movie.vote_count))", "score": -0.8520703050744487, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.28299951964328973, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.2897076653333857, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3455166432291194, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3501806599405272, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3760069850488939, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.39434150450285005, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.40469746944021534, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.40483070446802655, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.40525248102375694, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.4064559367655349, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.42240112763627646, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4225343626640877, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.4294659455736861, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.4321533027709783, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4361740912637821, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.19140255367650844, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.19429179723204937, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.21258726336570494, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.23465336787178512, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.26629932035715753, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.2780615728411637, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3077449913941267, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3092444582401361, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.31088618853719857, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.31491687037659843, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.31950724387813284, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.id),movie.vote_count)", "score": -0.32264844102120477, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3263218024662883, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)", "score": -0.3326073033964681, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3380840549502945, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5329288376703146, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5395156934364205, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5433105882820859, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5433666059937198, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5598776614732264, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5618517001858796, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5636725563188918, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,United Arab Emirates),movie.popularity),movie.vote_count))", "score": -0.565182279197516, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.572289378245147, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5848364597510859, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.5869816702798403, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5886313545967513, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.5974194585388832, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5986596582106274, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.6024545530562928, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.12138533291254386, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.18065287244516381, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.18702869466061434, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.2494883041960122, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.285149350797874, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.30241412746280405, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.3085628692026149, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.3213169969852358, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.32907572192119655, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.34113841433722747, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.title),movie.title))", "score": -0.3528956923321545, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.title),movie.title))", "score": -0.3536244535624064, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),person.death_place,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.36898728370807315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.title),movie.title))", "score": -0.4010403337873568, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id),movie.title),movie.title))", "score": -0.40634566566460756, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.release_date))", "score": -0.3881381602259353, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.3957487472511437, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.4082927821578905, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.4108030344015946, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.popularity))", "score": -0.4154983611078933, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.title))", "score": -0.43456875333047573, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.popularity),movie.release_date))", "score": -0.4655127451987937, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day),movie.title))", "score": -0.4834963783992438, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.popularity),movie.popularity))", "score": -0.4928729460807517, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.49714129234630766, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.5096853372208734, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.popularity),movie.title))", "score": -0.5143614715328382, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.release_date))", "score": -0.5257306571476137, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.5348152386800846, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.popularity),movie.title))", "score": -0.5390070962801429, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.16933149139954912, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.18700584307456472, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.death_place))", "score": -0.19356408312472542, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),company.name))", "score": -0.2871944906136599, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),movie.release_date))", "score": -0.30486884228867556, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),person.death_place))", "score": -0.3114270823388362, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),production_company.company_id))", "score": -0.3126693649617421, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),company.name))", "score": -0.3141194743934097, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.birth_place))", "score": -0.3213412433510805, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.33179382606842533, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),person.death_place))", "score": -0.33835206611858604, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.title))", "score": -0.3595157391834102, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.3619198962493163, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,2000-01-01), company.name),company.name))", "score": -0.3625684258044695, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.37098820199484495, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.05915185638150433, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.release_date))", "score": -0.293067166734545, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.release_date),movie.release_date))", "score": -0.29457888953766087, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,50.0736), movie.release_date),movie.release_date))", "score": -0.3981774544008658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.popularity),movie.release_date))", "score": -0.4962119578049169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.popularity))", "score": -0.5726409898270504, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,50.0736), movie.release_date),movie.release_date))", "score": -0.7125421269229264, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.popularity),movie.release_date))", "score": -0.7301272681579576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.popularity),movie.release_date))", "score": -0.7316389909610734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7683967446573661, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), person.gender),movie.release_date))", "score": -0.7735758243725286, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7832089757212088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,50.0736), movie.release_date),movie.release_date))", "score": -0.8060328467181535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.popularity))", "score": -0.8065563001800911, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.release_date),movie.popularity))", "score": -0.8080680229832069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.139924685274309, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.26486908159131417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.37954548261041055, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),person.name))", "score": -0.4421611454235972, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.4523319888758124, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),person.name))", "score": -0.4571959104287089, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.5252517785775126, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5605378474938334, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),language.name))", "score": -0.5671055417406023, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.5772763851928175, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),language.name))", "score": -0.582140306745714, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.popularity),person.name))", "score": -0.5860525395619334, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.5986525144326151, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),keyword.name))", "score": -0.6091007318245829, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.gender))", "score": -0.6168284144150675, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.11850229770803718, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.14292281583766853, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.15945533059855815, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.20396540755778012, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3549573428943366, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.3775575631067947, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3825816752983054, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.3825905275105823, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<=,Colombiana), keyword.name),keyword.name))", "score": -0.3979456400021718, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.4093054708924673, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.4113609119133996, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<,Colombiana), keyword.name),keyword.name))", "score": -0.4153643547788929, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4162258856197308, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,=,Colombiana), keyword.name),keyword.name))", "score": -0.42044995881890673, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(company),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.43257380509880344, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.revenue)", "score": -0.1418156590643283, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.25249956301771875, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Rumored), movie.id),movie.revenue)", "score": -0.278478209326024, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.id),movie.revenue)", "score": -0.3447317182621447, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.revenue)", "score": -0.45541562221553517, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.id),movie.revenue)", "score": -0.48139426852384043, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,Rumored), movie.id),movie.revenue)", "score": -0.6757545880183962, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,Rumored), movie.id),movie.revenue)", "score": -0.6800932043163436, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.revenue)", "score": -0.6938587494402986, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),spoken_language.movie_id,=,Rumored), movie.id),movie.revenue)", "score": -0.7692163113945567, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.budget)", "score": -0.7699885341223004, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,Rumored), movie.id),movie.revenue)", "score": -0.7805972848585718, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Rumored), movie.id),movie.revenue)", "score": -0.7864384915441255, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.homepage,=,Rumored), movie.id),movie.revenue)", "score": -0.7892177196640117, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.7952093200282534, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.05346576374722645, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.3196518855984323, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.3240533877181967, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.3759257983547672, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.4306858984144875, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.gender))", "score": -0.4675246781553142, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.4694570895300346, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.movie_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.49373577923340756, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5253580517623797, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.5369792785340433, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.birth_place))", "score": -0.5480116844992153, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.5609222298080888, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.gender),person.birth_place))", "score": -0.5725597525013428, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.death_place),person.birth_place))", "score": -0.5865991906087883, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.gender))", "score": -0.5877975937854099, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.08681914439642992, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.40464036582466617, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.5107274967234388, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.5304393546211941, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.5877809543180276, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,7.4),movie.vote_average),movie.vote_count))", "score": -0.6287497419361898, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,7.4),movie.vote_count),movie.vote_count))", "score": -0.6493148941044637, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.revenue)", "score": -0.6543112875392256, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.659991462476683, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.6699330469573013, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.vote_count),movie.vote_count))", "score": -0.6880805270302517, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.7357921037943784, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,7.4), movie.id),movie.vote_count)", "score": -0.7469662500343034, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,<=,7.4),movie.vote_average),movie.vote_count))", "score": -0.7735238957648107, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.8289354870139127, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.08011254678785917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.runtime),movie.vote_average))", "score": -0.37673182796061155, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.39840289960920927, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.popularity),movie.vote_average))", "score": -0.4108886570793402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,5.4), movie.vote_average),movie.vote_average))", "score": -0.4561713171315205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.title))", "score": -0.5020108447533858, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.runtime))", "score": -0.5120566115838301, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.id),movie.vote_average))", "score": -0.5198779554229986, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_count))", "score": -0.5295815096360457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.popularity))", "score": -0.5353729055386793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.status),movie.vote_average))", "score": -0.540684208379389, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.revenue))", "score": -0.5510459170800459, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.status))", "score": -0.5694060252171766, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.573978036747576, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.original_language))", "score": -0.6763050482732069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.03231264452915639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.4147879051743075, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.4674505769580719, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.5219128340249881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.popularity))", "score": -0.5655318055069074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.5874366032658145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),person.gender))", "score": -0.6379313025390729, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.release_date), movie.release_date))", "score": -0.6520805558247957, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.gender),movie.release_date))", "score": -0.6825597792631015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.796962724882178, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.budget),movie.release_date))", "score": -0.8218678146367893, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8492114412365481, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),crew.person_id))", "score": -0.8566547188675031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8600434529362246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.861057482783508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.12584261096790428, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,17500000), country.name),country.name))", "score": -0.18118079603821907, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,17500000), country.name),country.name))", "score": -0.18847359788836268, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2055221611781837, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2069818751571185, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,!=,17500000), country.name),country.name))", "score": -0.24535356088298882, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2657150170783516, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30672317775483116, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.3072432610483206, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3087575766689891, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,17500000), country.name),country.name))", "score": -0.3201871073857704, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3499206106701512, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))", "score": -0.38110988076371294, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38531388955248563, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.39673588876875004, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.20426596903292826, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.21322492060626583, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.22764852897743765, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_place),person.death_place))", "score": -0.23331868066601835, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.2534565987150531, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.2819709451230233, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.2909298966963609, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.32663771802088104, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_day),person.death_place))", "score": -0.37179420898034427, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_day),person.death_place))", "score": -0.37746436066892497, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.3783338658557265, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_day),person.death_place))", "score": -0.3976022687501408, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,<,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.4012008634598908, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.4021759199953906, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.4348849419522758, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.0989825257111818, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.1603251927156921, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18346545287338792, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,af), genre.name),genre.name))", "score": -0.2180552039201484, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23207279109331772, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2560302407968026, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2729570873459417, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,af), genre.name),genre.name))", "score": -0.2984852421449929, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31159330311896166, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3372167270867191, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3572084681792842, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3860323524683536, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39235730083977194, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,af), genre.name),genre.name))", "score": -0.40335529994009395, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.41126618266655257, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.12554552085923146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.15043173625418876, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.17293903896281698, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.1828810131770784, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>=,5.93923), language.name),language.name))", "score": -0.2883177240063701, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2972432385366529, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.305288598249887, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.32869406492887565, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3327780153681376, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>,5.93923), language.name),language.name))", "score": -0.3456532163242171, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.38569935871300043, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),movie.original_language))", "score": -0.3911125350445538, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), movie.original_language),language.name))", "score": -0.40113099156090304, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.41042834311506105, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.4110547957096989, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.07583015441559837, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.30924588843845413, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.original_language))", "score": -0.3846927874874382, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.48650532884627334, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.4918025772240071, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.518008806510463, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5301123925637512, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.5419980372600741, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.5666097871635429, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5735015902366731, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),language.name))", "score": -0.5882916490700154, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.title))", "score": -0.6181085215102939, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,857611174), movie.original_language),movie.original_language))", "score": -0.6283319588437735, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.6297363407447651, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.6326878429287482, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.060900058695551706, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.budget))", "score": -0.3054444381086796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,149), movie.budget),movie.budget))", "score": -0.5097164633734792, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),person.death_place))", "score": -0.5127921235798567, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.revenue),movie.budget))", "score": -0.5867949194325774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,149), movie.budget),movie.budget))", "score": -0.5896569314463704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,149), movie.budget),movie.budget))", "score": -0.5975960382311314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.6045710576146985, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_place),movie.budget))", "score": -0.6270352668179839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.revenue))", "score": -0.6538111698864668, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.title))", "score": -0.6698159110783308, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_count,<=,149),movie.budget),movie.budget))", "score": -0.6991882827760492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,149), movie.budget),movie.budget))", "score": -0.7542608427866071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_day),movie.budget))", "score": -0.7555654115094512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),person.death_place))", "score": -0.7573365029929846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.02445142763686115, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,movie.revenue),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.5924276957533424, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.6096953623836594, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.budget)", "score": -0.6290820911778895, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,4.6), movie.id),movie.revenue)", "score": -0.6707658230003811, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,4.6),movie.revenue)", "score": -0.7392641786717893, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.popularity)", "score": -0.7454635238223011, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,<,4.6), movie.id),movie.revenue)", "score": -0.7483772595390495, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.revenue),movie.revenue)", "score": -0.7951406725281777, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),person.death_day)", "score": -0.7962605030096209, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.vote_count)", "score": -0.7991772708434389, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,4.6), movie.id),movie.revenue)", "score": -0.8092161454098089, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,4.6), movie.id),movie.revenue)", "score": -0.8314597298391609, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),cast.movie_id)", "score": -0.837191345928741, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,4.6), movie.id),movie.revenue)", "score": -0.8415614697292245, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))", "score": -0.1126339919076237, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.popularity),movie.status))", "score": -0.18575979408652363, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.status))", "score": -0.20125216078190952, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,New Zealand),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.status),movie.status))", "score": -0.22031797255312274, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.release_date),movie.status))", "score": -0.257322699855493, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.release_date))", "score": -0.3122609864784037, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.runtime),movie.status))", "score": -0.3184223285449852, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), person.gender),movie.status))", "score": -0.3370869054991287, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.runtime))", "score": -0.35940574909498263, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.status))", "score": -0.3622209728452508, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), country.name),movie.status))", "score": -0.37067013914962, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.release_date))", "score": -0.38063247193688515, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.runtime))", "score": -0.3866213761240273, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,New Zealand), movie.status),movie.status))", "score": -0.38796935812736794, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.title))", "score": -0.39374422887718674, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1677999454997324, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.21075975635064412, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.24489156157139444, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<,2013-02-13), company.name),company.name))", "score": -0.2522531460204916, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2608913905553495, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2750744361370622, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2013-02-13), company.name),company.name))", "score": -0.28611749494329475, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<=,2013-02-13), company.name),company.name))", "score": -0.3198589162934187, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3226107340506581, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3433434252075784, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.37121286717528557, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,cast.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.38209345895695584, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.38406968119802093, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.4086939021169626, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.4266541600965707, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.11700034521641291, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.21031378606817963, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.25050874826795133, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.2721762948274978, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.2790257898128811, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2793428155828193, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.29000125939292737, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2923099849261832, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1986-11-27), movie.id),movie.popularity)", "score": -0.30589805907634293, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3104477208359681, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.32082702647111305, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.337208574134764, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,<=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.34378409508046337, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),filter(getData(person),person.birth_day,>=,1986-11-27),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3490296580387686, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.363031852500301, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.36475824333882817, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.37100331184527197, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.number)", "score": -0.38011637542082394, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.40698734559459554, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.year)", "score": -0.40872759005360493, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.4111256521529536, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.4184935714217067, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(movie),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4289808023828363, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.43174729273999346, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.oscar_id), oscar.id),oscar.number)", "score": -0.43204360876661935, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.44150715090000664, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),oscar.year,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.44352541455108907, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.4444791383644305, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.44632327147491696, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.4464118622421922, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))", "score": -0.15792030821103253, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.status),movie.status))", "score": -0.24483334998149076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,How She Move), movie.status),movie.status))", "score": -0.39954686144847074, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,How She Move), movie.status),movie.status))", "score": -0.4295532105352322, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.popularity),movie.status))", "score": -0.4973513500626723, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,How She Move), movie.status),movie.status))", "score": -0.5658785698797146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,How She Move), movie.status),movie.status))", "score": -0.5664601920034329, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,How She Move), movie.status),movie.status))", "score": -0.5675371883298794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.popularity),movie.status))", "score": -0.5842643918331305, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.vote_average),movie.status))", "score": -0.6089073436196486, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,How She Move),movie.status),movie.status))", "score": -0.6388280100945849, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,How She Move), movie.status),movie.status))", "score": -0.6656705055247585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))", "score": -0.6666021876917512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.vote_average))", "score": -0.6753387700628082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.vote_average),movie.status))", "score": -0.6958203853901068, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.031794225660632947, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.popularity),movie.revenue))", "score": -0.49029782633624563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_average))", "score": -0.5362339484072436, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.5485077562079823, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_count))", "score": -0.5495360361910571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2.2), movie.revenue),movie.revenue))", "score": -0.6300133171989728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2.2), movie.revenue),movie.revenue))", "score": -0.6439376774742414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.6798854517783184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.budget),movie.revenue))", "score": -0.6823250375255157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,2.2), movie.revenue),movie.revenue))", "score": -0.6981476846649457, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),cast.person_id))", "score": -0.7130238282061327, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.person_id),movie.revenue))", "score": -0.7212921104892303, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.popularity))", "score": -0.7414395677424181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.movie_id),movie.revenue))", "score": -0.7427546701892425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.2), movie.revenue),movie.revenue))", "score": -0.7556665857355256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.08967717212700069, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.16247499585386244, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.21559465677316178, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.2589987507470017, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3125958083010243, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3143629793767021, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32080761997185536, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.33562333415004025, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.3610283384529585, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.38444929498743236, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.3945969982280263, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,>,1999-12-16), genre.name),genre.name))", "score": -0.4001888265639946, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4025140638088898, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.41389846720061246, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.4336884569781862, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.title))", "score": -0.358629528520396, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.popularity),movie.title))", "score": -0.38821101569919847, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.id),movie.title))", "score": -0.39346416675834917, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.runtime))", "score": -0.43315619611530565, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.status),movie.title))", "score": -0.45471157514839433, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.runtime),movie.title))", "score": -0.46150680267601274, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.popularity),movie.runtime))", "score": -0.46273768329410814, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.id),movie.runtime))", "score": -0.46799083435325883, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.title),movie.title))", "score": -0.49793045604019426, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.5600841679026357, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.title))", "score": -0.5693597106943086, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.release_date))", "score": -0.5788932738005258, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.5869233221165397, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.release_date))", "score": -0.5881688165921987, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.title))", "score": -0.5961988826287796, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.07199451097272183, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19341682370162858, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22575422760634178, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.26853330253839686, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.27299429625832156, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31288498614844923, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.3135569508577723, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>=,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33426378689560365, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.36218013256271847, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.3665036257587485, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3669866142901372, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3675468489055729, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.37784480532939624, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>=,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3832424321307071, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.39813079806198215, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.14603543279087755, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2052432346278841, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2377301816050658, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.24041535670675618, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.2455223835364018, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.25976712327182394, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.28233506535916497, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3071316568378625, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.34813461414091124, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Sweden), movie.title),movie.title))", "score": -0.35231754194993015, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.35681713151561034, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3606762299382668, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.36708315767569566, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3755149262597298, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3806215915753173, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.055578446270374116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.42890380804155326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.4697468558588298, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.493069142823515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.revenue))", "score": -0.5238300927667296, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.6420617429539373, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6527482413439429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.6635513604167518, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.6672990180723926, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6686932160506324, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6839353614942725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.release_date))", "score": -0.7323493727235473, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.vote_average))", "score": -0.7353398569612182, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.revenue),movie.popularity))", "score": -0.7554747867616243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.budget,!=,26500000),movie.popularity),movie.popularity))", "score": -0.7972941887201159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.024726089759496972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.46626994034159, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.release_date))", "score": -0.5642527758318465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.status))", "score": -0.6503964482981246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.vote_average),movie.runtime))", "score": -0.6574907526082825, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6644761266361456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6663779054943006, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6828803454700392, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.release_date),movie.runtime))", "score": -0.7113076075620484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,2006-06-26),movie.runtime), movie.runtime))", "score": -0.712728095924831, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.id),movie.runtime)", "score": -0.7516944419379864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.7719360890041571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.vote_average))", "score": -0.7857336818415206, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.8142895733180922, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.status),movie.runtime))", "score": -0.8156480416364502, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.0633420704925144, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.24713460442937032, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.29195830312280313, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.vote_average)", "score": -0.3590437712380783, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4520597141375056, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.45276964026700417, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.4658780992769287, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4968834128309384, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.497593338960437, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5012754248567236, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.5107018016565896, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5124383530821723, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5149798851347657, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5346730000574024, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.revenue)", "score": -0.5427258550977032, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.vote_average))", "score": -0.18741125678505646, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.2622779015272597, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.revenue),movie.vote_average))", "score": -0.2896416348178652, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.3127324268303168, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.3243575845518561, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,tape recorder),movie.budget),movie.vote_average))", "score": -0.3348054367809523, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.34548968112012657, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.3498685208733512, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue),movie.vote_average))", "score": -0.36403846524484446, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.3959442064231837, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.40690501220751596, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,<,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.4080410938348598, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.vote_count),movie.vote_average))", "score": -0.4091270172774998, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.runtime))", "score": -0.41221999271497245, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.4331427414589741, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.13705445412234404, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.166200813555302, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.1849575392863626, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.24875672248442776, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.2540669039160107, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.2572220893841748, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.2675585395297594, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.26981237531255253, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.2856392722088188, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.30766666693156125, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.31916110821424687, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.budget),movie.revenue)", "score": -0.3475475987983095, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.3670641933782654, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.37113209999715263, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.39022257586068704, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.12532234814183338, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.32806690685427203, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.3491337582303673, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.36797369902879856, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.38427125516372207, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(person),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.40202275156609907, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.42417804733824854, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.42429657828579503, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.homepage,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.4254184528799691, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.4428850585778837, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.4468212560248125, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),country.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.44741000870874337, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.44816936747998143, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.45490856790073764, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.4581899381595821, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.19831063321908005, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.death_place))", "score": -0.21303964874823578, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.31519434666093615, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.34535227066838964, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.3886891530649599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.39632930460745897, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.41884707707241337, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.4217757107981015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.42648722861491245, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,crew.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4330107568433281, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.birth_place))", "score": -0.43650472632725723, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.4483056334333096, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1975-10-25), person.death_place),person.death_place))", "score": -0.45540748446364887, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.45593316301747777, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.birth_place),person.death_place))", "score": -0.46968388484288964, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1776205613589485, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2607634766137185, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,movie.id), genre.name),genre.name))", "score": -0.3087946263854717, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(has_genre),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3102795607871158, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,South Paris), genre.name),genre.name))", "score": -0.31050501101982014, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.34076310723654735, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,=,South Paris),getData(has_genre),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3461646347212378, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3604435416853309, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3722625544292028, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3767587166757814, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.person_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3772407427439875, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.oscar_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3798821263626883, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,genre.id), genre.name),genre.name))", "score": -0.382504676446046, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,South Paris),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,genre.id), genre.name),genre.name))", "score": -0.3882689912675535, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.39071194685408267, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.08255484965401876, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.15718171888329083, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.18004320798693121, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,is), country.name),country.name))", "score": -0.28312588803389027, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.3419481952554539, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3517228312988229, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38112471894803285, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.3849610664135353, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38739098677830514, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3885326240570063, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),spoken_language.iso_639_1,country.iso_3166_1), country.name),country.name))", "score": -0.39647781424553785, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.398909358785061, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.4027195761930718, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),movie.original_language))", "score": -0.4065749498626676, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(language),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4094248864270282, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.1274273572300834, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.1585705238991731, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.16638912377920415, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.21364290122513777, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.revenue),movie.revenue)", "score": -0.28363552801091946, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3091631503142513, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.31932069068948427, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.32696537815176413, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)", "score": -0.32745417264789434, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3322705387258165, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3555396060090514, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,<,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3707857441032953, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.3726164600014965, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),movie.revenue),movie.revenue))", "score": -0.38210247698417493, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.budget)", "score": -0.403791972660748, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.14533734090218786, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.2648367933143163, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.34618520505318884, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.4656846574653173, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.47018169380316976, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.runtime),movie.release_date))", "score": -0.4717417801875854, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.4813778898824239, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.popularity),movie.release_date))", "score": -0.4831759776134277, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5036638281453634, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5341154933121288, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5501363179791952, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.title),movie.release_date))", "score": -0.5542606259841705, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5706742606271291, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.status),movie.release_date))", "score": -0.5760246063728118, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.runtime),movie.release_date))", "score": -0.5912412791658426, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.20219105033146687, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.title))", "score": -0.27697496152632367, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(has_keyword),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.335845739395779, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.original_language))", "score": -0.35432144611761635, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.3696879697284678, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name),movie.title))", "score": -0.37581969765227097, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.vote_count))", "score": -0.3799312803033119, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.vote_average))", "score": -0.3812974651300771, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), oscar.number),movie.title))", "score": -0.3838813342178013, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(has_keyword),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.title))", "score": -0.41062965059063583, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.4172362930281646, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.41991330718688424, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.id),movie.title))", "score": -0.42235562660117404, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.42346220955279784, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(has_keyword),movie.id,oscar_winner.movie_id),getData(oscar),has_keyword.keyword_id,person.id),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.5683881785803051, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1263317607275543, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.12764321715385774, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.2214174071227998, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Sardaarji),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.23246556654502296, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.28723421194579046, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2974876885883658, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.3225712285819422, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),person.death_place))", "score": -0.33177862702440164, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3339942721457139, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3562483146740876, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Sardaarji), company.name),company.name))", "score": -0.35938829854445037, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),oscar.category,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.36187228509001984, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.3650868784525021, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(oscar_nominee),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3831631247025791, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),company.name,=,Sardaarji), company.name),company.name))", "score": -0.3856323972310969, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2072603221056392, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24052210973139826, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2465887135410508, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2715260212013859, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2901329142707265, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.31826896099563895, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,!=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3414111526407107, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3600973840313621, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.36515798810020883, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,>=,160),getData(has_genre),oscar.id,oscar_nominee.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3725211920170337, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.3733094887517064, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.3900952957605439, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.390506102792201, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.39714027893263437, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.3982468018112767, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,cs), movie.status),movie.status))", "score": -0.11265896768964012, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,cs), movie.status),movie.status))", "score": -0.20505033941662987, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,cs), movie.status),movie.status))", "score": -0.3281487724343606, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,cs), movie.status),movie.status))", "score": -0.38443439217007835, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,cs), movie.status),movie.status))", "score": -0.49544673176205833, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,=,cs), movie.status),movie.status))", "score": -0.5495168468514748, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar_nominee.movie_id,=,cs), movie.status),movie.status))", "score": -0.568644692615635, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.number,=,cs), movie.status),movie.status))", "score": -0.6124567291299172, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,cs), movie.status),movie.status))", "score": -0.6175395124191709, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6429238529999235, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6557559180012827, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,cs), movie.status),movie.vote_average))", "score": -0.6710661551514931, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),spoken_language.iso_639_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6840472610446283, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),production_country.iso_3166_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6891928224843522, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,country.iso_3166_1),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.689198794315402, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.10390630650215325, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1266798184876452, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13841212516855012, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,<=,Nine), company.name),company.name))", "score": -0.252700242938832, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Nine), company.name),company.name))", "score": -0.2595017250678171, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.32424669280790935, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.34182164387010405, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Nine), company.name),company.name))", "score": -0.35339936313594933, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3907326586827187, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,<=,Nine), company.name),company.name))", "score": -0.3924666576780517, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.4084705967259953, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Nine), company.name),company.name))", "score": -0.43055260272997914, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.4320721742671168, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4322345514558461, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.43586495514129986, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.03651542927628134, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.budget,<,7500000), company.name),company.name))", "score": -0.298449276059921, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,7500000), company.name),company.name))", "score": -0.3003739105724943, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3247522451002509, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,7500000), company.name),company.name))", "score": -0.3341779492071104, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3529513533832366, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),person.death_place))", "score": -0.36662262404880375, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), person.birth_place),company.name))", "score": -0.37483102322558975, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), oscar.category),company.name))", "score": -0.3850715261981135, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3862353958661947, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3887159562638839, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),movie.title))", "score": -0.3905293699895741, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,7500000),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3918060867521627, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,7500000), company.name),company.name))", "score": -0.3943786489782133, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.39647166320790034, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.1865141576904165, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.2012337721504886, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.23326048146799103, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.2498027480632182, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.26849034093181784, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.27632983423349167, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.28705266445655125, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3014749080087817, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.3135797506268247, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3356464025573124, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.name))", "score": -0.33637684699096493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),filter(merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),movie.status,=,writing (original story)),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3518731709192302, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.36873147679011087, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3691691281379449, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),oscar.id,person.id), person.birth_place),person.birth_place))", "score": -0.43497110198600464, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.10086680761393338, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.18718002417670782, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.20654193264276088, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.2628635801324658, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.2708674272732796, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.2928551492055353, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>=,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.3198904361661486, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.33928443523255125, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.3491767966952402, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3685387051612933, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3822845529969275, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>=,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.3883074441254203, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.3919463680413329, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),oscar.id,oscar_nominee.movie_id),movie.runtime,>,135),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.39930323063731415, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.39948099182458474, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.09696363069815561, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.17953632184071466, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.birth_place))", "score": -0.3087187834898941, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.birth_place))", "score": -0.3912914746324532, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), company.name),person.death_place))", "score": -0.6026552260736935, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.613971960672643, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1909-11-09), person.birth_place),person.death_place))", "score": -0.6341497881221585, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_day),person.death_place))", "score": -0.6341988981585018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.6563918132659576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),company.name))", "score": -0.6656650879303925, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1909-11-09),person.birth_place), person.death_place))", "score": -0.6763122691554599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.676993923849584, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.birth_place))", "score": -0.6792817530772298, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1909-11-09),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.6870266940370473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1909-11-09),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.6889935551355512, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.09868760759779989, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.19212187067806816, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.19273165655382643, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.2789252675532644, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.288580419444117, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.2958531624747688, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3074278420709887, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.revenue)", "score": -0.3106637281437699, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.3180702286713317, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.33247010965218804, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,movie.id), movie.popularity),movie.popularity)", "score": -0.3440447892484079, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.popularity)", "score": -0.3608927994090955, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)", "score": -0.38332186211621866, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.revenue)", "score": -0.4030320066529378, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.40470777709979644, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.14531019658416425, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.16083730932835816, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.17437029603019094, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.23578633350184025, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.24377377333337302, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.25654182506023326, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2732328684453623, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2949307402648844, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.30107861927215335, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.30152562814982536, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.333909024648893, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3917360666811558, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,keyword.id), keyword.name),keyword.name))", "score": -0.398371202343606, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4178081387508813, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.42072642675194954, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.13243338061861976, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.2224956168401931, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.2313032236967348, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.2795197942385032, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3114400128517796, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.3127207115416987, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.3213654599183081, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3269919880012894, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32944340444338727, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.33151443598750796, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.3354190412532215, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.34958783424699497, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), country.name),country.name))", "score": -0.3611754792096907, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38422354738175457, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3954835591147309, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.14668734289303806, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.23384588019560412, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.23659331558913516, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.2752315303423387, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.2790142854262204, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.28207300123437884, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.29749662553162326, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3000214626548328, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.number),oscar.number)", "score": -0.3117598054460576, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.3326320386847148, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.3525792186771446, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.death_day),oscar.number)", "score": -0.3692871398800667, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.38394543152095884, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.number),oscar.number)", "score": -0.3842974716870718, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), movie.runtime),oscar.number)", "score": -0.3843643186011095, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.29334024775198486, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.3262785493152478, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), keyword.name),movie.title))", "score": -0.3999382524507382, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), language.name),movie.title))", "score": -0.44983660865000274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),keyword.name))", "score": -0.4577465994971135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.486055959643636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),keyword.name))", "score": -0.49068490106037643, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.vote_count))", "score": -0.518994261206899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,260000000),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), movie.vote_count),movie.title))", "score": -0.5365864041634166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.5418459227044846, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.5425600080507138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.569550327899359, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.title,!=,260000000), person.name),movie.title))", "score": -0.5747267580128784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.5861260797381453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), language.name),movie.title))", "score": -0.5879896808781733, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.39851870405254886, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.4264005573350005, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.43498840945539996, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.4628702627378516, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.46508218365488574, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.49296403693733737, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.revenue),movie.vote_count))", "score": -0.4990536125260405, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5015518890577368, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.revenue),movie.vote_count))", "score": -0.5269354658084922, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5285480249804095, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5294337423401885, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5371483866256312, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.revenue),movie.vote_average))", "score": -0.5656170921283774, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), oscar.year),movie.vote_count))", "score": -0.5664116443949752, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5838901702445582, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.13479881913271344, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.19283233787603565, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.19800964041165497, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.21391048262032542, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.29276495677809294, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3011405738446113, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.3032005631923346, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.30681743135631007, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.3189671097482803, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.339378498284099, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.34991707965899915, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3688100810543762, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),oscar.number))", "score": -0.3801837946568765, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(oscar),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3811219408857591, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.3882858826496816, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.title))", "score": -0.09962683120102156, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.release_date),movie.title))", "score": -0.32098924317688216, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.budget),movie.title))", "score": -0.34351437487930525, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.title))", "score": -0.3785721580061363, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.runtime))", "score": -0.41698186048597563, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.id),movie.title))", "score": -0.44411998191208113, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.budget))", "score": -0.5092047894868301, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.5370152627452737, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.release_date))", "score": -0.5798762286576675, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5816198377433466, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5833329348388361, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.5982519129495861, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6018256999753558, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6052688061266539, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id), movie.title),movie.title))", "score": -0.650055787987073, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.053751565850689076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.4492270139379157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr),movie.popularity),movie.popularity))", "score": -0.4536136341616205, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr),movie.popularity),movie.popularity))", "score": -0.4719914214608354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.48715172065903234, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.popularity),movie.popularity))", "score": -0.5050018686888507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.popularity),movie.popularity))", "score": -0.5397358222985554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,=,tr),movie.popularity),movie.popularity))", "score": -0.5422344057587907, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.5645440262062217, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5676498042168269, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr),movie.popularity),movie.popularity))", "score": -0.5700836916004621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr),movie.popularity),movie.popularity))", "score": -0.58846146332496, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr),movie.popularity),movie.popularity))", "score": -0.5936134612068474, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.popularity),movie.popularity))", "score": -0.6075388997917088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,tr),movie.popularity),movie.popularity))", "score": -0.6119912485060623, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.popularity))", "score": -0.1921952749689808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.release_date))", "score": -0.29380849852168467, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),person.birth_day))", "score": -0.3104066039522877, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.popularity))", "score": -0.3540355946024647, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.revenue))", "score": -0.37385056271159556, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.runtime))", "score": -0.4465643550356617, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.release_date))", "score": -0.45564881815516856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.popularity))", "score": -0.4557150836189976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),person.birth_day))", "score": -0.4722469235857716, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.revenue))", "score": -0.5356908823450794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.vote_average))", "score": -0.5528539802035084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))", "score": -0.5573283071717015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),person.birth_day))", "score": -0.5739264126023045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.runtime),movie.popularity))", "score": -0.5741553540428868, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,27000000), movie.popularity),movie.popularity))", "score": -0.5858829688368132, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.15072633687846254, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.1800394860200144, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.25281395037854404, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.2529597251925757, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.2719472794143559, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.2816984023507123, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.28227287433412757, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2902089478912577, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,sl),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.3012320174588913, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.3012604285559078, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3060911123109069, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.31101155149226417, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_day))", "score": -0.3217351880011183, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),language.name,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3297824160985053, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_day))", "score": -0.35104833714267014, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.029761722624243703, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.3855349620207562, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.49958322694146773, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.566132766973169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.5678351948372438, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.5817236204966321, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6427479808553471, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,69), movie.revenue),movie.revenue))", "score": -0.674866257548274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.death_day))", "score": -0.7148559520355775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7694425413719728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7724774906746461, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.7988759179934277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,69), movie.revenue),movie.revenue))", "score": -0.8124321599825635, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_average))", "score": -0.8277312348000123, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.828556818269135, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.17552387518747042, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19085451796752037, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2952987571913915, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3068267964325689, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.326346839170409, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3264042306706957, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3731656782934502, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3934070409338232, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39368749593926117, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.year,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39561833313912725, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.vote_average,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39851881781096626, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4015519709377675, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.40446471481871765, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.genre_id),language.name,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.404470995783024, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),language.name))", "score": -0.5054648997684951, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.13706753436136976, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.17628151227294714, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.2588985438894648, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.27634148317111135, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.27858442523691646, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.29757578933299367, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.40130565804498675, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.runtime))", "score": -0.4247104338945524, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),person.death_place,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.42931532740887746, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.4387868037400746, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign), movie.id),movie.runtime)", "score": -0.46254563382379027, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.4664354088079252, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.46799656983962296, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.4836498993766929, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.5250191449823136, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.0141340492918971, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_count))", "score": -0.5192975735917571, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_average))", "score": -0.6578845715775969, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.7239230795457843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.revenue),movie.revenue))", "score": -0.743258465481631, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Released), movie.revenue),movie.revenue))", "score": -0.7696229639041121, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.revenue))", "score": -0.7988531513765338, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.8139504417049466, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.revenue),movie.revenue))", "score": -0.8157191696154769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.revenue))", "score": -0.8278124852731708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.837470147635031, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.revenue), movie.revenue))", "score": -0.8380985424664686, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.revenue))", "score": -0.8445990009859088, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.revenue),movie.revenue))", "score": -0.8653014790543239, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.popularity))", "score": -0.8724734521165374, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.05350036588788498, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.3922610226354022, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.3981730999336281, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4025917232935158, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4085038005917417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.45457822275568127, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4554816615583501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(person),movie.id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.46339834780256095, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.46639655841721483, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4732859319142576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))", "score": -0.47341450541424623, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.47561960055002234, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4756701202043887, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5061999309190647, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5071033503398634, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.15461217710970013, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.17843026110552548, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.18341891547185601, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.256211629248172, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.27889803836098215, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.27943187677311676, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.30774395880844513, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.37066894379766024, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.37110277227604277, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy),movie.title),movie.title))", "score": -0.38233508310172953, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.3847410116305409, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.38974977998881827, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.3901205979872157, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.4002638251514819, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.42073767337732354, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.03052199362718966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,75000000), movie.budget),movie.budget))", "score": -0.5133416106546065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.revenue),movie.budget))", "score": -0.5434180780866882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.5850861010320062, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.5957931245093789, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,75000000), movie.budget),movie.budget))", "score": -0.6020096536813071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6152021424795596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6206426311907993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6244939527516591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6313496362553954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.movie_id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6351008415971032, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6352009672303064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6963148715440184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,75000000), movie.budget),movie.budget))", "score": -0.7003274556336692, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.title))", "score": -0.7198038200003793, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.2861958458134037, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,cinematography),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.29610976695986385, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.3002350781377374, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(person),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.30287323839386426, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.30548291770577674, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.33065103494763315, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.34600604366691884, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.35576146899723754, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.35779023738702515, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,cinematography),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(getData(person),movie.release_date,!=,15843608),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.3631899691326303, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3711164777165232, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.37531966269172057, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3867373667656302, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.3906746714110062, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),None))", "score": -0.4016551286052996, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)", "score": -0.18008000889873382, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.30230485957662095, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.36802822385098843, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,6.6), movie.id),movie.budget)", "score": -0.3746826708388276, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,6.6), movie.id),movie.budget)", "score": -0.38181724060808653, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4233676900459309, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,=,6.6), movie.id),movie.budget)", "score": -0.4237618873374975, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4242260372152161, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.43093692423522045, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.43538498868117614, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,!=,6.6), movie.id),movie.budget)", "score": -0.4404060351131951, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.44278592467964, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4473215992218136, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),person.name,=,6.6), movie.id),movie.budget)", "score": -0.4547424618316131, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4597598900215561, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.popularity)", "score": -0.03089475435850398, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity)", "score": -0.5102962099730496, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,42000000), movie.id),movie.popularity)", "score": -0.5283956248457001, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,42000000), movie.id),movie.popularity)", "score": -0.5514157127680352, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.6060977585246954, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,42000000), movie.id),movie.popularity)", "score": -0.6756029699231206, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.6838394688405983, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.721863069451531, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.revenue)", "score": -0.7800156038758262, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.budget,>=,42000000),getData(movie),movie.revenue,movie.revenue), movie.id),movie.popularity)", "score": -0.7907044305558877, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.release_date)", "score": -0.8187379287229766, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.status),movie.popularity)", "score": -0.8440250805418607, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,42000000), movie.id),movie.popularity)", "score": -0.8446497413793163, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(filter(getData(movie),movie.budget,>,42000000),movie.popularity)", "score": -0.846063082181328, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.vote_average)", "score": -0.8572935918471728, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.12079069877872345, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.budget))", "score": -0.25561074177948506, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number),movie.budget))", "score": -0.27605654314469913, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,11),oscar.number),movie.budget))", "score": -0.2764928188059003, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,11),oscar.number),movie.budget))", "score": -0.3168845119704504, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.year),movie.budget))", "score": -0.32939649701686324, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11),movie.budget),movie.budget))", "score": -0.3301074909095428, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.33797395692471166, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),movie.runtime),movie.budget))", "score": -0.3540394439100561, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.3688181402144081, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.36980902666623106, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,11),oscar.number),movie.budget))", "score": -0.3833509206731055, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.category),movie.budget))", "score": -0.38831675237044433, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.category,=,11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number),movie.budget))", "score": -0.3916302986007544, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.4079189198607096, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.18014086322179393, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.1966944447770067, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),country.name,!=,Germany),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.3118113039666814, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.3421527767523197, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3493650915936002, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.36517235954172145, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.36776385369401554, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_company),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.37880127237864614, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.379411763629384, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.38596966281404055, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.39054893132115315, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.3987561261275674, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.39998444064285216, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.40564449512396006, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.43423701938390746, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.04345620483945822, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.3304277608622215, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5021591977444091, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5529762663045734, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.5538249723155755, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5568051598792391, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.5610877466650842, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Middletown, Rhode Island),person.name), person.name))", "score": -0.5733537762862397, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.6050385830738364, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),company.name,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.623639310382714, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6350429700905806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6511593709219596, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.birth_place))", "score": -0.6515893232062808, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.birth_day),person.name))", "score": -0.6567469529327354, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6684714803923271, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.1134015796879124, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.19228088725606438, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.21837488993966742, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.22131758669348178, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2499492385463124, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.29249148697104504, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.29756223107351004, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.3135362904730133, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3230665069711056, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3565915158977982, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.38780733903013037, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.3959319063201047, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.39729704564678997, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.4221168677785374, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.431606574395197, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.3949429462802136, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.43197489527036853, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.46041838100978877, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.46342042668075095, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.47297878972036367, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,<,4.5), genre.name),genre.name))", "score": -0.48130169255533234, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),language.name))", "score": -0.4831297373778482, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.4974503299999437, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.49883310127734, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.5004523756709058, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.5100107297810142, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,!=,4.5),getData(spoken_language),oscar.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.5109001351168702, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.5152330960341153, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), language.name),genre.name))", "score": -0.5184681583689278, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,!=,4.5),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id), language.name),genre.name))", "score": -0.5197656502249096, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.36775889797364625, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(movie),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.44166286581511083, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.death_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.49067066743819515, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5282671788172203, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5332009898110006, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.5544757387402265, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.5594095497340068, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),movie.budget)", "score": -0.5661672002997965, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),person.death_day)", "score": -0.5689327106873957, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5769644068117327, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.583139812014012, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5842392335093801, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5858869978782575, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5862026115924509, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.runtime)", "score": -0.5880736230077923, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.09276553252857411, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.36678060526173795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.3730416187099763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.4874467142872163, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), person.gender),movie.release_date))", "score": -0.5344116949490854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5511034526393951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5636369969705292, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.587875613688456, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.60040915801959, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.6107455671922045, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.6232791181685511, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.6277624548237362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.popularity),movie.release_date))", "score": -0.6470566914431402, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), crew.person_id),movie.release_date))", "score": -0.6635167860440561, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.675066673533004, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.1637639854264001, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.title,=,writing), company.name),company.name))", "score": -0.27157218744010614, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.runtime,=,writing), company.name),company.name))", "score": -0.28862957099717695, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,writing),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.2995753525912642, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.30295680795578717, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.movie_id),oscar.category,=,writing), company.name),company.name))", "score": -0.31024087135137157, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing), company.name),company.name))", "score": -0.3320883788783179, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.person_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.33944607012189254, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34011474574655554, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.person_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3432897463656646, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34491622091029117, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.oscar_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3500883692286136, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3522372678142592, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), person.death_place),company.name))", "score": -0.37672205568422623, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3962597840581622, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.08245603639443289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.popularity))", "score": -0.2928935651834763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.release_date))", "score": -0.3335254647936381, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.status))", "score": -0.4130742912348069, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.release_date))", "score": -0.4717478015627421, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.5185688719320751, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.title))", "score": -0.5273545448835648, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.id))", "score": -0.5348341827448166, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.popularity))", "score": -0.5439629935826815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.original_language))", "score": -0.5581222837026871, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.status),movie.release_date))", "score": -0.5864120879377879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.original_language),movie.release_date))", "score": -0.5888024130072154, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.6136445090342022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.635019621502579, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.runtime))", "score": -0.6370720331724442, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.04129569895303575, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4339824826379867, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4372261260881062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.45471850107361844, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4558821617289973, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4573963177196322, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.gender))", "score": -0.45873127888626186, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.46063996116975164, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.47793032915533495, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4792959968106428, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.5025808571761499, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.505824547973409, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.death_place))", "score": -0.5351549835104379, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5402492158920036, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5408322614672723, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.14429861219873932, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.1980474199360333, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.2640406603407714, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1920-05-11), movie.id),movie.popularity)", "score": -0.2702540722559167, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.2917589790585931, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.30971100112504785, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.3177894680780654, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.3196704636864737, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.32752522789415695, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.34550778679588706, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.35298194032241564, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.36345977795473716, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<,1920-05-11), movie.id),movie.popularity)", "score": -0.37131472678174865, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.37149300030598653, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<,1920-05-11),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.39539036380501125, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.14755146065353184, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.17847425940969644, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.25038951785030894, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.27019763156707866, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.277389809628446, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.27925968686989716, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.310810696976359, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,IMAX),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.32046704493026057, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.32411353102879725, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.3407687746824076, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.34152892678032165, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(production_company),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.3502156348541161, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.3529837205770226, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX), movie.id),movie.vote_average)", "score": -0.3545405127232565, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,IMAX),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.36053026928236503, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.08328369726121858, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.1706063773455001, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1953990893157735, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19812373291893998, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3125969980125571, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.32474246753174746, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.33218056517406025, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3400975807557558, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3483251842227085, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3931801588405918, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),person.death_place))", "score": -0.39939633655957096, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.4088427637251268, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4102520604806749, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.41230360407986844, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.4182078893601512, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
