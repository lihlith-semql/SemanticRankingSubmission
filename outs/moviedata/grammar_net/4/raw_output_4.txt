{"index": 0, "beams": [{"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))", "score": -0.15392094882099627, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,4856), movie.original_language),movie.original_language))", "score": -0.20699009330837725, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.2280030253705263, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,4856), movie.original_language),movie.original_language))", "score": -0.3003965172347307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,4856), movie.original_language),movie.original_language))", "score": -0.36301068993179797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,4856), movie.original_language),movie.original_language))", "score": -0.4557143601950884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5143474026811335, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), language.name),movie.original_language))", "score": -0.5682911496958104, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,<,4856), movie.original_language),movie.original_language))", "score": -0.5770865027803314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5822031082599508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,null,4856), movie.original_language),movie.original_language))", "score": -0.5847652706679582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.5934507308570836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,4856), movie.original_language),movie.original_language))", "score": -0.5981224119421283, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(spoken_language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<,4856), movie.original_language),movie.original_language))", "score": -0.6280549081877331, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with 4856 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,4856), movie.original_language),movie.original_language))", "score": -0.6302319204796731, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,4856), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 1, "beams": [{"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.10803405651313369, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.title))", "score": -0.1996274412558705, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.release_date))", "score": -0.35696097919208114, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.budget))", "score": -0.47383433663708274, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.budget))", "score": -0.4811754262955219, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.budget))", "score": -0.49679517829281394, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.budget))", "score": -0.5561494565517933, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.release_date),movie.title))", "score": -0.5654277213798196, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,<,100), movie.budget),movie.title))", "score": -0.5727688110382587, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.title),movie.title))", "score": -0.5883885630355508, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,100), movie.budget),movie.budget))", "score": -0.608820912445478, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.runtime))", "score": -0.6107024223492772, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.revenue),movie.budget))", "score": -0.6186903723464638, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>=,100), movie.budget),movie.title))", "score": -0.6477428412945301, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}, {"orig_question": "How many movies are there with the budgets of the movies with a runtime larger than 100?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.id),movie.budget))", "score": -0.6654763230071694, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,100), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 2, "beams": [{"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.12693218095635314, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.19098448090810588, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.popularity))", "score": -0.25921036691467586, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),movie.vote_count),movie.popularity))", "score": -0.25980043015350757, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.2882071490153938, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.revenue),movie.popularity))", "score": -0.3173559421376883, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,=,alamo),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.3284248993101916, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_average),movie.popularity))", "score": -0.33818366869496586, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo), movie.revenue),movie.popularity))", "score": -0.34597660530949814, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))", "score": -0.36968522432334716, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,alamo),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.popularity))", "score": -0.3813048584363462, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.popularity))", "score": -0.38587904033599935, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue),movie.popularity))", "score": -0.4018010488965859, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,alamo),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.release_date))", "score": -0.4081664077748732, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the smallest vote count among all the movies with the keyword \"alamo\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,alamo),movie.vote_count),movie.release_date))", "score": -0.4143606011307591, "correct_code": "done(extractValues(min(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,alamo),movie.vote_count),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 3, "beams": [{"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)", "score": -0.0545884384514034, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.id),movie.runtime)", "score": -0.4000165512214551, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.runtime),movie.runtime)", "score": -0.41411255372893746, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Post Production), movie.id),movie.runtime)", "score": -0.4625424166099352, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Post Production), movie.id),movie.runtime)", "score": -0.5374933339698983, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.5669118996322878, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.5809659334236682, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Post Production), movie.id),movie.runtime)", "score": -0.6471028203444544, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6518347548949486, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(filter(getData(movie),movie.status,=,Post Production),movie.runtime)", "score": -0.6537958226381546, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6552216296051435, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Post Production), movie.id),movie.runtime)", "score": -0.6658888975718353, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6761904901177479, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Post Production), movie.runtime),movie.runtime)", "score": -0.6902445239091283, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}, {"orig_question": "Which is the average runtime of the movies which are in post production?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Post Production),merge(getData(crew),getData(movie),crew.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.runtime)", "score": -0.7179612933112681, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Post Production), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 4, "beams": [{"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.2479678328133754, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.27453058719685, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),movie.status),movie.status))", "score": -0.28521764536660904, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.popularity),movie.status))", "score": -0.2888311949066568, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.3001507733712979, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))", "score": -0.31043026133794227, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.name),movie.status))", "score": -0.31524158168432725, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.vote_average),movie.status))", "score": -0.3169246899900574, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.status),movie.status))", "score": -0.31897548766220113, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,m),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.34578368776200785, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.status),movie.status))", "score": -0.3574687452941186, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.popularity),movie.status))", "score": -0.3584437213202288, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.vote_average),movie.status))", "score": -0.366528239675944, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m), movie.status),movie.status))", "score": -0.3709551205258243, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}, {"orig_question": "Whats the movie status of the most popular movie of which male people were part of the crew?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id),movie.status),movie.status))", "score": -0.3824008568005532, "correct_code": "done(extractValues(max(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,=,m),movie.popularity),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 5, "beams": [{"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.03878998072336644, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<=,5.1), movie.id),movie.runtime)", "score": -0.4463436280314363, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,5.1), movie.id),movie.runtime)", "score": -0.4554065161044897, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime)", "score": -0.519504963870725, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.vote_average),movie.vote_average,<,5.1), movie.id),movie.runtime)", "score": -0.6559858375772272, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,5.1),movie.runtime)", "score": -0.676021948437685, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,5.1), movie.id),movie.runtime)", "score": -0.702993359835511, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,5.1), movie.id),movie.runtime)", "score": -0.769392040891795, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.vote_average)", "score": -0.8186603438317889, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.id)", "score": -0.8206823058760374, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.runtime),movie.runtime))", "score": -0.8291058489267016, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,null,5.1), movie.id),movie.runtime)", "score": -0.833406158047133, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,<,5.1), movie.id),movie.runtime)", "score": -0.8679788425748355, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.release_date)", "score": -0.8793660005679425, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}, {"orig_question": "What is the average runtime of movies that have a vote average below 5.1?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<=,5.1),movie.runtime)", "score": -0.8858473595625732, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,5.1), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 6, "beams": [{"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.1507621245421721, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.15858621999937536, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Adventure),movie.revenue),movie.vote_count))", "score": -0.20088621868567413, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,<,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.27015808569855476, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.35287742155699675, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,!=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.3627711286048811, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.36959510763926473, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.vote_count))", "score": -0.377419203096468, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,Adventure),movie.revenue),movie.vote_count))", "score": -0.41921941423614395, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.4356872266808302, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.revenue),movie.vote_count))", "score": -0.443511317154124, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Adventure),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.revenue))", "score": -0.4533525890445112, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,<,Adventure),movie.revenue),movie.vote_count))", "score": -0.4534670399163005, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Adventure),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_count),movie.vote_count))", "score": -0.45374930050517126, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}, {"orig_question": "What's the vote count of the movie with the lowest revenue in the Adventure genre?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Adventure),movie.vote_count),movie.vote_count))", "score": -0.4548257394648479, "correct_code": "done(extractValues(min(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Adventure),getData(movie),has_genre.movie_id,movie.id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 7, "beams": [{"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.0828984946728012, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.16267586729372852, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.27583199652895496, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.27945374464330186, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.budget),movie.title))", "score": -0.32555060990523743, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),language.name,!=,Magyar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.title),movie.title))", "score": -0.34667798225029733, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.36932301233614456, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3728405278531011, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,Magyar), movie.title),movie.title))", "score": -0.38005635583929326, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.3901220138544553, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.budget))", "score": -0.4084404542828672, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.41421227398618216, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))", "score": -0.4215886599151828, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Magyar), movie.title),movie.title))", "score": -0.4383560062054544, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are he movie titles where the language is not Magyar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Magyar), movie.title),movie.original_language))", "score": -0.44102584786953697, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,Magyar),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 8, "beams": [{"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.vote_average))", "score": -0.2141630593832815, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.vote_average))", "score": -0.27619087138737086, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.vote_average))", "score": -0.28744029441440944, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.popularity))", "score": -0.3370232004817808, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.36154520699346904, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.popularity))", "score": -0.39905101248587016, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.popularity))", "score": -0.41030043551290873, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.revenue),movie.revenue))", "score": -0.4235730189975584, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.vote_average),movie.revenue))", "score": -0.43482244202459697, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,66787908), movie.popularity),movie.vote_average))", "score": -0.608439986142912, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.original_language),movie.vote_average))", "score": -0.6148225013312185, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.title),movie.vote_average))", "score": -0.6192692462500418, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.status),movie.vote_average))", "score": -0.6521330420073355, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.6928430384471723, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}, {"orig_question": "Are there movies that have a revenue below 66787908?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,66787908), movie.popularity),movie.revenue))", "score": -0.6950499578505829, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,66787908), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 9, "beams": [{"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))", "score": -0.06443999051407445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,2159280), movie.revenue),movie.revenue))", "score": -0.305794323750888, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2159280), movie.revenue),movie.revenue))", "score": -0.46540623433247674, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,2159280), movie.revenue),movie.revenue))", "score": -0.5793388918536948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,>=,2159280), movie.revenue),movie.revenue))", "score": -0.5825961185182678, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,2159280), movie.revenue),movie.revenue))", "score": -0.5929893804277526, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>,2159280), movie.revenue),movie.revenue))", "score": -0.6147718862193869, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.vote_count))", "score": -0.6255584375030594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.budget,>=,2159280),movie.revenue),movie.revenue))", "score": -0.6415062587911962, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_count),movie.revenue))", "score": -0.646225644464721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,2159280), movie.revenue),movie.revenue))", "score": -0.6796607807773398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.vote_average),movie.revenue))", "score": -0.729813290949096, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.budget,>=,2159280),movie.revenue),movie.revenue))", "score": -0.731538591797289, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7515518618311035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the budget of at least 2159280.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,2159280), movie.revenue),movie.revenue))", "score": -0.7813942227076041, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,2159280), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 10, "beams": [{"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.original_language,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.2876692731224466, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.2924521211825777, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.43595086641167835, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4547014944387539, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.456900297822518, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.47565092584959356, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.4835282494596633, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5006372441678698, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5022788774867388, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5106496214222322, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.status,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5110505614720751, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),person.id,cast.person_id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5180820455572746, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),genre.id,movie.id),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5193879275717169, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.release_date,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5254629049741197, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with highest revenue excluding movies with type TV Movie?", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,!=,TV Movie),movie.revenue),movie.vote_count))", "score": -0.5315991082098435, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 11, "beams": [{"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.14702624392521102, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.release_date))", "score": -0.1550945745111676, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.status))", "score": -0.37172301423561294, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.popularity))", "score": -0.42631358590733726, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.release_date))", "score": -0.43438191649329383, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.5326303774199914, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.popularity))", "score": -0.5898341471038293, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,>,2007-07-07),movie.popularity), movie.release_date))", "score": -0.5983362728438806, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.status),movie.status))", "score": -0.6510103562177392, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.popularity),movie.runtime))", "score": -0.6561021388770314, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),movie.release_date,>,2007-07-07),movie.popularity), movie.id))", "score": -0.6693435208580922, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.release_date),movie.popularity))", "score": -0.6811270782054635, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_average),movie.popularity))", "score": -0.6874993511737557, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6880313459114404, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there movies released after 2007-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,2007-07-07), movie.popularity),movie.popularity))", "score": -0.6883303824142786, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>,2007-07-07), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 12, "beams": [{"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.popularity))", "score": -0.3093170088759507, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.popularity))", "score": -0.31062890710745705, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.birth_day))", "score": -0.34694267930899514, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.birth_day))", "score": -0.3482545775405015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.popularity))", "score": -0.4184525323144044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),movie.popularity))", "score": -0.4311116647950257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),person.gender))", "score": -0.4418018472424592, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),person.gender))", "score": -0.44311374547396554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),person.birth_day))", "score": -0.4560782027474488, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.revenue),person.birth_day))", "score": -0.46873733522807015, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),movie.popularity))", "score": -0.49661582829867257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.death_place),movie.popularity))", "score": -0.5295940351716126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.gender),person.birth_day))", "score": -0.534241498731717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), person.birth_day),movie.release_date))", "score": -0.5352180761328782, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}, {"orig_question": "On which different dates were the movies with a vote average of at least 6.2 released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.popularity),movie.release_date))", "score": -0.5365299743643845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.2), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 13, "beams": [{"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.23650833047674585, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.2955771423266724, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3291423104881328, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),language.name))", "score": -0.3415993706373972, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.34178020237753715, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))", "score": -0.3612467427053173, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3631017878442695, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.vote_count),movie.original_language))", "score": -0.3640123237339872, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.3882111223380594, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),movie.vote_count),movie.original_language))", "score": -0.3976670029090695, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),language.name))", "score": -0.4006681824873238, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.4008490142274637, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(oscar_winner),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.42217059969419607, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),person.id,oscar_winner.person_id),movie.vote_count),movie.original_language))", "score": -0.42308113558391375, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}, {"orig_question": "In which language is the movie with the highest vote count starring a person born after 1982-05-09?", "inferred_code": "done(extractValues(max(merge(filter(getData(person),person.birth_day,>,1982-05-09),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,movie.id),movie.vote_count),movie.original_language))", "score": -0.43173107258880694, "correct_code": "done(extractValues(max(merge(merge(filter(getData(person),person.birth_day,>,1982-05-09),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_count),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 14, "beams": [{"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.02527242091309745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.5836070094519528, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.release_date))", "score": -0.59426786036056, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.id),movie.popularity)", "score": -0.633797308665309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.release_date),movie.popularity))", "score": -0.645515966534731, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.6499522268568398, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,1995-07-07),movie.popularity), movie.popularity))", "score": -0.6872588317855843, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.6952637374197366, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7004936252051266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7200691018515499, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7344281588011654, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7663405057246564, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.status))", "score": -0.769976929135737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.7701758060866268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}, {"orig_question": "What is the popularity of movies released on the date 1995-07-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))", "score": -0.8152114342083223, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1995-07-07), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 15, "beams": [{"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3677212463112536, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3679658757490437, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3983026844678491, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,>=,1933-04-26), oscar.id),oscar.year)", "score": -0.3985472753420224, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4034708582502335, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.41738468380449467, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.41811766473864476, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.41815196105803215, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_day,<=,1933-04-26), oscar.id),oscar.year)", "score": -0.4183965904958223, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4297262797730715, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.432031490292906, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.44364010532733267, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.44411792952340123, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id), oscar.id),oscar.year)", "score": -0.44437312539221163, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}, {"orig_question": "What is the sum of the oscar years where the persons birthday was later or the same as 1933-04-26?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1933-04-26),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.id),oscar.year)", "score": -0.4531794085902798, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1933-04-26), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 16, "beams": [{"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Foreign), movie.budget),movie.budget))", "score": -0.32021281359993736, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,Foreign), movie.budget),movie.budget))", "score": -0.3724585795243911, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Foreign), movie.budget),movie.budget))", "score": -0.4132029437860183, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Foreign), movie.budget),movie.budget))", "score": -0.41837170956932823, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,Foreign), movie.budget),movie.budget))", "score": -0.4370016181310348, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,>=,Foreign), movie.budget),movie.budget))", "score": -0.47061747549378197, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Foreign), movie.id),movie.budget)", "score": -0.5051962084672038, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Foreign), movie.budget),movie.budget))", "score": -0.5073330724080733, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,!=,Foreign), movie.budget),movie.budget))", "score": -0.5113618397554092, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,Foreign), movie.budget),movie.budget))", "score": -0.5284586870511703, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,Foreign), movie.budget),movie.budget))", "score": -0.5351605141004256, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,Foreign), movie.budget),movie.budget))", "score": -0.535305935463839, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,Foreign), movie.budget),movie.budget))", "score": -0.5595788541650109, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,Foreign), movie.id),movie.budget)", "score": -0.6010946066136872, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}, {"orig_question": "What is the budget of the least popular foreign movie?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_average,=,Foreign),movie.revenue),movie.budget))", "score": -0.6462360351106327, "correct_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.popularity),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 17, "beams": [{"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.17515402206780367, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.2380597663782563, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.2584270040686481, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.25996254792910134, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2751083164700921, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.2802079412164666, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.29267801490705814, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.29535370975745734, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.29607622685652707, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_day),person.birth_day))", "score": -0.30148799052879993, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.30782378344804884, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.3129234081944234, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), person.birth_day),person.birth_day))", "score": -0.32133278717745134, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_average,>,2.3), person.birth_day),person.birth_day))", "score": -0.328069195027054, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}, {"orig_question": "When are the birthdays from the persons who where involved in a movie with average vote higher than 2.3?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))", "score": -0.33582327794990113, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.3),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 18, "beams": [{"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.12146235881119226, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.17790090347905382, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.22478729639097392, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.sub_category))", "score": -0.22747536019707879, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.24133648387993742, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))", "score": -0.24847154510864894, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,=,Rumored),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.2913801203559522, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.2993262704748616, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.number))", "score": -0.32476645581815916, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.3308002977768605, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_winner),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3318886539053942, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.category))", "score": -0.33641946074921836, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))", "score": -0.34293237601935594, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.category))", "score": -0.3517964826884306, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}, {"orig_question": "In how many oscar categories are there oscar nominees for movies with status rumored? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.number))", "score": -0.3527408791464297, "correct_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 19, "beams": [{"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.443855487475664, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.4596804518456665, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.4604338575282118, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.name))", "score": -0.46452170435594997, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_day),person.birth_day))", "score": -0.4811000744084978, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.name))", "score": -0.48256954106972694, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5002674237172535, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.5015293116576576, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.birth_day),person.name))", "score": -0.5033342178499262, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(oscar),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5150347894874436, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.5168457937698013, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),person.death_day,=,My Lucky Star),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.name),person.name))", "score": -0.5189566377192103, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),oscar.number,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.5199376074026058, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.death_day,=,My Lucky Star),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.oscar_id), person.death_day),person.name))", "score": -0.5209336405975394, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}, {"orig_question": "Did any oscar winners star in the film \"My Lucky Star\"?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,person.id),person.id,oscar_winner.person_id),person.death_day,=,My Lucky Star), person.death_day),person.birth_day))", "score": -0.524418400881718, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,My Lucky Star),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 20, "beams": [{"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.16610913153029394, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.1989891162514759, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.2644731698217836, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.2682086276709502, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.28225334872240676, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.29735315454296557, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.status))", "score": -0.3143258537258275, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.31513333344358874, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))", "score": -0.33035238981919207, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,!=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.runtime))", "score": -0.36323237454037405, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.36331718744601665, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.release_date))", "score": -0.36657266596243987, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.gender,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,oscar_winner.person_id), movie.title),movie.title))", "score": -0.3682370790700763, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,Joanna Foley),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.title),movie.title))", "score": -0.3777550813607962, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}, {"orig_question": "In how many movies has Joanna Foley worked as crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.gender,=,Joanna Foley),getData(movie),crew.movie_id,movie.id), movie.title),movie.runtime))", "score": -0.38129331689721613, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.name,=,Joanna Foley),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 21, "beams": [{"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.release_date),movie.release_date))", "score": -0.14528738672754044, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.1721374997860665, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3209171229215307, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.33189789371658357, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3340994081913383, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.popularity),movie.release_date))", "score": -0.3342271955170094, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3383478168014853, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,!=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3511948555261394, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.number),movie.release_date))", "score": -0.35544506450218905, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3585489971186542, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))", "score": -0.35886362591831944, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.37136112663798293, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,<,2012), movie.release_date),movie.release_date))", "score": -0.3768329882371763, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.year,>=,2012),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.release_date))", "score": -0.3926740953233064, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}, {"orig_question": "When was the movie release date for the oscar nominated movie in the year 2012?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012), movie.budget),movie.release_date))", "score": -0.3979163306495752, "correct_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,2012),oscar.year),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 22, "beams": [{"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.043543940268136794, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,258022233), movie.vote_count),movie.vote_count))", "score": -0.24072549105403596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.title))", "score": -0.6098754232261854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_average),movie.vote_count))", "score": -0.6147096253444033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,258022233), movie.vote_count),movie.vote_count))", "score": -0.6236594355177658, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.movie_id),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6260111593015472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6300974865906724, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,cast.person_id),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6371167227589468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6388125532284903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.revenue))", "score": -0.6556102459762769, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_average))", "score": -0.6572244589660841, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.6691001766339468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.revenue),movie.vote_count))", "score": -0.6717487073947268, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,258022233),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue), movie.vote_count),movie.vote_count))", "score": -0.7007687890872735, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the movies vote counts of movies with a revenue lower or equal to 2580222233?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))", "score": -0.7123461595838307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,258022233), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 23, "beams": [{"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.22040915000089684, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.29791938747401125, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30443770596394193, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.3386176857463978, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.35016949720271856, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.birth_day,>=,1934-03-28), country.name),country.name))", "score": -0.3521034270200632, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,oscar_winner.person_id), country.name),country.name))", "score": -0.363720046974517, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.36456804237586166, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id),person.birth_day,<=,1934-03-28), country.name),country.name))", "score": -0.37269602362772825, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),oscar_winner.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.3841760440100256, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_winner.person_id), country.name),country.name))", "score": -0.3862402248288364, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(country),production_country.movie_id,country.iso_3166_1), country.name),country.name))", "score": -0.39307497270062075, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.death_day,<=,1934-03-28), country.name),country.name))", "score": -0.4001099789404497, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(merge(merge(filter(getData(person),person.birth_day,<,1934-03-28),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),crew.movie_id,oscar_winner.person_id), country.name),country.name))", "score": -0.40472817870756167, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "In how many distinct country names where film with a crew member born before in 1934-03-28 or before produced ? ", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,crew.person_id), country.name),country.name))", "score": -0.40580779314133414, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<=,1934-03-28),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 24, "beams": [{"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.25237239191231436, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.252946733640495, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.25767186774813655, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,???), genre.name),genre.name))", "score": -0.2582462094763172, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.2698049927073789, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,=,???), genre.name),genre.name))", "score": -0.28703822542951274, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.29669595547334576, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3009632937429617, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3046309687387619, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,???),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3056338231752684, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,<,???), genre.name),genre.name))", "score": -0.31257659904419133, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,???), genre.name),genre.name))", "score": -0.31392916715447755, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,genre.id),language.iso_639_1,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))", "score": -0.3160075615002699, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,???),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3241242620297662, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}, {"orig_question": "How many genres are there with movies with another spoken language than ????", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(language),language.name,=,???),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.movie_id),language.name,!=,???), genre.name),genre.name))", "score": -0.33173120670072537, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(language),merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,!=,???), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 25, "beams": [{"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.14668290973527082, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.15205650773655366, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.23385672846326336, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,549), keyword.name),keyword.name))", "score": -0.24038682382302365, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,549),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3219076200140809, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), movie.vote_count),keyword.name))", "score": -0.34382917619191333, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), movie.vote_count),keyword.name))", "score": -0.3492027741931962, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),movie.vote_count))", "score": -0.3668363641341689, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.3690817452147189, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), keyword.name),movie.vote_count))", "score": -0.37220996213545177, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), oscar.number),keyword.name))", "score": -0.3818681451284884, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,movie.vote_count),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.38465481392164813, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,549), oscar.number),keyword.name))", "score": -0.3872417431297712, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),company.name))", "score": -0.3889736228657891, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "Are there movies with keywords and a vote count over 549?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>,549), keyword.name),keyword.name))", "score": -0.389698199680084, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,549),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 26, "beams": [{"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.1939160944423672, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.21552456655706284, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.26433888739825506, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.2732359250165644, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fame),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2781012017003533, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.2909323866825571, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.29131083238609334, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.300390865382823, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id),genre.name,=,Fame), genre.name),genre.name))", "score": -0.3013786737856424, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),genre.name,=,Fame),getData(has_genre),genre.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3100428617150483, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3259456759884383, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.32786766196630457, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),genre.name,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.34402059235669263, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),person.gender,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3459425783345589, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}, {"orig_question": "What are the genres of Fame?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Fame),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),genre.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3562654941261203, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Fame), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 27, "beams": [{"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.0597716816641252, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.18394296491894874, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,119),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1843572405157952, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,!=,119), company.name),company.name))", "score": -0.2362636040116612, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,>=,119), company.name),company.name))", "score": -0.2392833730270281, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.death_place))", "score": -0.29804341562760855, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.3454346440921194, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.38491862104176744, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.38985991853850405, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.39175512341623914, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.4030221022976346, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),person.birth_place))", "score": -0.4081845714857489, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.4204438352208922, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.runtime,!=,119), company.name),company.name))", "score": -0.42408435264086486, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "What are the names of companies that have produced a movie that does not have a runtime of 119?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,!=,119), person.death_place),company.name))", "score": -0.42495028115663563, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,119),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 28, "beams": [{"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.15758787498634774, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.25060378418129403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.3825468982831808, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4013059105054708, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4042545522825094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4182308819395713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.44905586124735064, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4497738967911573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.47556280747812707, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4808330725209089, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4943218197004171, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,>=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.4972704614774557, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.homepage,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5428584779874654, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5527085331996204, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies released on May 1st 1984?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,!=,1984-05-01), movie.revenue),movie.revenue))", "score": -0.5565086049755337, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,1984-05-01), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 29, "beams": [{"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.07170510304454508, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.15282484321736545, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ko),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19586278394829376, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.29101094158584, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.32781330464021624, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3406796073378585, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3430466452596607, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,!=,ko), genre.name),genre.name))", "score": -0.3465299860111333, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3612398227514719, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3738164000949361, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,<,ko), genre.name),genre.name))", "score": -0.38096418683329675, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,!=,ko),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38214063482238014, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,!=,ko), genre.name),genre.name))", "score": -0.38372754698952033, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,!=,ko), genre.name),genre.name))", "score": -0.3931243373610638, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}, {"orig_question": "What are the genre name of movies that are not with the original language ko?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,ko),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4139929619776659, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,!=,ko), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 30, "beams": [{"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.vote_average))", "score": -0.0804357796732802, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),movie.vote_average))", "score": -0.30912424696725793, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),oscar.year))", "score": -0.3784383188758511, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>,621), movie.vote_average),movie.vote_average))", "score": -0.45791065113735385, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.revenue),movie.vote_average))", "score": -0.5133803643111605, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.popularity),movie.vote_average))", "score": -0.5558796979312319, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,621), movie.vote_average),movie.vote_average))", "score": -0.5802630612452049, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), oscar.year),oscar.year))", "score": -0.6071267861698288, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), person.name),movie.vote_average))", "score": -0.613957033288898, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,621), movie.vote_average),movie.vote_average))", "score": -0.6174226047296543, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.popularity))", "score": -0.6566598366771359, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,621),movie.vote_average), movie.vote_average))", "score": -0.6587290241150185, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_count),movie.vote_average))", "score": -0.6740871526126284, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.vote_average),movie.revenue))", "score": -0.6744808506045956, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}, {"orig_question": "are there movies with at least 621 votes?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,621),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,language.iso_639_1),oscar.id,oscar_nominee.oscar_id), movie.vote_average),movie.vote_average))", "score": -0.8509448351527593, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,621), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 31, "beams": [{"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.23739945334264156, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.2573973611924925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.29177373703597853, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), oscar.year),person.name))", "score": -0.31177164488582954, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.32058542957501146, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.name),person.name))", "score": -0.3405833374248624, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3500075614620378, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.36139051366219743, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.death_day),person.name))", "score": -0.3766675506252064, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.38138842151204844, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.38729701561134033, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.person_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.3954634790665255, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.death_day),person.name))", "score": -0.3966654584750574, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.43588698192809516, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}, {"orig_question": "Did someone win an oscar in the category of documentary (short subject)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar.id,oscar.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (short subject)), person.birth_day),person.name))", "score": -0.44067039348288817, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (short subject)),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 32, "beams": [{"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.02744488484338011, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_count)", "score": -0.6509977604511962, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average))", "score": -0.659152539963543, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6866254479112447, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.6883869976343465, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.revenue)", "score": -0.6967635450357774, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.vote_average),movie.vote_average)", "score": -0.7016212060740171, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7161900519606549, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.7166625177523508, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.7176388940885514, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Illuminata), movie.id),movie.vote_average)", "score": -0.7198794830917298, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.7279121281982698, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.title,=,Illuminata),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id), movie.id),movie.vote_average)", "score": -0.728888485536218, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,Illuminata),movie.vote_average),movie.vote_average))", "score": -0.7648991268943064, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}, {"orig_question": "What is the summed vote average of movies with the title Illuminata?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Illuminata), movie.id),movie.vote_average)", "score": -0.8154872352697183, "correct_code": "sum(distinct(filter(getData(movie),movie.title,=,Illuminata), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 33, "beams": [{"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.08574198702262947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),person.death_place))", "score": -0.2227753266124637, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.385100412684551, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.4299074369846494, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.520426887589565, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1985-12-11), person.death_place),person.death_place))", "score": -0.5221337522743852, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.5615969309947104, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1985-12-11), person.death_place),person.death_place))", "score": -0.5616375091849477, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.death_place),movie.release_date))", "score": -0.5669407765744836, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,<,1985-12-11),person.death_place), person.death_place))", "score": -0.6116294571984326, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), person.death_place),person.gender))", "score": -0.6553446906982572, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1985-12-11), person.death_place),person.death_place))", "score": -0.6574602271793992, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<,1985-12-11), movie.release_date),person.death_place))", "score": -0.663923026098928, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1985-12-11), person.death_place),person.death_place))", "score": -0.670897382813564, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}, {"orig_question": "What are the places of death of persons born before 1985-12-11?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,1985-12-11), person.birth_place),person.death_place))", "score": -0.6986302705845446, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,<=,1985-12-11), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 34, "beams": [{"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.0354710462580722, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,7.2), movie.id),movie.runtime)", "score": -0.5032494481040337, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.runtime),movie.runtime)", "score": -0.5148317249994182, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_count,=,7.2), movie.id),movie.runtime)", "score": -0.5295745116186814, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)", "score": -0.7134826089844143, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7246463965925466, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.7465022887083969, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7558029892329126, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.7570803528973875, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,=,7.2), movie.id),movie.runtime)", "score": -0.7610323517863257, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,7.2), movie.id),movie.runtime)", "score": -0.7703331020749205, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,>,7.2), movie.id),movie.runtime)", "score": -0.8082492534501414, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,7.2), movie.id),movie.runtime)", "score": -0.8201087800922853, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.vote_average)", "score": -0.8216802697348821, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}, {"orig_question": "What is the average runtime of movies with a rating of 7.2?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,7.2), movie.id),movie.id)", "score": -0.8258017690998293, "correct_code": "avg(filter(getData(movie),movie.vote_average,=,7.2),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 35, "beams": [{"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.3297828337572316, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3446388434483698, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07), country.name),country.name))", "score": -0.35211874888750705, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3525693172442356, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.35484447003699127, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.3598279561667618, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.36143576825450174, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.36697476383889577, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,oscar_nominee.oscar_id), country.name),country.name))", "score": -0.3746559005706314, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.376128100402642, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),merge(getData(movie),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar_nominee.movie_id,movie.id), country.name),country.name))", "score": -0.37743119710259493, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.oscar_id,movie.id), country.name),country.name))", "score": -0.3797723833456677, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(country),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_place,=,1961-03-07), country.name),country.name))", "score": -0.3892075861198397, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1961-03-07),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.39065490688761023, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}, {"orig_question": "Is there any production country in which an oscar nominated movie has been produced and a where a person was involved whose birthday is 1961-03-07?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,1961-03-07),getData(country),oscar_nominee.oscar_id,country.iso_3166_1), country.name),country.name))", "score": -0.39482369260236894, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,=,1961-03-07),merge(merge(getData(oscar_nominee),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),oscar_nominee.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1),person.id,oscar_nominee.person_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 36, "beams": [{"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.06756894358841237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.3608277732746314, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,1045), movie.vote_average),movie.vote_average))", "score": -0.48754888934490737, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.vote_average),movie.vote_average))", "score": -0.5223772243916756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,1045), movie.vote_average),movie.vote_average))", "score": -0.5326367334782844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.status),movie.vote_average))", "score": -0.53786412368936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.popularity),movie.vote_average))", "score": -0.565125082837767, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.6019885822970537, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.6784017006721115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,1045), movie.vote_average),movie.vote_average))", "score": -0.7035678545798874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,=,1045), movie.id),movie.vote_average)", "score": -0.7115091779991909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_count))", "score": -0.7148783742304659, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,<=,1045), movie.id),movie.vote_average)", "score": -0.7231285587253091, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(min(filter(getData(movie),movie.vote_count,<=,1045),movie.vote_average),movie.vote_average))", "score": -0.7370600886570173, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}, {"orig_question": "What ratings did movies with at most 1045 votes get?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), person.name),movie.vote_average))", "score": -0.7500819759297883, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,1045), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 37, "beams": [{"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.08706582333088739, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.1368361553303424, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.23084512023836481, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2725979370415183, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.29885161174125247, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>=,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3056231905401156, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.31779555000418674, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>=,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33055109940601113, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_day))", "score": -0.3372541008352647, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.budget,>,380000000), person.death_place),person.death_place))", "score": -0.34476459348810173, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.35008407536349595, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.35877002471361524, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>=,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.death_place))", "score": -0.36756588200364176, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.budget,>,380000000),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.person_id), person.death_place),person.death_place))", "score": -0.381206580809293, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "How many different death places are there for oscar nominees in movies with a budget over 380000000?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.budget,>,380000000),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_day))", "score": -0.38136353807437506, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,>,380000000),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 38, "beams": [{"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.23912328355872842, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.2656330373272994, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.26568740524228335, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2854980694702942, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,3.5),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.30451661917867706, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),oscar.year,>=,3.5), language.name),language.name))", "score": -0.3047208528656133, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3192898196964495, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.32063676167480765, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.3209457729206457, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,3.5),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.32435744995926163, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),language.name,>=,3.5), language.name),language.name))", "score": -0.33642582666603493, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,>,3.5), language.name),language.name))", "score": -0.34344088473909157, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.year,>=,3.5), language.name),language.name))", "score": -0.35503638646512686, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),language.iso_639_1,spoken_language.movie_id),movie.vote_average,>=,3.5), language.name),language.name))", "score": -0.3657394038700313, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "In how many languages are movies spoken with a rating better or equal than 3.5?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.vote_average,<=,3.5), language.name),language.name))", "score": -0.36977298711608425, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,>=,3.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 39, "beams": [{"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.06311547664336103, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.17129790318540472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,185), movie.vote_count),movie.vote_count))", "score": -0.5556302918248548, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,185), movie.vote_count),movie.vote_count))", "score": -0.5881979717069044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))", "score": -0.6569666730683821, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,185), movie.vote_count),movie.vote_count))", "score": -0.6669579995923414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.revenue),movie.vote_count))", "score": -0.6954516491514369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.title))", "score": -0.733464294591613, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.revenue))", "score": -0.7369280993134453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_average),movie.vote_count))", "score": -0.7504656037908717, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_average))", "score": -0.7701798020989372, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,185), movie.vote_count),movie.vote_count))", "score": -0.7703231346804387, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.vote_count),movie.vote_count))", "score": -0.7740224393528479, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,185), movie.revenue),movie.vote_count))", "score": -0.8036340756934806, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}, {"orig_question": "What were the vote counts for movies with a runtime shorter than 185?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,null,185), movie.vote_count),movie.vote_count))", "score": -0.8271190179639234, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,185), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 40, "beams": [{"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.10288213122991051, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.14673974671014292, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.1581270036885379, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.16487081570453005, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<=,64572262),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.28062492464200395, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,64572262), company.name),company.name))", "score": -0.3780538222640095, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>=,64572262), company.name),company.name))", "score": -0.37894277450322655, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.revenue,<=,64572262),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3895490200047003, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),person.death_place))", "score": -0.4002147055570479, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), person.birth_place),company.name))", "score": -0.42770190117986356, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<=,64572262),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.4291290650731644, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),production_company.company_id))", "score": -0.4315195046551448, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.revenue,<=,64572262), company.name),company.name))", "score": -0.4364015125333055, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.revenue,>=,64572262), company.name),company.name))", "score": -0.45276166240501814, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a revenue of at most 64572262 Dollars?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,64572262), company.name),company.name))", "score": -0.4567693773656357, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<=,64572262), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 41, "beams": [{"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.12540310934801532, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.1729331859452264, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.1822868306797672, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.22473122112359525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,127869379),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.267888663017511, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.283596161842203, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.2889752940942085, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,>,127869379),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.2936961672216341, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.revenue,>,127869379), person.birth_day),person.birth_day))", "score": -0.314236127066188, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,127869379),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3272742550277279, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.death_day),person.birth_day))", "score": -0.3520916845486968, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.name))", "score": -0.35724248953056087, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),person.birth_day,!=,f),oscar_nominee.person_id,person.id),movie.revenue,<,127869379), person.birth_day),person.birth_day))", "score": -0.3574714842533223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379), person.birth_day),person.name))", "score": -0.3642453043553466, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}, {"orig_question": "Is there a birthday for a male oscar nominee that starred in a movie with a revenue smaller than 127869378?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.revenue,<,127869379),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,crew.movie_id),person.birth_day,>,127869379),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.45485589903029877, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),filter(merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.gender,!=,f),movie.id,oscar_nominee.movie_id),movie.revenue,<=,127869379), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 42, "beams": [{"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.08588598311868575, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.18608037575772474, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.23756272612086224, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.name))", "score": -0.2430192482483265, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>=,2006), person.birth_day),person.birth_day))", "score": -0.28493098949201023, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.year,>,2006),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.29432212723849216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.name))", "score": -0.30951142296893136, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.3260025992748229, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.gender))", "score": -0.33160989106592037, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.37715546294662217, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>=,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.37823858504974484, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006), person.birth_day),person.birth_day))", "score": -0.3821468540145467, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006),getData(person),oscar_winner.person_id,person.id), person.birth_day),person.name))", "score": -0.3832969532965801, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.birth_day),person.gender))", "score": -0.4099894119245906, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}, {"orig_question": "Is there any birthday of a person who won the oscar after the year 2006?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.year,>,2006),filter(merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.year,>,2006),oscar.id,oscar_winner.oscar_id), person.birth_day),person.birth_day))", "score": -0.4320823664409826, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.year,>,2006), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 43, "beams": [{"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.09573690457182238, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))", "score": -0.1658703559442074, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.4474136397287436, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.45030162999319145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.4847563277200107, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5157240506244202, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.gender))", "score": -0.5204350813655765, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5241194571589155, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.5265700653683791, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.533418293229123, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1942-11-12),getData(cast),person.id,cast.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5371732813580993, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5424133420039366, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5530667336317778, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1942-11-12),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.5639127483757368, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of persons who died after 1942-11-12?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1942-11-12), person.birth_place),person.name))", "score": -0.6064593918054015, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1942-11-12), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 44, "beams": [{"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.22291182528970513, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.23454308254253564, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.death_place),person.death_place))", "score": -0.2619696442237289, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.2685283610440984, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.2932161985201618, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,41),person.death_place),person.death_place))", "score": -0.3320096993838431, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(getData(oscar_nominee),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.33397615533617087, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3420258068305198, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),getData(person),cast.person_id,person.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.3591664790862789, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(getData(oscar_nominee),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),person.death_place),person.death_place))", "score": -0.3777976291222412, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.number,=,41), person.death_place),person.death_place))", "score": -0.3900075161254809, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))", "score": -0.39865836435947716, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,41),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_winner.oscar_id),movie.budget),person.death_place))", "score": -0.4200702978056554, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,41),getData(person),oscar_winner.person_id,movie.id),person.death_place),person.death_place))", "score": -0.4258273081422032, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "What are the death places of actors who won the oscar with the number 41?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,=,41),merge(filter(merge(getData(oscar_nominee),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,41),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id), person.death_place),person.death_place))", "score": -0.4549876469616852, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.number,=,41),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 45, "beams": [{"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.18064276515468408, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_average))", "score": -0.21705161596537215, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.2321053595646888, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.24037401105710407, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.2756517858090244, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,factory worker),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.27963611794513715, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_average),movie.vote_average))", "score": -0.28618000932217047, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_average),movie.vote_average))", "score": -0.29800274331623605, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker),movie.vote_count),movie.vote_average))", "score": -0.30826883774441605, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.3191891790592704, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_average),movie.vote_average))", "score": -0.33775814789610153, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_count))", "score": -0.3394075764949516, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))", "score": -0.34218325410648326, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,factory worker), movie.vote_average),movie.vote_count))", "score": -0.3614042766199705, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}, {"orig_question": "What are the movie vote averages for movies that have the keyword factory worker? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,factory worker),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.vote_count),movie.vote_average))", "score": -0.3856077269290995, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,factory worker),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 46, "beams": [{"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.034130165753595065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>,72), movie.status),movie.status))", "score": -0.35965048096113605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.vote_average))", "score": -0.4919689487942378, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.popularity),movie.status))", "score": -0.506899549094669, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,72), movie.status),movie.status))", "score": -0.5647603752368013, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.popularity))", "score": -0.6162908565529506, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.vote_average),movie.status))", "score": -0.6184229389109532, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), person.gender),movie.status))", "score": -0.6241653099932591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))", "score": -0.6272869419917697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,72), movie.status),movie.status))", "score": -0.6572157623522799, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,72), movie.status),movie.status))", "score": -0.6919223549120943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,72), movie.status),movie.status))", "score": -0.7048339726679842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,72), movie.status),movie.status))", "score": -0.7372979121792014, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.runtime))", "score": -0.7522202026375453, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}, {"orig_question": "Which are the status of the movies whose runtime is lower than 72?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.original_language),movie.status))", "score": -0.7600839868464391, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,72), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 47, "beams": [{"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.05376168775364931, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.popularity))", "score": -0.2618841199855524, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,2.6), movie.popularity),movie.popularity))", "score": -0.4192809878568369, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.revenue))", "score": -0.5249339762794989, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.6), movie.popularity),movie.popularity))", "score": -0.5500983415822702, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,2.6), movie.popularity),movie.popularity))", "score": -0.6739325343351084, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.6), movie.popularity),movie.popularity))", "score": -0.6799646435956674, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,2.6), movie.popularity),movie.popularity))", "score": -0.6862110055935773, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.vote_average))", "score": -0.7085299912560004, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,2.6), movie.popularity),movie.revenue))", "score": -0.733056408511402, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.revenue),movie.popularity))", "score": -0.7560558366076293, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,null,2.6), movie.popularity),movie.popularity))", "score": -0.7564124881009775, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.popularity))", "score": -0.772351389972755, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.id),movie.popularity))", "score": -0.831867699553186, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}, {"orig_question": "What are the movie popularities of movies with ratings of 2.6?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,2.6), movie.popularity),movie.id))", "score": -0.8455524865257757, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,=,2.6),movie.popularity), movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 48, "beams": [{"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,>,46), movie.status),movie.status))", "score": -0.26403116012193245, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),movie.vote_count),movie.status))", "score": -0.28962014527326574, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.status),movie.status))", "score": -0.31366819887367337, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.status),movie.status))", "score": -0.3166519126181635, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count,>,46), movie.status),movie.status))", "score": -0.32632235738689486, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.year),movie.status))", "score": -0.35542168273546704, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.popularity),movie.status))", "score": -0.3641750795916765, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_average),movie.status))", "score": -0.36647347256149465, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.popularity),movie.status))", "score": -0.36715879333616663, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.vote_average),movie.status))", "score": -0.3694571863059848, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.status),movie.status))", "score": -0.3798176885275052, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46),oscar.number),movie.status))", "score": -0.3901395604842271, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.number,>,46),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id), movie.vote_average),movie.status))", "score": -0.39324841665594507, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.status),movie.status))", "score": -0.40063315466754945, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}, {"orig_question": "What is the status of the movies with a minimal vote count and won an oscar with the number greater than 46?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.person_id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.number,>,46), movie.status),movie.status))", "score": -0.4036168684120396, "correct_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,>=,46),getData(movie),oscar_winner.movie_id,movie.id),movie.vote_count),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 49, "beams": [{"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.2110190888372601, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.2582292864799004, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.id),movie.runtime)", "score": -0.2697280571217675, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.27657499955300185, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),movie.runtime),movie.runtime))", "score": -0.28181907226108405, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,MVL Incredible Productions), movie.runtime),movie.runtime)", "score": -0.33281515356777774, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name),movie.runtime))", "score": -0.3689094862314544, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.38212063775964905, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name),movie.runtime))", "score": -0.39575892526598067, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,MVL Incredible Productions),getData(movie),production_company.movie_id,movie.id),movie.runtime),movie.runtime))", "score": -0.4177527904377456, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.runtime))", "score": -0.4246087721540496, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.4322644103644957, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,MVL Incredible Productions),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.4413922297730677, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.runtime),movie.runtime))", "score": -0.44615954989556433, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}, {"orig_question": "What is the runtime of the most popular movie produced by MVL Incredible Productions?", "inferred_code": "done(extractValues(max(merge(merge(getData(person),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.runtime))", "score": -0.4651124336198886, "correct_code": "done(extractValues(max(merge(filter(getData(company),company.name,=,MVL Incredible Productions),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.popularity),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 50, "beams": [{"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.05093517032072094, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.vote_count)", "score": -0.3462236233848877, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_count),movie.vote_count)", "score": -0.5581489854553487, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.vote_count)", "score": -0.589239628406799, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.5931937658986786, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.iso_639_1),movie.status,=,Rumored), movie.id),movie.vote_count)", "score": -0.600110805082417, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.6113721688034438, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.vote_average),movie.vote_count)", "score": -0.6296671342716869, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.7086276034993075, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(filter(getData(movie),movie.status,!=,Rumored),movie.vote_count)", "score": -0.7204610570705099, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_average)", "score": -0.722699384505009, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,=,Rumored),getData(movie),movie.id,movie.vote_average), movie.id),movie.vote_count)", "score": -0.7628384277297773, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,<,Rumored), movie.id),movie.vote_count)", "score": -0.767358716274445, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Rumored), movie.id),movie.vote_count)", "score": -0.8046982808803371, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}, {"orig_question": "What is the average movie vote count of all movies with a movie status of \"Rumoured\"?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.budget)", "score": -0.8142868203853569, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 51, "beams": [{"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.15127398475065143, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.16051945717228078, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,=,Rumored), keyword.name),keyword.name))", "score": -0.1717169269179687, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2029213240397932, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.21360272731804497, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.22357706737552757, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,!=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.25507492034044776, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3163035904145198, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3798731741193442, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3872321082497808, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.40194904857446645, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.42407265897676794, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),keyword.name))", "score": -0.4520291414899948, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.status,!=,Rumored), keyword.name),person.name))", "score": -0.46805505321025953, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "What are the keyword names if the movie status is Rumored ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Rumored),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),person.name))", "score": -0.4691269581675584, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Rumored),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 52, "beams": [{"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.05335320340964245, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.39079589298489736, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),language.name))", "score": -0.42438550288352417, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), spoken_language.iso_639_1),movie.original_language))", "score": -0.57823813608411, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.vote_average))", "score": -0.5814142971721594, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.status),movie.original_language))", "score": -0.6225436394524877, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.title))", "score": -0.6309096961704199, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,movie.vote_count),movie.vote_count,>,950), language.name),movie.original_language))", "score": -0.632268821399807, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),spoken_language.iso_639_1))", "score": -0.6634348183360999, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.status))", "score": -0.6835018544879858, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.vote_average),movie.original_language))", "score": -0.6880800788712804, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,950), movie.original_language),movie.original_language))", "score": -0.7067292330975761, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))", "score": -0.7357882560536382, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),spoken_language.movie_id))", "score": -0.74893708521995, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}, {"orig_question": "Of how many original languages are there movies which have a vote count of more than 950?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), country.name),movie.original_language))", "score": -0.7491723363709752, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,>,950), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 53, "beams": [{"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.03996689501633155, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,30127963),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.21048230420364375, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2550818445178536, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.32059480078273356, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.35999518924941426, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3753768499776768, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,30127963), country.name),country.name))", "score": -0.3780824486847335, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,30127963), country.name),country.name))", "score": -0.38300259066912434, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.3989340794561258, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),production_country.iso_3166_1))", "score": -0.40145270972299013, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),movie.original_language))", "score": -0.40608011680225303, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),movie.revenue,<,30127963), country.name),country.name))", "score": -0.4192314648868154, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,30127963), country.name),country.name))", "score": -0.42184635687264416, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(production_country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.4235829890432012, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}, {"orig_question": "Are there any countries in which movies were produced which generated a revenue of less than 30127963?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.movie_id,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,30127963), country.name),country.name))", "score": -0.42940547901169174, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,30127963),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 54, "beams": [{"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.14923342647070872, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.16332071459304134, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.21075289963123134, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.2685057761502014, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.budget))", "score": -0.27949575892637113, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_count),movie.budget))", "score": -0.3199667427675758, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy),movie.vote_average),movie.budget))", "score": -0.38011300932669373, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,!=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.38981701881979364, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.title))", "score": -0.3964860799728252, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.4056487959690386, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Fantasy),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.4130843076024528, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,Fantasy),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.41330966883105724, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "sum(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Fantasy), movie.id),movie.budget)", "score": -0.4378181457907861, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))", "score": -0.4392420173548731, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}, {"orig_question": "What is the movie budget for the movie with the maximum vote average in the genre Fantasy?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Fantasy),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id),movie.vote_average),movie.budget))", "score": -0.4606380323225236, "correct_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Fantasy),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.vote_average),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 55, "beams": [{"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.popularity))", "score": -0.03859413194732042, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))", "score": -0.26623881574050756, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.revenue))", "score": -0.6140512434139964, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.revenue),movie.popularity))", "score": -0.6377363606661675, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.popularity),movie.vote_average))", "score": -0.6745353547230479, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,347325802), movie.popularity),movie.popularity))", "score": -0.683931769694027, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<,347325802), movie.vote_average),movie.popularity))", "score": -0.6856950923174736, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,347325802), movie.popularity),movie.popularity))", "score": -0.6938911693941918, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,<,347325802), movie.popularity),movie.popularity))", "score": -0.7066853063952294, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,<=,347325802), movie.popularity),movie.popularity))", "score": -0.7242155891217408, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,347325802), movie.popularity),movie.popularity))", "score": -0.7254732268702355, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>=,347325802), movie.popularity),movie.popularity))", "score": -0.7544827681340394, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),movie.popularity,language.iso_639_1),movie.id,movie.revenue),movie.revenue,<,347325802), movie.popularity),movie.popularity))", "score": -0.8014189163480983, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,!=,347325802), movie.popularity),movie.popularity))", "score": -0.8037229996480164, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}, {"orig_question": "Is there a movie popularity with a movie revenue less than 347325802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.revenue))", "score": -0.8416959272071836, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.revenue,>,347325802), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 56, "beams": [{"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.05024425528915503, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)", "score": -0.35754753999511085, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<,Show Me), movie.id),movie.revenue)", "score": -0.5627890432259336, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6499933878522587, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6739797397696063, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6870045514589964, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6880441902744356, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.6903596178842907, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,Show Me),movie.revenue),movie.revenue))", "score": -0.6909717083908617, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,Show Me), movie.revenue),movie.revenue))", "score": -0.6919657495454885, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id),movie.title,=,Show Me), movie.id),movie.revenue)", "score": -0.7059715853599619, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,movie.id),movie.title,=,Show Me), movie.revenue),movie.revenue)", "score": -0.7081030985441042, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,<=,Show Me), movie.id),movie.revenue)", "score": -0.7101362740437915, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.budget)", "score": -0.7232961894928062, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}, {"orig_question": "What is the summed revenue of movies, excluding the movie with the title Show Me?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Show Me), movie.id),movie.vote_count)", "score": -0.7239892995636054, "correct_code": "sum(distinct(filter(getData(movie),movie.title,!=,Show Me), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 57, "beams": [{"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))", "score": -0.18495902945829626, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.19724170749617806, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.23221588732209106, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.sub_category))", "score": -0.24692500050109556, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.2474907258272673, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.category))", "score": -0.2618784720951533, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.category))", "score": -0.28726749870688656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.sub_category),oscar.sub_category))", "score": -0.29474758369106213, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31156176510007083, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.category))", "score": -0.32434945079758226, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1971-01-05),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.33005068582714847, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.category),oscar.sub_category))", "score": -0.33452435657068136, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.category),oscar.sub_category))", "score": -0.3438994137268514, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>=,1971-01-05), oscar.sub_category),oscar.category))", "score": -0.34979919507585766, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}, {"orig_question": "Are there any oscar categories in which people were nominated who died after 1971-01-05?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,>,1971-01-05),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.movie_id,oscar.id),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.category),oscar.category))", "score": -0.3592356275746698, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,>,1971-01-05), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 58, "beams": [{"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.3627485634996002, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.3653884160429896, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.3666896744050069, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.38056023668515665, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.name,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.number)", "score": -0.41267849338625273, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.4177598017078512, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.42818966024611993, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),oscar.year)", "score": -0.4321307711515266, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.43234868294995327, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.4329316223500183, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id),person.birth_place,=,Gr\u00fcnstadt), person.name),oscar.number)", "score": -0.45543654838870395, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.year)", "score": -0.4571620883421145, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,movie.id),person.id,oscar_winner.person_id), person.birth_place),oscar.number)", "score": -0.4631884065872049, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_place,=,Gr\u00fcnstadt),getData(oscar_winner),person.id,oscar_winner.person_id),getData(person),oscar_winner.person_id,person.id), movie.runtime),oscar.number)", "score": -0.46377679197832705, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the Oscars of the Oscar winner, whose birthplace was Gr\u00fcnstadt?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)", "score": -0.4651906250521996, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.birth_place,=,Gr\u00fcnstadt), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 59, "beams": [{"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.21613599366077735, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.21862594595893073, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.245239914015947, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.24841499864551225, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2509049509436656, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.2704768758571064, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2858150658324453, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.2883050181305987, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3180940708171802, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.death_day,<=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.3205840231153336, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_day,<,1948-06-03),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.sub_category),oscar.sub_category))", "score": -0.3418606023288005, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.37232738740072013, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,=,1948-06-03), oscar.sub_category),oscar.sub_category))", "score": -0.37481730979541683, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.38478945361013756, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "For how many different sub categories were people born before 1948-06-03 nominated for an Oscar?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.birth_day,<,1948-06-03), oscar.category),oscar.sub_category))", "score": -0.38727940590829096, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,<,1948-06-03),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 60, "beams": [{"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.09253930239022091, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)", "score": -0.22974481644469263, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.24112712347104262, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),keyword.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.2594542188660713, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2599952076170839, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.2871928710904752, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.vote_count),movie.vote_count)", "score": -0.31464199450697383, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.31710450314515776, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.vote_count),movie.vote_count)", "score": -0.3236226040377374, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,3Mark Entertainment),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.3918320322960392, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),person.death_day,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.39548509982604785, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.revenue)", "score": -0.4042772267740554, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(merge(merge(filter(getData(company),company.name,=,3Mark Entertainment),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_count)", "score": -0.4118136147918272, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),oscar.number,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.41528828835718434, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}, {"orig_question": "What is the summed vote count of the movies produced by 3Mark Entertainment?", "inferred_code": "sum(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id),company.name,=,3Mark Entertainment), movie.id),movie.vote_count)", "score": -0.4185661260357036, "correct_code": "sum(distinct(merge(filter(getData(company),company.name,=,3Mark Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 61, "beams": [{"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.05569590689288661, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity)", "score": -0.267210032022168, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.id),movie.popularity)", "score": -0.4945324383843596, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.570595292082655, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,=,2000-08-21), movie.id),movie.popularity)", "score": -0.5793417970455843, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6075479470266004, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,movie.id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6390231953979143, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6400040388506083, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.birth_day,<,2000-08-21), movie.id),movie.popularity)", "score": -0.6477177076236271, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<,2000-08-21), movie.release_date),movie.popularity)", "score": -0.6510126800075219, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),movie.release_date,<,2000-08-21), movie.id),movie.popularity)", "score": -0.674088367441666, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,<=,2000-08-21), movie.popularity),movie.popularity)", "score": -0.706046563513641, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),movie.release_date,<,2000-08-21), movie.popularity),movie.popularity)", "score": -0.7177694305625865, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(filter(getData(movie),movie.release_date,=,2000-08-21),movie.popularity)", "score": -0.7374133147818808, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies released before 2000-08-21?", "inferred_code": "avg(distinct(filter(getData(movie),movie.runtime,<,2000-08-21), movie.id),movie.popularity)", "score": -0.7593641118678776, "correct_code": "avg(distinct(filter(getData(movie),movie.release_date,>,2000-08-21), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 62, "beams": [{"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.20176819948392222, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.2656332650585682, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.popularity))", "score": -0.31595883382397005, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.release_date))", "score": -0.37982389939861605, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.status))", "score": -0.4145469316645176, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.4783162330641062, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5076987599386484, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.release_date),movie.status))", "score": -0.5287375660045655, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.5421812986387522, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.status),movie.popularity))", "score": -0.5555814863546402, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,2011-10-06), movie.popularity),movie.popularity))", "score": -0.5602851431249292, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.id))", "score": -0.5704687484903843, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2011-10-06), movie.popularity),movie.release_date))", "score": -0.5715638255132944, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2011-10-06), movie.popularity),movie.title))", "score": -0.5737012275858433, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}, {"orig_question": "Are there movies that were released before June 10th 2011?", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.release_date), movie.id))", "score": -0.5767029941052897, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.release_date,<=,2011-10-06),movie.revenue), movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 63, "beams": [{"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.04797638050901105, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.27321270681767523, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.3299799432895359, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.vote_average)", "score": -0.41864469744190436, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.473084098770741, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.47971913513510944, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.vote_average)", "score": -0.4834500687381091, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.4953919596232521, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.527925349122975, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5298513352426016, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.vote_average)", "score": -0.5402173052099697, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5433534609475721, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5507297291962754, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,ar), movie.id),movie.runtime)", "score": -0.5521591960951128, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}, {"orig_question": "What is the total length of all movies with original language ar?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),language.name,=,ar), movie.id),movie.runtime)", "score": -0.5587078237385028, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,ar), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 64, "beams": [{"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))", "score": -0.18200302267359802, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.birth_day))", "score": -0.30700921410607407, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.gender))", "score": -0.34251810753630707, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.birth_day))", "score": -0.3496658890871913, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.name))", "score": -0.40272498274134705, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.birth_day))", "score": -0.4276952795116813, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.gender))", "score": -0.4675242989687831, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.gender))", "score": -0.5101809739499004, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.birth_day),person.name))", "score": -0.5277311741738231, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.death_place))", "score": -0.5390654220609576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,f), person.birth_day),person.birth_day))", "score": -0.5527014709441573, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,f), person.birth_day),person.name))", "score": -0.5703878491549403, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.name),person.birth_day))", "score": -0.5816463078735978, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.birth_day),person.gender))", "score": -0.5882103643743903, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}, {"orig_question": "When were the people that their gender is \"f\" born?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.5890121306656511, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 65, "beams": [{"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.019734610548766796, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,6.1), movie.revenue),movie.revenue))", "score": -0.4224354072721326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.popularity),movie.revenue))", "score": -0.5789206041736179, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_count))", "score": -0.6558002091260278, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.vote_average))", "score": -0.6637106991620385, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.popularity))", "score": -0.692669615826162, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))", "score": -0.7097597308893455, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,6.1), movie.revenue),movie.revenue))", "score": -0.7195463820607984, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,6.1), movie.revenue),movie.revenue))", "score": -0.7615298076780164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.budget))", "score": -0.8103529072614037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.vote_average),movie.revenue))", "score": -0.8191291703624302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.budget),movie.revenue))", "score": -0.8319974555415683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,>,6.1),movie.revenue), movie.revenue))", "score": -0.8377761386145721, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),cast.person_id))", "score": -0.842385158619436, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}, {"orig_question": "What are the different revenues of movies that have a vote average of over 6.1?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),cast.movie_id))", "score": -0.8562877631993615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,6.1), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 66, "beams": [{"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.25240349566023973, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),crew.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.27156838878882106, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.27893042668969087, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.28203193236313207, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,crew.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2971676673202434, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.2972520405126589, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_winner),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.3011437847572017, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.30361075578759605, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_nominee),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.30536758077160797, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_winner),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3054273813421679, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,=,killer robot),merge(getData(has_keyword),getData(person),oscar_winner.person_id,person.id),keyword.id,has_keyword.keyword_id), person.birth_place),person.birth_place))", "score": -0.31752486459150847, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(person),oscar_winner.person_id,person.id),keyword.name,=,killer robot), person.birth_place),person.birth_place))", "score": -0.3566655373448453, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_nominee),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,None,killer robot), None),None))", "score": -0.3637652133322983, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(oscar_winner),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),merge(getData(movie),merge(getData(crew),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),has_keyword.movie_id,has_keyword.keyword_id),keyword.name,None,killer robot), None),None))", "score": -0.3638163112521141, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}, {"orig_question": "Where are the birth places of the oscar winner in the movies with the keyword killer robot?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(person),oscar_winner.person_id,person.id),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,killer robot), person.death_place),person.birth_place))", "score": -0.3756186968380377, "correct_code": "done(extractValues(distinct(merge(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,killer robot),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 67, "beams": [{"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.12427868153458363, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.16625541136534053, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.18357927750419292, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.22168438633514959, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.23291884434388915, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))", "score": -0.23743799031055887, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.24287266719922268, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.2936560366731749, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.314844317537248, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),company.name,=,Lucasfilm),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3338543695237867, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,company.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3353653238785338, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.34328677915041594, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3444872249905847, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Lucasfilm),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.35354712942637384, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}, {"orig_question": "How many movies have been produced by the company called Lucasfilm?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Lucasfilm),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3617579800251917, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Lucasfilm), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 68, "beams": [{"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_place),person.death_place))", "score": -0.17853099362400826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_place),person.death_place))", "score": -0.21516198174504098, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.birth_place),person.death_place))", "score": -0.2482972617581254, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.birth_place),person.death_place))", "score": -0.2849282498791581, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), company.name),person.death_place))", "score": -0.46119813875702675, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.4897339431833475, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), company.name),person.death_place))", "score": -0.49782912687805947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,f),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.death_place))", "score": -0.5115691858629188, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,f), person.death_day),person.death_place))", "score": -0.5277201111748582, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,f), person.death_place),person.death_place))", "score": -0.541928139980787, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,f), person.death_day),person.death_place))", "score": -0.5643510992958909, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5717207163389352, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.577159686653708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.5792649315356135, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}, {"orig_question": "Where did person whose gender is not f died?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,f),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.5847038342561145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 69, "beams": [{"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,1986-05-30),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.232804416835257, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.304646675725475, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.33080088572675403, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.33559957980580307, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.34095093920945063, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.3504240390275178, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,crew.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3508618787948172, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3617537898070821, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.death_day,!=,1986-05-30), country.name),country.name))", "score": -0.36724815790202237, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.36779759293945974, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.runtime,!=,1986-05-30), country.name),country.name))", "score": -0.3682743920869597, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.3765782576641121, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.release_date,!=,1986-05-30), country.name),country.name))", "score": -0.3773936364327328, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.38137695174316116, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}, {"orig_question": "How many production countries are there for movies which have not been released on 1986-05-30?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30),production_country.movie_id,country.iso_3166_1),person.id,oscar_winner.person_id),person.birth_day,!=,1986-05-30), country.name),country.name))", "score": -0.48865214633595194, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.release_date,!=,1986-05-30), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 70, "beams": [{"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.1092353088024538, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.3184975010517519, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.34807404104503803, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.3713107414853075, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.41216769043239765, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.43807616058620624, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), keyword.name),person.death_place))", "score": -0.46021660391124897, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_place),person.death_place))", "score": -0.47220110783024033, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), genre.name),person.death_place))", "score": -0.4880224091175478, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),company.name))", "score": -0.5192503088328522, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.death_day),person.death_place))", "score": -0.5239793418996129, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), movie.title),person.death_place))", "score": -0.5369325501087587, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), company.name),person.death_place))", "score": -0.556811633930018, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Mark Van Ee), person.death_place),movie.budget))", "score": -0.5674229913565796, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}, {"orig_question": "Where did people other than Mark Van Ee died?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Mark Van Ee), person.birth_place),person.death_place))", "score": -0.5757786832408084, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Mark Van Ee), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 71, "beams": [{"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18820541869367255, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(movie),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3032323481959532, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.31108028109716146, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.3112885677732378, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.3129980462985959, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32175848712774285, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id),language.name,=,??????), genre.name),genre.name))", "score": -0.3222820401827866, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,has_genre.genre_id), genre.name),genre.name))", "score": -0.32833394651364994, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,??????),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.33254838912609525, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.3350883886806772, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.3394639170870051, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),getData(has_genre),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3474648924501142, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),getData(genre),has_genre.genre_id,movie.id), genre.name),genre.name))", "score": -0.3477862188609404, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(genre),has_genre.genre_id,genre.id),language.iso_639_1,spoken_language.iso_639_1), genre.name),genre.name))", "score": -0.3523420779091775, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there any movie genres with a spoken language named ???????", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),movie.id,genre.id),spoken_language.movie_id,movie.id), genre.name),genre.name))", "score": -0.3959138158750542, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,=,??????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 72, "beams": [{"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.15641680159211155, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.19374701408362968, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.19514531300778393, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.22409318709551698, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.29615327832799554, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.30576548088003336, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.30746348823477965, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.3156298798212984, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.31565013753124505, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.31704843645539926, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),country.name,!=,Cin\u00e9mage 8),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.348182925620603, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),company.name,!=,Cin\u00e9mage 8),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.3843196400368758, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.3889472482982194, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.release_date,!=,Cin\u00e9mage 8), movie.popularity),movie.popularity))", "score": -0.39090510692042646, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}, {"orig_question": "What are the popularities of movies produced by companies other than Cin\u00e9mage 8?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),country.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.popularity),movie.popularity))", "score": -0.536860959533375, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Cin\u00e9mage 8),getData(movie),production_company.movie_id,movie.id), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 73, "beams": [{"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.09393093379334323, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.1713855335805175, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,!=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23569904201085576, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.26675478700324595, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3021680024751464, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3052107873314222, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3163468305619337, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32423488624874564, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.34515536225324855, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>,92), genre.name),genre.name))", "score": -0.34858512120302854, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,92),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3612389403950821, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3713620776821195, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,<,92), genre.name),genre.name))", "score": -0.38477405579054325, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(crew),movie.id,oscar_nominee.movie_id),movie.runtime,>,92),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4016816714638397, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genre names which have movies with a runtime of 92 and more?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,!=,92),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.414444203619148, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,92),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 74, "beams": [{"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.030792969540925696, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.519963511576948, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5210238732700005, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.525877754362196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5340122443769919, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5367053361387062, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5461907331541335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(merge(getData(crew),getData(movie),crew.movie_id,movie.id),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5468967228968797, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5488808027069059, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(crew),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5573157438932431, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Encino, Kalifornien, USA), person.name),person.name))", "score": -0.5586813446425367, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.5740476160745507, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),person.name), person.name))", "score": -0.5830936638230924, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.name))", "score": -0.584149744052572, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}, {"orig_question": "Who died in Encino, Kalifornien, USA?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.birth_day),person.name))", "score": -0.5861343429714907, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Encino, Kalifornien, USA), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 75, "beams": [{"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.058314857400546316, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.3969706998686888, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4839620993952849, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4847392452429631, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.birth_day),person.death_day))", "score": -0.4918790379088023, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_place))", "score": -0.49244480612833286, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.4927967282492318, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_place),person.death_day))", "score": -0.5525343337576487, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5834400666426518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.5948655114989378, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.birth_day))", "score": -0.6323333013351657, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Nancy Graham Tanen),person.death_day), person.death_day))", "score": -0.655914924442186, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6739330993514159, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Nancy Graham Tanen), person.death_day),person.death_day))", "score": -0.6742779122214415, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}, {"orig_question": "When did Nancy Graham Tanen die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),movie.revenue))", "score": -0.6895308125313022, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Nancy Graham Tanen), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 76, "beams": [{"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.24081217802973956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.27343049642973466, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_genre.movie_id), company.name),company.name))", "score": -0.31768031142269765, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3241403207267849, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33223391586966544, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),getData(genre),production_company.company_id,company.id), company.name),company.name))", "score": -0.33927836310060133, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.34045322017993124, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3633519604677469, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_keyword),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3681660201537655, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id), company.name),company.name))", "score": -0.37307153857992637, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,<,1.9),filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>=,1.9),has_keyword.movie_id,movie.id), company.name),company.name))", "score": -0.3780335168153176, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(has_genre),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37819096987346923, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<=,T\u00fcrk\u00e7e), company.name),company.name))", "score": -0.3825363333120983, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,1.9),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3858771620727169, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}, {"orig_question": "Is there any company which was involved in a movie with vote average less than or equal to 1.9 and a spoken language other than T\u00fcrk\u00e7e?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,1.9),getData(production_company),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3912061820562312, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,T\u00fcrk\u00e7e),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.vote_average,<=,1.9), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 77, "beams": [{"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.14696107103372924, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.2053110380365979, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.3476275135471951, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.4059774805500638, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.42450774024536864, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.name))", "score": -0.46147128341709565, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.4667789024696609, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.name), person.name))", "score": -0.4841573818557663, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.birth_day))", "score": -0.49793957218472346, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_day),person.name))", "score": -0.5044704508316128, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_day),person.name))", "score": -0.5187434371506952, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.52423551043222, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id),person.birth_day,>,1938-03-04), person.birth_day),person.name))", "score": -0.5242841010746537, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.birth_day,>,1938-03-04), person.name),person.birth_day))", "score": -0.5349031153564504, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}, {"orig_question": "Are there persons with a gender born after March 4th 1938? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1938-03-04),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_day),person.name))", "score": -0.5353597402917922, "correct_code": "isEmpty(distinct(extractValues(filter(getData(person),person.birth_day,>,1938-03-04),person.gender), person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 78, "beams": [{"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.14935981879084614, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.gender,=,f), movie.id),movie.revenue)", "score": -0.23091299432351836, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.3139019771780279, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3742473943660576, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.38075733213927343, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.3940967231305458, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(getData(person),person.birth_day,=,f), movie.id),movie.revenue)", "score": -0.39545515271070014, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4064920994655092, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.41117069190599853, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.41300203723872503, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.4176806296792144, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,f), movie.id),movie.revenue)", "score": -0.4263414282299974, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,f), movie.id),movie.revenue)", "score": -0.43102000167223437, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.4434153780071977, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}, {"orig_question": "What is the average movie revenue when the gender of the nomineed persons is female?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,<=,f), movie.id),movie.revenue)", "score": -0.44992531578041356, "correct_code": "avg(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,f), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 79, "beams": [{"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.22443060353572064, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.27106620380522917, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2781446060694875, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(has_genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2908885205029929, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.29322743372918975, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,sound),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.2993138811871067, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,sound),merge(filter(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.sub_category,=,sound),getData(genre),has_genre.genre_id,genre.id),oscar.id,oscar_winner.oscar_id), genre.name),genre.name))", "score": -0.3066066286366314, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3188242076794129, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,sound),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.movie_id,movie.id), genre.name),genre.name))", "score": -0.32353857704397887, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,oscar.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.32729954780733606, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3359816334243873, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3361440782333463, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),has_genre.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.3414557472834081, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.category,=,sound),getData(genre),has_genre.movie_id,genre.id), genre.name),genre.name))", "score": -0.34379682872685824, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}, {"orig_question": "What are the genres of movies, which won an oscar in the sound category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,sound), genre.name),genre.name))", "score": -0.35454005897384117, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,sound), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 80, "beams": [{"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.15999359461181212, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.16778992880651628, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.19342195556655833, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.19706220294040638, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<=,56000), country.name),country.name))", "score": -0.23090626071304757, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,=,56000), country.name),country.name))", "score": -0.23324142305019127, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<,56000), country.name),country.name))", "score": -0.25222869152783, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2706373411887539, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2718206142394746, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,=,56000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.29262033344074534, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,=,56000), country.name),country.name))", "score": -0.3150201877222694, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.budget,<,56000), country.name),country.name))", "score": -0.3387518544619342, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<=,56000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.37628645389805804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.budget,<=,56000),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.38354721177568507, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "from which countries are the movies with a budget up to  56000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.budget,<=,56000), country.name),country.name))", "score": -0.42375505665861984, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.budget,<,56000),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 81, "beams": [{"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.03345766868733335, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,65), movie.vote_average),movie.vote_average))", "score": -0.4358520882233279, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,65), movie.vote_average),movie.vote_average))", "score": -0.4411289172276156, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>=,65), movie.vote_average),movie.vote_average))", "score": -0.4715016276604729, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.vote_average))", "score": -0.5599781055061612, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,65), movie.vote_average),movie.vote_average))", "score": -0.6259328203304904, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), oscar.year),movie.vote_average))", "score": -0.6831826050329255, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.year,>=,65), movie.vote_average),movie.vote_average))", "score": -0.7397380263573723, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),oscar.year))", "score": -0.7458063909580233, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,65), movie.vote_average),movie.vote_average))", "score": -0.756806710458477, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.popularity),movie.vote_average))", "score": -0.7589355189847993, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.status),movie.vote_average))", "score": -0.7681999881315278, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))", "score": -0.7714022030049819, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,65), movie.vote_average),movie.status))", "score": -0.7722761580516817, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}, {"orig_question": "What are the ratings of movies with at least 65 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,65), movie.vote_average),movie.vote_average))", "score": -0.7966461106698262, "correct_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,>=,65),movie.vote_average), movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 82, "beams": [{"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.3249008020140854, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),genre.id,oscar_nominee.oscar_id), oscar.category),oscar.category))", "score": -0.333604156560404, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_winner.movie_id),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.377230414031056, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.38076160505608214, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3866991649023477, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),getData(has_genre),genre.id,has_genre.genre_id),merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.38791685886523736, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.3987402590970093, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),has_genre.movie_id,oscar.id),genre.id,has_genre.genre_id),genre.name,=,Thriller), oscar.category),oscar.category))", "score": -0.40361217388397364, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4052655420790666, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.41008616205017423, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4173066362737282, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.41995581506696983, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.42212734213849407, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar.id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4319969238198786, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}, {"orig_question": "How many oscar categories are there for oscar won by movies in the genre Thriller ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_nominee),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),has_genre.movie_id,oscar.id), oscar.category),oscar.category))", "score": -0.4385222068019359, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,Thriller),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id), oscar.category),oscar.category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 83, "beams": [{"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1134783238550721, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1145208760863506, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),company.name))", "score": -0.13001348167788632, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.21972053198075944, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.320672863343199, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,hi), company.name),company.name))", "score": -0.3270007603157161, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3295128407586401, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.34852836468022247, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.369047253863909, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,hi), company.name),company.name))", "score": -0.420228530153351, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.4345259843517804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.43996272205141923, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,hi),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),production_company.company_id))", "score": -0.4450461501996348, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,hi),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.name), company.name),company.name))", "score": -0.46918547116152304, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "What are the company names of companies that have produced movies in the original language hi?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,hi), company.name),person.death_place))", "score": -0.4717459154681853, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,hi),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 84, "beams": [{"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.15737081850089438, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.16744843845249072, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.19829776071632627, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2670756885764306, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3007265271409445, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,fa),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.30355298382219215, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.title,=,fa), country.name),country.name))", "score": -0.30553016593090365, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3219873089124548, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,=,fa), country.name),country.name))", "score": -0.3271903692806449, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.3433256177294176, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,fa),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.35001913591465494, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.353403237681014, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,fa), country.name),country.name))", "score": -0.3578027807665824, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,=,fa), country.name),country.name))", "score": -0.36788040071817873, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}, {"orig_question": "In how many countries are Farsi speaking movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,fa), country.name),country.name))", "score": -0.3686705178798549, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.original_language,=,fa), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 85, "beams": [{"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.11617913041117252, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.13914657428004756, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(keyword),keyword.name,!=,strafzettel),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.17355980753884442, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.1872825399970476, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel),getData(movie),has_keyword.movie_id,movie.id), movie.title),movie.title))", "score": -0.27598151641023716, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.33263804504880523, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3344888683768662, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), movie.title),movie.title))", "score": -0.3550239594696569, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel), company.name),movie.title))", "score": -0.37717760025660924, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(language),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3810760785735809, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.3904290236513818, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), company.name),movie.title))", "score": -0.3920174684543909, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))", "score": -0.40151081154983354, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,strafzettel),movie.title),movie.title))", "score": -0.419490961852718, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}, {"orig_question": "What are the distinct titles of movies with any keyword except \"strafzettel\" ?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.title),movie.title))", "score": -0.42647348577989014, "correct_code": "done(extractValues(distinct(merge(filter(getData(keyword),keyword.name,!=,strafzettel),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 86, "beams": [{"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.14744441860129992, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.1707669358009764, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.20400676007977608, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.23142878168553355, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.original_language,=,Angola), company.name),company.name))", "score": -0.2321202977235499, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Angola),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.23763316036447618, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.original_language,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.328887522244271, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.status,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3328136113070807, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.34055154493780865, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35651487842177637, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Angola),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.359598034450108, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),country.name,=,Angola),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.36512035687022526, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Angola), company.name),company.name))", "score": -0.3741879981246298, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3742213682073662, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}, {"orig_question": "Are there companies from Angola that have produced movies?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,Angola),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_country.movie_id), company.name),company.name))", "score": -0.41066701812011036, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(country),country.name,=,Angola),merge(getData(production_country),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 87, "beams": [{"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.06772221420760616, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.18068672139997943, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>,417), movie.original_language),movie.original_language))", "score": -0.6262163939500169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,417), movie.original_language),movie.original_language))", "score": -0.6267873587166832, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6357112483593277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6455891885328007, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,417), movie.original_language),movie.original_language))", "score": -0.6552841009652184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6582137102544687, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))", "score": -0.6637139960876084, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), language.name),movie.original_language))", "score": -0.6649478490819548, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6680916504279418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),language.name))", "score": -0.6681178699327575, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,<,417), movie.original_language),movie.original_language))", "score": -0.6748257892554279, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,417), movie.original_language),movie.original_language))", "score": -0.684128099874215, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of the movies with less than 417 votes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,417), movie.original_language),movie.original_language))", "score": -0.6942399563813524, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,417), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 88, "beams": [{"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.1948263132944703, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.27118401039655976, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.282930553340072, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.2919563823329412, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.30370292527645343, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.31279416974208396, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3170608724905458, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3245407126855962, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.title),movie.title))", "score": -0.3324290936330677, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3335665416784654, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.33608776641630034, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3381797546528515, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3443956440340661, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))", "score": -0.3453130669706317, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}, {"orig_question": "How many movie titles are there where the persons death place is San Pedro, Kalifornien?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,San Pedro, Kalifornien),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.title),movie.title))", "score": -0.3511370172829946, "correct_code": "count(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_place,=,San Pedro, Kalifornien), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 89, "beams": [{"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.14719699122935906, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.27056813580329125, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.284840508950091, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.3022142346035722, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.3037333969896492, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959), company.name),company.name))", "score": -0.31562047801791, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.vote_count,<,1959), company.name),company.name))", "score": -0.3216453061545658, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),person.death_place))", "score": -0.3482146699395996, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,1959),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.35608356631256655, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),oscar_nominee.person_id,company.id), company.name),company.name))", "score": -0.3605704297153248, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,production_company.company_id), company.name),company.name))", "score": -0.36929081512826606, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.3845567004087773, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id),movie.title,>,m),oscar_nominee.person_id,movie.id), company.name),company.name))", "score": -0.4032769803002384, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.movie_id,production_company.company_id), company.name),company.name))", "score": -0.40922422679638165, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}, {"orig_question": "What are the names of the companies that produced oscar nominated movies with a vote count bigger than 1959 and that have a male oscar nominated person ?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,1959),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,>,1959),oscar_nominee.person_id,company.id), company.name),company.name))", "score": -0.4213263953753436, "correct_code": "done(extractValues(distinct(filter(filter(merge(merge(getData(person),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(production_company),movie.id,production_company.movie_id),person.id,oscar_nominee.person_id),getData(company),production_company.company_id,company.id),movie.vote_count,>,1959),person.gender,=,m), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 90, "beams": [{"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.056583031357149594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.25805735433639876, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.3281490676292151, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))", "score": -0.3772796907433076, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.4305346590000839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,<,no), movie.vote_count),movie.vote_count))", "score": -0.4312257685669465, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.4319095800663375, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.47532313215696226, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.48489003041838247, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,<,no), movie.vote_count),movie.vote_count))", "score": -0.5006263722929003, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,no), movie.vote_count),movie.vote_count))", "score": -0.5020012933591539, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,no), movie.vote_count),movie.vote_count))", "score": -0.5109572349280709, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,!=,no), movie.vote_count),movie.vote_count))", "score": -0.5381489997660748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,no),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5406334742891599, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}, {"orig_question": "Which vote counts have the movies without an original language?", "inferred_code": "done(extractValues(distinct(merge(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(movie),spoken_language.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.5430390676600679, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,no), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 91, "beams": [{"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.1818972302844645, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.19326187621533525, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.popularity),movie.popularity))", "score": -0.21313277620651225, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.popularity),movie.popularity))", "score": -0.27194970987814854, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.runtime),movie.popularity))", "score": -0.2744166999924562, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)), movie.popularity),movie.popularity))", "score": -0.2831185494305699, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime),movie.popularity))", "score": -0.2858929961895212, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing (screenplay--original)),oscar.year),movie.popularity))", "score": -0.29105812425222416, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.release_date),movie.popularity))", "score": -0.32788542360450396, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.popularity),movie.popularity))", "score": -0.33172060294459876, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),oscar.number),movie.popularity))", "score": -0.3511523544271688, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.runtime),movie.popularity))", "score": -0.36714805763613956, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),person.birth_day),movie.popularity))", "score": -0.37560234296494965, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),movie.vote_average),movie.popularity))", "score": -0.37975314591596426, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}, {"orig_question": "What is the popularity of the earliest oscar nominated movie to sub category writing (screenplay--original)?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (screenplay--original)),person.birth_day),movie.popularity))", "score": -0.3834534838165791, "correct_code": "done(extractValues(max(merge(filter(getData(oscar),oscar.sub_category,=,writing (screenplay--original)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 92, "beams": [{"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.25056638427443634, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2589682083429562, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.2992213576852346, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.30628638312026435, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3267483926175806, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3499013853844007, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3703633948817169, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.37224339640642323, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sex and the City 2),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38288887924812526, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),keyword.name,=,Sex and the City 2), country.name),country.name))", "score": -0.3914949848601441, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),movie.title,=,Sex and the City 2), country.name),country.name))", "score": -0.3927054059037394, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.39920466387758, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,country.iso_3166_1),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.40151780379830804, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_country.iso_3166_1),keyword.name,=,Sex and the City 2), country.name),country.name))", "score": -0.4119570217689623, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In which country was sex and the city 2 produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),company.id,production_country.iso_3166_1),company.name,=,Sex and the City 2), country.name),country.name))", "score": -0.4416669290989345, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sex and the City 2),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 93, "beams": [{"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.028654600981099065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,movie.popularity),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.5420706005764113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.54704084675177, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,crew.movie_id),movie.status,=,Released), movie.budget),movie.budget))", "score": -0.6153656482725978, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.title))", "score": -0.6542585294446326, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6576031316501184, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6628341721207236, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6696908265177082, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.6741842063129297, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.budget),movie.budget))", "score": -0.6770569542641169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),crew.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6808771913300917, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),movie.popularity,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.68610827651744, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(movie),getData(movie),spoken_language.movie_id,movie.id),movie.id,movie.popularity), movie.budget),movie.budget))", "score": -0.6929649615793118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(cast),getData(movie),crew.movie_id,movie.id),movie.status,movie.popularity), movie.budget),movie.budget))", "score": -0.7046139040011851, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets from movies that have the status released?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Released), movie.budget),movie.budget))", "score": -0.725156308930309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 94, "beams": [{"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.033452916744863614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.41921793002984487, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>,Jason Tobin), person.death_day),person.death_day))", "score": -0.4672067881037947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,>=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5068847060611006, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),movie.revenue))", "score": -0.5295545261760708, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.5469926752557512, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.name,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.591269161563947, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.birth_day))", "score": -0.6320676606555935, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_place))", "score": -0.6327146690746304, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,!=,Jason Tobin),person.death_day), person.death_day))", "score": -0.6487483358941972, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6500566162576433, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,!=,Jason Tobin), person.death_day),person.death_day))", "score": -0.6523969210996468, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Jason Tobin), person.death_day),person.death_day))", "score": -0.7014516115596052, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), movie.revenue),person.death_day))", "score": -0.720605823531514, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}, {"orig_question": "Which are the death days of all persons without Jason Tobin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_place),person.death_day))", "score": -0.7294940085557755, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Jason Tobin), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 95, "beams": [{"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.year)", "score": -0.27586289909570366, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category)", "score": -0.277606809366763, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.number)", "score": -0.2808243760819106, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.29653142037154384, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.year)", "score": -0.3033781525512427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category))", "score": -0.31388221871340344, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.year)", "score": -0.32532326930964844, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.sub_category)", "score": -0.32685117282229575, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.sub_category)", "score": -0.3270671795807078, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.33028474629585536, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.sub_category),oscar.number)", "score": -0.338384189556984, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar.sub_category))", "score": -0.36183840782218074, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,<=,7.4),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.sub_category),oscar_winner.oscar_id)", "score": -0.37691478295070346, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,<=,7.4),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.3949115875533377, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}, {"orig_question": "Are there any oscars sub categories where the vote average of the nomineed movies is 7.4 or less?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.year)", "score": -0.39791969039102, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,<=,7.4), oscar.sub_category),oscar.sub_category))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 96, "beams": [{"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))", "score": -0.1158933784608962, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.birth_day))", "score": -0.19075668563891668, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_day))", "score": -0.3237725604121806, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.birth_day))", "score": -0.3986358675902011, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),movie.revenue))", "score": -0.43232127239753027, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_place))", "score": -0.45779331734229345, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.death_day))", "score": -0.5334144342486979, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.death_day))", "score": -0.543844919258845, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,<,f), person.death_day),person.birth_day))", "score": -0.6082777414267184, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,>,f), person.death_day),person.birth_day))", "score": -0.6187082264368655, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),movie.revenue))", "score": -0.6402004543488147, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,f), person.death_day),person.death_place))", "score": -0.6656724992935779, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),oscar_nominee.person_id))", "score": -0.6788178901915671, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,f), person.death_day),person.death_day))", "score": -0.6804067241755547, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}, {"orig_question": "What are the death dates of persons that are female?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.id))", "score": -0.6868246417288901, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,f), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 97, "beams": [{"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.028924514361278852, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.5635379010345787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,18.3802), movie.original_language),movie.original_language))", "score": -0.5696958986191021, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), language.name),movie.original_language))", "score": -0.5702298509968386, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,18.3802), movie.original_language),movie.original_language))", "score": -0.5962319460777508, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,18.3802), movie.original_language),movie.original_language))", "score": -0.6104338497934805, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),language.name))", "score": -0.6192070532670186, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,18.3802), language.name),movie.original_language))", "score": -0.6271693887243037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,18.3802), movie.original_language),movie.original_language))", "score": -0.6773142305282818, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.status),movie.original_language))", "score": -0.6837364065540896, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,18.3802), movie.original_language),movie.original_language))", "score": -0.6930946423244118, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.vote_average),movie.original_language))", "score": -0.7182095873249636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.status))", "score": -0.7449262429108785, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,>,18.3802), movie.original_language),movie.original_language))", "score": -0.7585917444048391, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}, {"orig_question": "What are the original languages of movies with a popularity higher than 18.3802?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.vote_average))", "score": -0.760206132017629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,18.3802), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 98, "beams": [{"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.22581958511195319, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2283009562255787, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.25314581195796493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.2828564482211025, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.285337819334728, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3132757904618061, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3157571615754316, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(oscar_winner),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.3229258351774115, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(language),oscar_nominee.oscar_id,oscar.id), language.name),language.name))", "score": -0.3288592377697038, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,=,2.3),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.3459510723239254, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.35234341449569956, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,=,2.3),merge(getData(spoken_language),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id), language.name),language.name))", "score": -0.35287863033241573, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),language.name,=,2.3), language.name),language.name))", "score": -0.35482478560932507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(language),oscar_nominee.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3), language.name),language.name))", "score": -0.3703126286514082, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}, {"orig_question": "Is there a language in which a movie with a voting average of 2.3 was made that was nominated for an oscar?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,=,2.3),getData(language),oscar_nominee.oscar_id,language.iso_639_1), language.name),language.name))", "score": -0.3739849616868894, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_average,=,2.3), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 99, "beams": [{"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.04888708132421016, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>=,25.6132), movie.runtime),movie.runtime))", "score": -0.3531582512623572, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5484931375718605, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5526350276985431, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.title),movie.runtime))", "score": -0.5688252755171561, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5757628572603459, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.5870642753064336, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5920509472773563, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,cast.movie_id),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))", "score": -0.5961928374040389, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.5993972937023742, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<=,25.6132),merge(getData(movie),getData(movie),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), movie.runtime),movie.runtime))", "score": -0.6300238973463488, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.id),movie.runtime))", "score": -0.6754077979094291, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.vote_count),movie.runtime))", "score": -0.6851921983725333, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.release_date))", "score": -0.7050444543092453, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}, {"orig_question": "How many distinct movie runtimes are there for movies with a popularity smaller or equals to 25.6132?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.vote_average))", "score": -0.7131668388574326, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,<=,25.6132), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 100, "beams": [{"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.03998177241010126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,49.3535), movie.revenue),movie.revenue))", "score": -0.3061309822223848, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.49818419860093854, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,49.3535), movie.revenue),movie.revenue))", "score": -0.56752327758295, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.popularity))", "score": -0.5931156454462325, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.vote_count),movie.revenue))", "score": -0.6997294904285809, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_average))", "score": -0.711417037047795, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.popularity,>=,49.3535),movie.revenue), movie.revenue))", "score": -0.7143271996174008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.budget))", "score": -0.7275241194147384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.vote_count))", "score": -0.7439252910990035, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), person.death_day),movie.revenue))", "score": -0.7578608871990582, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.budget),movie.revenue))", "score": -0.7779023529583355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,49.3535), movie.revenue),movie.revenue))", "score": -0.7787632575345924, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<=,49.3535), movie.revenue),movie.revenue))", "score": -0.814476291736355, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a popularity of more than or equal 49.3535?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),cast.person_id))", "score": -0.8277372298616683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>=,49.3535), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 101, "beams": [{"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.03720980432080978, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,214), movie.original_language),movie.original_language))", "score": -0.353237426990745, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,214), movie.original_language),movie.original_language))", "score": -0.4420408673231577, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.4573783939069879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.48319276330614114, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,214), movie.original_language),movie.original_language))", "score": -0.5135631329958414, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.529435747794262, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,214),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.5552501171934151, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,<=,214), movie.original_language),movie.original_language))", "score": -0.6165810166794033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.vote_average,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6191418488202962, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),language.name))", "score": -0.6202416123469447, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,214),getData(spoken_language),movie.id,oscar_nominee.movie_id),getData(movie),movie.id,language.iso_639_1), movie.original_language),movie.original_language))", "score": -0.6364182763049852, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.status))", "score": -0.6520441474040126, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), language.name),movie.original_language))", "score": -0.665190181147409, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}, {"orig_question": "Which different original languages do the movies with a runtime of at most 214 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.vote_average))", "score": -0.6697088779528713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,214), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 102, "beams": [{"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.018119257780199405, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.revenue))", "score": -0.615595218630915, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,22441323), movie.popularity),movie.popularity))", "score": -0.6353733354699216, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.vote_average))", "score": -0.6403661341391853, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6646195477617066, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,cast.person_id),movie.revenue,<,22441323), movie.popularity),movie.popularity))", "score": -0.6736502316361425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.person_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.6963832792759972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.7015757038624593, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.status))", "score": -0.7030205101691536, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,22441323),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),movie.id,cast.movie_id), movie.popularity),movie.popularity))", "score": -0.7123762260347771, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,22441323), movie.popularity),movie.popularity))", "score": -0.720130638939736, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<,22441323), movie.popularity),movie.popularity))", "score": -0.7345962689942098, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), person.gender),movie.popularity))", "score": -0.7465219310470275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,22441323), movie.popularity),movie.popularity))", "score": -0.7540153676163754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}, {"orig_question": "Whats the different popularities for movies with a revenue less than 22441323?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.revenue),movie.popularity))", "score": -0.7670171073623351, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,22441323), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 103, "beams": [{"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.14146040285545405, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1427171263516488, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.17023202796402337, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer), movie.title),movie.title))", "score": -0.2476012885866829, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.2751782530160528, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.3086552398917362, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),production_company.movie_id,production_company.company_id), movie.title),movie.title))", "score": -0.3173755070887015, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.32353928005671245, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.3383166096588048, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.37790039836575545, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.original_language))", "score": -0.38071885536400335, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.38502326930346376, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.38592117688276034, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.original_language))", "score": -0.39929105749045496, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}, {"orig_question": "Are there titles of movies that were not produced by the company \"Minist\u00e8re du D\u00e9veloppement Durable et de la Mer\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),oscar_nominee.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.4124315805280303, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(company),company.name,!=,Minist\u00e8re du D\u00e9veloppement Durable et de la Mer),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 104, "beams": [{"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.25133223909111413, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.number),oscar.number))", "score": -0.32831388822064944, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3589896784519728, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.35945775466771485, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3718496001845202, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.3810507755515893, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),getData(oscar_winner),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar_winner.movie_id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.39472287011541496, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),oscar.year,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.39490845649336487, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.39521792442018994, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(oscar),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),movie.title))", "score": -0.4080778461527373, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.year))", "score": -0.41091433926599175, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(person),person.name,!=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.41280994412625444, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),oscar_winner.movie_id,oscar_winner.person_id),person.name,=,Bob Papenbrook), oscar.year),oscar.number))", "score": -0.42486109539425776, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.id,oscar_winner.oscar_id), oscar.number),oscar.number))", "score": -0.42698503049764525, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}, {"orig_question": "Is there a oscar winner movie title with the oscar winner persons name Bob Papenbrook?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Bob Papenbrook),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),oscar_winner.movie_id,oscar_winner.person_id), oscar.number),oscar.number))", "score": -0.4327241681332735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.name,=,Bob Papenbrook), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 105, "beams": [{"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)", "score": -0.09315285399565684, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.18406466082449702, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.2549040877459361, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_count),movie.vote_count)", "score": -0.3864606913694775, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.406567456505695, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.40786023957741635, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(genre),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4475957650583372, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.original_language,=,fr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_count)", "score": -0.46491153277343444, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_average),movie.vote_count)", "score": -0.4662886015771732, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.4682585683676074, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,fr), movie.id),movie.vote_count)", "score": -0.4737449334669253, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.vote_count),movie.vote_count)", "score": -0.4786996758562036, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.49208635775110143, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,fr), movie.id),movie.vote_count)", "score": -0.49518106712486726, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}, {"orig_question": "What is the average vote count of movies whose original language is \"fr\" ?", "inferred_code": "avg(distinct(filter(getData(movie),movie.title,=,fr), movie.id),movie.vote_count)", "score": -0.5050298982434748, "correct_code": "avg(distinct(filter(getData(movie),movie.original_language,=,fr), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 106, "beams": [{"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.08490526897097028, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.18027099646487973, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.24449612121963188, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,>=,380), country.name),country.name))", "score": -0.26731471574854476, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2716420450276595, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2784720883420174, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.3089550136381099, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_country),movie.id,has_keyword.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3142633753624033, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.32354389727862143, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.36364496541899954, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3703574336544535, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_company.movie_id),movie.vote_count,>,380), country.name),country.name))", "score": -0.37629404035756664, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))", "score": -0.3806345605464551, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,>,380),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3903904896950097, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}, {"orig_question": "In what countries have movies with a vote count of over 380 been produced?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>,380),getData(production_company),movie.id,production_company.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3981006095634634, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,>,380), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 107, "beams": [{"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.0982918474910548, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.3083675202069571, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.3935452398000052, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.506735165239661, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,!=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5170675503177335, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.birth_day),person.death_day))", "score": -0.5223595198331168, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_place))", "score": -0.5294951094401767, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,<,Lasse Petterson), person.death_day),person.death_day))", "score": -0.5828097151679685, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),oscar.year,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6017408963380149, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.homepage,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6018338795838645, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_place),person.death_day))", "score": -0.6078439351258567, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.name,=,Lasse Petterson),person.death_day), person.death_day))", "score": -0.6103347655007383, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6167433258233359, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.6355297561822226, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}, {"orig_question": "When did Lasse Petterson die?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))", "score": -0.661634088595747, "correct_code": "done(extractValues(distinct(filter(getData(person),person.name,=,Lasse Petterson), person.death_day),person.death_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 108, "beams": [{"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.022286904553766362, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2607), movie.revenue),movie.revenue))", "score": -0.42086403122812044, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.popularity),movie.revenue))", "score": -0.5427279915165855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,2607), movie.revenue),movie.revenue))", "score": -0.6134966169920517, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,2607), movie.revenue),movie.revenue))", "score": -0.624038115653093, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.budget),movie.revenue))", "score": -0.6241234387707664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))", "score": -0.6422171966551105, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_count))", "score": -0.6861496260826243, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.vote_average))", "score": -0.7415287187759532, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.popularity))", "score": -0.7421871712867869, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,<=,2607), movie.revenue),movie.revenue))", "score": -0.7659496746928198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.budget))", "score": -0.7881962946121348, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2607), movie.revenue),movie.revenue))", "score": -0.8010492406756384, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_count,<=,2607),movie.revenue), movie.revenue))", "score": -0.8113870568631683, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}, {"orig_question": "What are the revenues of movies with a vote count of 2607 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), person.death_day),movie.revenue))", "score": -0.8360218252491904, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,2607), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 109, "beams": [{"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.1723761095103384, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.gender,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.title),movie.title))", "score": -0.2508346020051562, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2593243834584418, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.26054511787198076, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2625090257905272, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,m),movie.title),movie.title))", "score": -0.29644066380129447, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.2986324639562297, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,!=,m),movie.title),movie.title))", "score": -0.31574383682530066, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.title),movie.title))", "score": -0.34455382639340953, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))", "score": -0.34684268402827245, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.title),movie.title))", "score": -0.35901615594841285, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m),movie.title),movie.title))", "score": -0.38886982271772197, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(person),person.gender,!=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),movie.title),movie.title))", "score": -0.42956789344454466, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id),movie.title),movie.title))", "score": -0.4347737621635067, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles for movies who had female oscar nominees? ", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,!=,m),getData(movie),oscar_nominee.movie_id,movie.id),movie.title),movie.title))", "score": -0.4575614493197785, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,!=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 110, "beams": [{"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.029915055427160164, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.revenue)", "score": -0.31807329269372087, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.638079989204085, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.budget),movie.budget)", "score": -0.6900012073863753, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,<,5.3), movie.id),movie.budget)", "score": -0.7085739966447381, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1),movie.vote_average,<,5.3), movie.id),movie.budget)", "score": -0.7100182747622195, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.vote_count)", "score": -0.7624061459129667, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,5.3),movie.budget)", "score": -0.7656841435176559, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,<,5.3), movie.id),movie.budget)", "score": -0.8034903502953988, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,5.3), movie.id),movie.budget)", "score": -0.8040405026140215, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.runtime)", "score": -0.8044930481333141, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,5.3), movie.id),movie.budget)", "score": -0.8220680024268276, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.release_date)", "score": -0.8452241347155751, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,5.3), movie.id),movie.budget)", "score": -0.85126676689919, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}, {"orig_question": "Whats the total sum of movie budgets of movies with an average voting less than 5.3?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),person.death_day)", "score": -0.8541411625006903, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,5.3), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 111, "beams": [{"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),country.name))", "score": -0.08539502629600472, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,374), country.name),country.name))", "score": -0.151298388350762, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.16020345712261386, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.18736652766008557, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,<,374), country.name),country.name))", "score": -0.2836678246324739, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_count,<,374), country.name),country.name))", "score": -0.3490832490234433, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<=,374), country.name),country.name))", "score": -0.3708951608310067, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.39318481606602057, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.39338414406752864, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,<,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4002025326956821, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),production_country.iso_3166_1))", "score": -0.4081944760734498, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,<,374),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.41234515066500155, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,374),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.4155653859341116, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_count,<,374), country.name),movie.original_language))", "score": -0.43006505799358835, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "Are there any production countries that have produced movies with votes less than 374?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,374), country.name),country.name))", "score": -0.43679852288576404, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),movie.vote_count,<,374),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 112, "beams": [{"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.17179276693059364, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.2974474461153882, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.32386501918213606, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.3333135191370267, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.3597310922037746, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.393804439376864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),oscar.number,=,140), movie.vote_count),movie.vote_count))", "score": -0.39619515904633523, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count,=,140), movie.vote_count),movie.vote_count))", "score": -0.40354405978118535, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.year,=,140), movie.vote_count),movie.vote_count))", "score": -0.4066147859393626, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140),movie.vote_count),movie.vote_count))", "score": -0.4085851278649008, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,=,140),movie.vote_count),movie.vote_count))", "score": -0.4128710050984963, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.runtime,=,140),movie.vote_count),movie.vote_count))", "score": -0.41911213117359775, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.vote_count),movie.vote_count))", "score": -0.42075119307424047, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,movie.id),movie.runtime,=,140), movie.vote_count),movie.vote_count))", "score": -0.42261271716135473, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}, {"orig_question": "What is the movie vote count for movies which run for 140 minutes?", "inferred_code": "done(extractValues(min(merge(filter(getData(movie),movie.runtime,=,140),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.vote_count),movie.vote_count))", "score": -0.4338032078666146, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,140), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 113, "beams": [{"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.10956834481343228, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.1945867856716064, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.24438066510286074, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.27501665312152446, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,Italiano), movie.id),movie.vote_average)", "score": -0.2873148736031309, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.35746112907705446, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,!=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)", "score": -0.3643651257665058, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.vote_average),movie.vote_average)", "score": -0.38062951868402733, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.40442041733094564, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano), movie.id),movie.revenue)", "score": -0.42405014794781026, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.429948653904554, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Italiano),getData(movie),spoken_language.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.4303168487869081, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.43052366760348787, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(filter(getData(language),language.name,!=,Italiano), movie.id),movie.vote_average)", "score": -0.43646098366364106, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote of all movies where an original language is Italiano?", "inferred_code": "avg(distinct(merge(filter(getData(language),language.name,!=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.vote_average),movie.vote_average)", "score": -0.44680958244022745, "correct_code": "sum(distinct(merge(filter(getData(language),language.name,=,Italiano),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 114, "beams": [{"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.popularity))", "score": -0.34854889815323986, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.3949275934769593, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4158515338522939, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.41719349466408834, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.popularity),movie.vote_average))", "score": -0.42535585319274105, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.4348062939499298, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4473672209870869, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4630178303050343, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.4656342458828089, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4682911613624215, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.46963312217421593, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.popularity))", "score": -0.48240541127323416, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.48655818625814345, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.vote_average),movie.popularity))", "score": -0.4872459214600574, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}, {"orig_question": "Are there movies that are not in catalan?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,cn), movie.popularity),movie.vote_average))", "score": -0.48790014706993784, "correct_code": "isEmpty(distinct(extractValues(filter(getData(movie),movie.original_language,!=,cn),movie.release_date), movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 115, "beams": [{"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.08509506049754031, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.20992195344191908, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24980857176573032, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,2003-05-03),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.27832496877771623, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.30072642736108735, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.32340422472848673, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.333288773631163, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03), genre.name),genre.name))", "score": -0.34269600358263314, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.3579771966703112, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.3685829519937224, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,2003-05-03), genre.name),genre.name))", "score": -0.37618214075313194, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3814566158712456, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.39472429670875664, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,2003-05-03),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3981317488025409, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many different genres have been used in movies released on or after 2003-05-03?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>=,2003-05-03),getData(crew),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.40069536253166804, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>=,2003-05-03),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 116, "beams": [{"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.birth_day))", "score": -0.15915929427091216, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.1897686994622402, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.20774366283437684, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.name))", "score": -0.21396007878379478, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.birth_day),person.name))", "score": -0.23200666748251847, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.birth_day),person.name))", "score": -0.24998163085465513, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.death_day),person.birth_day))", "score": -0.31398281852535553, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<=,2011-09-28), person.death_day),person.birth_day))", "score": -0.3319577818974922, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))", "score": -0.33265327155980595, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_day),person.birth_day))", "score": -0.34260715160775373, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28), person.death_day),person.name))", "score": -0.3562207865456338, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3575263394005012, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,<=,2011-09-28),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.birth_day),person.death_day))", "score": -0.36090384848523693, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id),movie.release_date,<=,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3641449284321147, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}, {"orig_question": "Find the birthday of the personalities who worked in the Oscar nominated movies that released before 2011-09-28.", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),filter(getData(person),movie.release_date,!=,2011-09-28),oscar_nominee.person_id,person.id),movie.release_date,<,2011-09-28), person.birth_day),person.birth_day))", "score": -0.3646500964635638, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.release_date,<,2011-09-28),getData(person),oscar_nominee.person_id,person.id), person.birth_day),person.birth_day))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 117, "beams": [{"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.24778714728305457, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.30767656757575446, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.31938982907953223, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),person.name))", "score": -0.3399257001148149, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,!=,3854), person.name),person.name))", "score": -0.3543457449885708, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), keyword.name),person.name))", "score": -0.35875599759566273, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3709818441292918, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.37516740659313286, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.3792792493722321, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3972301857820155, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.birth_place))", "score": -0.3979452106569763, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(keyword),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), person.name),person.name))", "score": -0.39981505395538885, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.4014157482458566, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,!=,3854),merge(getData(production_company),getData(company),production_company.company_id,person.id),movie.id,production_company.movie_id), company.name),person.name))", "score": -0.40213077312081735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}, {"orig_question": "what are the names of the production companys where the movie vote is not 3854.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_average,!=,3854), person.name),keyword.name))", "score": -0.41437599727174507, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.vote_count,!=,3854), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 118, "beams": [{"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.049690818431294734, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,10.3042),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2786819211613517, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,10.3042), company.name),company.name))", "score": -0.3171767487831494, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), person.birth_place),company.name))", "score": -0.3366777414795207, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,10.3042), company.name),company.name))", "score": -0.3454786206120801, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,10.3042), company.name),company.name))", "score": -0.35521200609160763, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), oscar.category),company.name))", "score": -0.3555506414182995, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3555684208533171, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3690332539043693, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,10.3042), company.name),company.name))", "score": -0.3697306437695287, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.37016655614829236, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,10.3042), company.name),company.name))", "score": -0.3730161431986979, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.37429426362616786, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.37616889204655685, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produced movies with a popularity of more than 10.0342?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.popularity,>,10.3042), company.name),company.name))", "score": -0.3862812188359888, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,10.3042),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 119, "beams": [{"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.15450597819763237, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.15709789332970184, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.19363995448671564, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2323189000653692, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.runtime)", "score": -0.24158456548193766, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.runtime),movie.runtime)", "score": -0.24723247914593952, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.runtime),movie.runtime)", "score": -0.2630124346545874, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)", "score": -0.2687701003721794, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.2848916028719497, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.2928558661924043, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.30288143568084075, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.gender,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.325514290847347, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_day,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.runtime),movie.runtime)", "score": -0.33188388867167873, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.death_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3860512568326041, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}, {"orig_question": "What is the summed runtime of movies with a male oscar nominee ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,m),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.runtime)", "score": -0.3960768263210405, "correct_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.gender,=,m), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 120, "beams": [{"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.21631282403288538, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2181354579806917, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),keyword.name,=,evil doctor), movie.id),movie.vote_count)", "score": -0.23601454460414134, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.2380429951221615, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.24584453927455727, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_count)", "score": -0.268305192012637, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.28631861390550806, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2972105762948538, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3042512628584977, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.3151432252478434, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(merge(filter(getData(keyword),keyword.name,=,evil doctor),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), movie.vote_count),movie.revenue)", "score": -0.31820485883733834, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_average)", "score": -0.32385628172623154, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor), movie.id),movie.vote_average)", "score": -0.3448291487052139, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "sum(distinct(merge(filter(getData(keyword),keyword.name,=,evil doctor),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.vote_average)", "score": -0.3463169344643112, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is sum of votes of all movies with the keyword evil doctor?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),movie.vote_count),movie.vote_count))", "score": -0.38446017441884356, "correct_code": "sum(distinct(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,=,evil doctor),getData(movie),has_keyword.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 121, "beams": [{"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.3802447741668589, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.39180620363825075, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.4037733861041488, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4162818152180791, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.42305982130895964, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.42606622623938256, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.42784324468947094, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.43462125078035146, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4378321466228147, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.43934938599209256, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.44939357609420655, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(movie),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_count),movie.vote_count))", "score": -0.4509108154634844, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.number),movie.vote_count))", "score": -0.45745518917003525, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), oscar.year),movie.vote_count))", "score": -0.4590968623601798, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}, {"orig_question": "Have there been votes for movies with a runtime of 146 minutes?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(movie),getData(oscar),oscar_winner.oscar_id,language.iso_639_1),movie.id,oscar_nominee.movie_id),movie.runtime,=,146), movie.vote_average),movie.vote_count))", "score": -0.46210326729060275, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,=,146), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 122, "beams": [{"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.26112475987838246, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2703413684946427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2842175913205311, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.2934341999367913, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.30322032099280194, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3121343686495806, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,oscar_winner.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3124369296090621, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.32135097726584083, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.name),person.name))", "score": -0.32651321242155973, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.33522720009172924, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.34444380870798946, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.35422992976400003, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,spoken_language.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.36016860950953716, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(person),oscar_winner.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.36344652453606735, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birthplaces of people's movies which movie status is not Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),oscar_winner.person_id,person.id),movie.id,spoken_language.movie_id),movie.status,!=,Post Production), person.name),person.name))", "score": -0.3693852181257974, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),movie.status,!=,Post Production), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 123, "beams": [{"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.24429024966733343, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.28053758622675523, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,company.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.28289276645889555, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.name,!=,Quick Six Entertainment), country.name),country.name))", "score": -0.28334331848572036, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.movie_id), country.name),country.name))", "score": -0.28993660327555026, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.29124366541834873, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(company),production_country.iso_3166_1,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.29591558168665066, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),merge(merge(getData(movie),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id), country.name),country.name))", "score": -0.30385540468498384, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,production_company.company_id), country.name),country.name))", "score": -0.3039598038138599, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),company.id,company.id),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment), country.name),country.name))", "score": -0.30727527285380984, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),merge(merge(getData(movie),getData(production_company),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.3094347707481392, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.company_id,country.iso_3166_1),company.id,production_company.company_id), country.name),country.name))", "score": -0.32222674597728745, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.company_id,company.id),company.id,production_company.company_id), country.name),country.name))", "score": -0.3245819331550012, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),getData(production_company),company.id,production_company.company_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32858559308508245, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "What are the countries names where production companies produced movies except the company Quick Six Entertainment?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,!=,Quick Six Entertainment),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),production_company.movie_id,movie.id), country.name),country.name))", "score": -0.33509207872888336, "correct_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,!=,Quick Six Entertainment),merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),production_company.movie_id,movie.id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 124, "beams": [{"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.15358634524349798, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.19475430035338442, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.24127692973344564, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.24410408642251263, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.29483325540715083, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.29676842469075965, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.2972443282357893, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.name,!=,Berlin),getData(movie),cast.movie_id,movie.id), movie.vote_count),movie.vote_count))", "score": -0.30355442129935156, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),keyword.name,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.33960228153540833, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.birth_place,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3484829664740613, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3559895678408793, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.3666227550819264, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.name,!=,Berlin),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.vote_count),movie.vote_count))", "score": -0.3705613624792832, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.3776597287185955, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies with a minimal vote average and having cast who died in Berlin?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Berlin), movie.vote_count),movie.vote_count))", "score": -0.41561913480836665, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_place,=,Berlin),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.vote_average),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 125, "beams": [{"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.08496083905509737, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.21023199436474627, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.21346065064539863, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.2722718098825443, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,movie.id),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3084956528436511, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3255294099011168, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,2.6),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3321018567235907, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,oscar_winner.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.33873180595504754, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,language.iso_639_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.34597440377782196, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_winner),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.34749276812621493, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.oscar_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3484870112670066, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.vote_average,>,2.6),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34971615452866656, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),oscar.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.35427556707667784, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))", "score": -0.3589029963066494, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}, {"orig_question": "Is there any production country for movies with an average vote higher than 2.6?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.vote_average,>,2.6), country.name),movie.status))", "score": -0.37769622872984293, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.vote_average,>,2.6), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 126, "beams": [{"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.02504162034165347, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.5087528843492636, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<,6.24827), movie.original_language),movie.original_language))", "score": -0.5489205455887713, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,>,6.24827), movie.original_language),movie.original_language))", "score": -0.5572450634572306, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))", "score": -0.6172895150157274, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.original_language),movie.original_language))", "score": -0.6240636700533704, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),language.name))", "score": -0.6299661000739434, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), language.name),movie.original_language))", "score": -0.6708170562997111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.status))", "score": -0.7091250618468621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.vote_average))", "score": -0.7122528751860955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), movie.vote_average),movie.original_language))", "score": -0.7174611130018408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<=,6.24827), movie.original_language),movie.original_language))", "score": -0.7187610146138468, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.status),movie.original_language))", "score": -0.737639167906309, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.title),movie.original_language))", "score": -0.7440709705479094, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}, {"orig_question": "What are the distinct original languages of movies with a popularity smaller than 6.24827 ?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,6.24827),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.7476977229716029, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,6.24827), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 127, "beams": [{"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.15895456823688695, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.2309825934870363, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.23262082583931407, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.vote_count,<,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.29167055969507144, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.31812016310814617, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,spoken_language.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3451259637397234, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3462475449448212, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),spoken_language.iso_639_1,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.34633733947886114, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,982),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3489978237210093, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,language.iso_639_1),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3504662371073899, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),company.name))", "score": -0.36165718711646233, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3693857277478433, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.3770533993307591, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<=,982), genre.name),genre.name))", "score": -0.38096193505585296, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}, {"orig_question": "How many different generes do movies with a vote count below 982 have?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(language),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.vote_count,<,982), genre.name),genre.name))", "score": -0.39489144251891495, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.vote_count,<,982), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 128, "beams": [{"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.1092321026447087, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.1377193755696832, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.1553245870177953, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,oscar_winner.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.3399653928132608, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(oscar_winner),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.35215457125848804, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.vote_count,>,122), language.name),language.name))", "score": -0.3615619222897077, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,oscar_winner.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3677771692441297, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,oscar_nominee.movie_id),movie.runtime,>,122),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.3864784233156845, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),movie.original_language))", "score": -0.40907422572505114, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,<,122), language.name),language.name))", "score": -0.4127672077906518, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.runtime,>,122), language.name),language.name))", "score": -0.4133802612402488, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,oscar_winner.movie_id), language.name),language.name))", "score": -0.41513857496570816, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(has_keyword),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.4153529175698168, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.runtime,>,122), language.name),language.name))", "score": -0.42277993461088503, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there languages to which movies with a runtime longer than 122 minutes are translated to?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>,122),getData(spoken_language),movie.id,movie.vote_average),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.42610725572227925, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>,122),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 129, "beams": [{"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.15185873279066578, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.2283614554346821, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.2616855158574702, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),language.name,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.2995578922713826, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.30529853405840607, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.30806197057833246, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,????),movie.vote_average),movie.popularity))", "score": -0.3132213307381917, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.34419599401338646, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3666141691730677, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.original_language,=,????),movie.vote_average),movie.popularity))", "score": -0.38223115674762037, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.vote_average),movie.popularity))", "score": -0.3889888972427722, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))", "score": -0.3971046854589393, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(filter(getData(language),movie.original_language,=,????),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.39839216012600964, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,????),movie.popularity),movie.popularity))", "score": -0.39992115805512024, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}, {"orig_question": "What is the popularity of the movie with the highest vote average, among all the movies that were translated in \"????\" ?", "inferred_code": "done(extractValues(max(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average),movie.popularity))", "score": -0.4143690954919123, "correct_code": "done(extractValues(max(merge(merge(filter(getData(language),language.name,=,????),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),getData(movie),spoken_language.movie_id,movie.id),movie.vote_average),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 130, "beams": [{"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.42381032362414334, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4357544818997335, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.45244108917498915, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.45842887316521136, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4643852474505793, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.46526950373956427, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.4703730314408015, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(getData(oscar_nominee),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.4772136620151544, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),genre.name,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.48705963982359257, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(getData(oscar_winner),getData(person),oscar_winner.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.4939002692904101, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.540723896456757, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5495360665117083, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.5542784168064089, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,movie.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.5630905541763084, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}, {"orig_question": "Which genders have one the Oscar for Best Picture?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,best picture),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.death_place))", "score": -0.5685417141360678, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(person),oscar_winner.person_id,person.id),oscar.category,=,best picture), person.gender),person.gender))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 131, "beams": [{"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24328197248000336, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.251174075754557, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),genre.name))", "score": -0.28454711056201826, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),getData(has_genre),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.33604478322792253, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.358527050751013, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_place,=,Bray, Berkshire, England),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3760467597513758, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.person_id,person.id),getData(has_genre),person.id,crew.person_id),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.38084087020053187, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.38095388053663554, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), genre.name),person.death_place))", "score": -0.38116297948635475, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(genre),has_genre.genre_id,genre.id),person.death_place,=,Bray, Berkshire, England), person.death_place),genre.name))", "score": -0.38145494354682197, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.38940698992665623, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.39108548826529, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,movie.id), genre.name),genre.name))", "score": -0.3995386107293314, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),getData(movie),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.4007289374304211, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "In how many genres were people who died in Bray, Berkshire, England part of the crew?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Bray, Berkshire, England),merge(merge(getData(crew),getData(person),crew.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),crew.movie_id,person.id),person.id,crew.person_id), genre.name),genre.name))", "score": -0.43360292958118896, "correct_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Bray, Berkshire, England),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 132, "beams": [{"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.23800268504859748, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.25571257041644063, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.2775296365799583, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.2878555732027216, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,P??????), country.name),country.name))", "score": -0.30372357609225753, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3112100505673143, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31487948379923203, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(language),language.name,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.3224754402478488, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32445595278482553, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(language),language.name,!=,P??????),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.32578832676991976, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),language.name,!=,P??????),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.32614487347976645, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,=,P??????), country.name),country.name))", "score": -0.3374335555583995, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.movie_id),language.name,>,P??????), country.name),country.name))", "score": -0.3389500929289317, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(merge(merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,>,P??????), country.name),country.name))", "score": -0.34374435755513616, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}, {"orig_question": "Are there names of countries that produced movies translated in a language different than \"P??????\" ? ", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),language.iso_639_1,spoken_language.iso_639_1),language.name,<,P??????), country.name),country.name))", "score": -0.34641050796571515, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),spoken_language.movie_id,movie.id),language.name,!=,P??????), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 133, "beams": [{"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2872046840517931, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.34208403934329945, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3566210000874091, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.death_day,=,1991-01-04), company.name),company.name))", "score": -0.35841456242156167, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(company),production_company.company_id,company.id),person.birth_place,=,1991-01-04), company.name),company.name))", "score": -0.3634875708764321, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,crew.person_id), company.name),company.name))", "score": -0.36480733838477436, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3663224788555572, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(movie),crew.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.person_id), company.name),company.name))", "score": -0.37335834931010237, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_day,=,1991-01-04),getData(company),production_company.movie_id,movie.id), company.name),company.name))", "score": -0.3878427312549339, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,movie.id), company.name),company.name))", "score": -0.38933178662062984, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,!=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4095680648913889, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(crew),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4115003553789154, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),merge(getData(oscar_nominee),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4162101777475244, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.death_day,=,1991-01-04),getData(oscar_nominee),person.id,crew.person_id),getData(company),production_company.movie_id,company.id), company.name),company.name))", "score": -0.4212018341470635, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}, {"orig_question": "How many production companies have no crew members who died on January 4th 1991? ", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.name,=,1991-01-04),getData(production_company),person.id,crew.person_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.42347274860904366, "correct_code": "count(extractValues(distinct(merge(filter(getData(person),person.death_day,!=,1991-01-04),merge(getData(crew),merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),crew.movie_id,movie.id),person.id,crew.person_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 134, "beams": [{"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.15252575298622845, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.19109063290766315, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.2264950870993913, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.25505737844149623, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),person.birth_day,=,8.58322), keyword.name),keyword.name))", "score": -0.2710671663840567, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,=,8.58322),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.2724224146921242, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.release_date,=,8.58322), keyword.name),keyword.name))", "score": -0.27629498364967064, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.27954225389328863, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.homepage,=,8.58322), keyword.name),keyword.name))", "score": -0.2995381278624763, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.3474327464375342, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_average,=,8.58322), keyword.name),keyword.name))", "score": -0.3556775040643689, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(cast),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.popularity,=,8.58322), keyword.name),keyword.name))", "score": -0.3632020685021489, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.budget,=,8.58322), keyword.name),keyword.name))", "score": -0.37294860790311957, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,!=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3851049194664793, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}, {"orig_question": "Provide the Keyword Name of movies who have a popularity score  = 8.58322", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,=,8.58322),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.revenue,=,8.58322), keyword.name),keyword.name))", "score": -0.4114232050130194, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,=,8.58322),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 135, "beams": [{"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.0902418777158812, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.12575624315281755, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.18728372329049905, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,<,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.30660322770463505, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.31179778486927806, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825), company.name),company.name))", "score": -0.3168181828025892, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(has_genre),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.32769067877929786, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(production_country),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3290185871815299, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,<,0.545825), company.name),company.name))", "score": -0.33487666934778676, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37077282056792726, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.545825),getData(crew),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.37521663674209976, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.37623018811915204, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.popularity,>=,0.545825), company.name),company.name))", "score": -0.39315996875303805, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,<,0.545825),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.4032825056455504, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}, {"orig_question": "Which companies produced movies with a popularity of more than 0.545825?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.545825),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),movie.title))", "score": -0.440504765373588, "correct_code": "done(distinct(extractValues(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.popularity,>,0.545825),company.name), company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 136, "beams": [{"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,Switzerland), movie.id),movie.vote_average)", "score": -0.17093897646215617, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.22255739632296392, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.29237347188596796, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(country),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.326236247369313, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3426502474795763, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3575953117861449, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(keyword),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.3674613345178297, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.38263120883156926, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,oscar_winner.oscar_id),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4027768513542353, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.405855072976747, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4212436840951137, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4274114536658099, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.vote_average),movie.vote_average)", "score": -0.47930078692465894, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(getData(movie),movie.title,=,Switzerland), movie.id),movie.vote_average)", "score": -0.4826154285714198, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}, {"orig_question": "What is the sum of the vote average for movies from Switzerland?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,Switzerland), movie.id),movie.vote_average)", "score": -0.48398044192334305, "correct_code": "sum(distinct(merge(filter(getData(country),country.name,=,Switzerland),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 137, "beams": [{"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.153986981406301, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1644067388424964, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.status,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1777356598902027, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.21772764313226797, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2364376692954445, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.28916197116192255, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.2972104100194234, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.status,=,Released), genre.name),genre.name))", "score": -0.3012606527809986, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),person.gender,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3222688211318468, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.status,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,=,Released), genre.name),genre.name))", "score": -0.34075058335327496, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,=,Released),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3530501232872844, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Released),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3566036481913525, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.36781475610563813, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,=,Released), genre.name),genre.name))", "score": -0.3731417756476229, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}, {"orig_question": "How many genres are associated to released movies?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,=,Released),getData(genre),has_genre.genre_id,genre.id), genre.name),person.death_place))", "score": -0.376618301569182, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.status,=,Released), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 138, "beams": [{"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.01924240963853663, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,132), movie.vote_count),movie.vote_count))", "score": -0.46608352803013986, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,132), movie.vote_count),movie.vote_count))", "score": -0.47017917178891366, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))", "score": -0.6115832573996158, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.revenue),movie.vote_count))", "score": -0.7159433361593983, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7647736111757695, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.revenue))", "score": -0.7761154207619256, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.title))", "score": -0.7795273694428033, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.title),movie.vote_count))", "score": -0.7867160436217091, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,132), movie.vote_count),movie.vote_count))", "score": -0.7926863471147954, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), person.death_day),movie.vote_count))", "score": -0.7947706576887867, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), oscar.number),movie.vote_count))", "score": -0.8039343949858448, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_average))", "score": -0.8247535857590265, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,132), movie.vote_count),movie.vote_count))", "score": -0.8356281533124275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}, {"orig_question": "What are the vote counts of movies which have a runtime of 132 or less?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.runtime,<=,132),movie.vote_count), movie.vote_count))", "score": -0.836190497255302, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,132), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 139, "beams": [{"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.2831817949424936, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.2932566079012152, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.34661698471751945, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3490563559071645, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.3786866791650523, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>=,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.39272578191616814, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(merge(filter(getData(movie),movie.vote_average,>,6.2),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.39500519110787374, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.4002147592987908, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.4032636186713702, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4062350315516376, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.id),oscar.number)", "score": -0.4103060791613897, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.41327749204165715, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.vote_average,>=,6.2), oscar.number),oscar.number)", "score": -0.4291109168347074, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.42984509673447885, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}, {"orig_question": "How much is the sum of the nominated movies oscars numbers when the vote average must be 6.2 or more?", "inferred_code": "sum(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.vote_average,>=,6.2),getData(oscar),oscar_nominee.movie_id,oscar.id), oscar.id),oscar.number)", "score": -0.43239283610920853, "correct_code": "sum(distinct(merge(filter(getData(movie),movie.vote_average,>=,6.2),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 140, "beams": [{"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,>=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.1884228498977411, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.19023003539919822, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.vote_count),movie.vote_count)", "score": -0.2109285812354848, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.vote_count),movie.vote_count)", "score": -0.2292875705293906, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.27142166882947205, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.28225098575744895, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.3001408699277863, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,>=,1911-05-11), movie.id),movie.vote_count)", "score": -0.3109701868557632, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.3115427885127271, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1911-05-11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id), movie.id),movie.vote_count)", "score": -0.3122471339100064, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.name,=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.31481254314372964, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,>=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.32237210544070405, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id),person.birth_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.32896982428480376, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.death_day,<=,1911-05-11), movie.vote_count),movie.vote_count)", "score": -0.33159615042691165, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}, {"orig_question": "What is the sum of the movie vote counts of movies with an oscar winner who was born on or earlier than May 11th 1911?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),person.id,oscar_winner.person_id),person.birth_day,<=,1911-05-11), movie.id),movie.vote_count)", "score": -0.3402619803954712, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<=,1911-05-11),getData(oscar_winner),person.id,oscar_winner.person_id),getData(movie),oscar_winner.movie_id,movie.id), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 141, "beams": [{"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.532988037618539, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5366361522252623, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5407747028082791, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5465398979743031, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.5555167960517824, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(movie),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.vote_count))", "score": -0.5649223543185617, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5654205418008232, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,United Arab Emirates),movie.popularity),movie.vote_count))", "score": -0.5691553667575738, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.581587489021198, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.5872580512810859, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.5914912347702388, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.593110754482903, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(person),person.name,=,United Arab Emirates),getData(production_country),person.id,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.popularity),movie.vote_count))", "score": -0.595044716470826, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(spoken_language),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))", "score": -0.6004681566597299, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}, {"orig_question": "What is the vote count of the movie with the highest popularity among movies produced in \"United Arab Emirates\" ? ", "inferred_code": "done(extractValues(max(merge(filter(getData(movie),country.name,=,United Arab Emirates),merge(getData(cast),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.vote_count))", "score": -0.6030145002319438, "correct_code": "done(extractValues(max(merge(filter(getData(country),country.name,=,United Arab Emirates),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.popularity),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 142, "beams": [{"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.11905367443138412, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.1807732975804709, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.1974019123990887, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.240428050025412, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.28635975659172386, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),genre.id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.30957976171800217, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(has_genre),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))", "score": -0.3172580613503877, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.title),movie.title))", "score": -0.31732938162638424, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.32252197356750695, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(genre),merge(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.3229511998148731, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,!=,TV Movie), movie.title),movie.title))", "score": -0.3366967709977911, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),person.death_place,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.title),movie.title))", "score": -0.36665728639161965, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.title),movie.title))", "score": -0.37287840648854603, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(genre),genre.name,!=,TV Movie),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.budget),movie.title))", "score": -0.428675594263536, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What are the movie titles form movies that are not from the genre TV Movie?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.title),movie.title))", "score": -0.4292067831879473, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(genre),genre.name,!=,TV Movie),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 143, "beams": [{"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.3454092636391947, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.36137130794434835, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.36858377052621977, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.release_date))", "score": -0.40442807850195095, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day),movie.title))", "score": -0.43946613872161183, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.revenue),movie.title))", "score": -0.4488561934130884, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.4524537149880625, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.popularity),movie.title))", "score": -0.46518736439092584, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.popularity),movie.title))", "score": -0.4659318740741598, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,<,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.4684157592932162, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1981-08-01), movie.release_date),movie.popularity))", "score": -0.4762120979721658, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.title))", "score": -0.47878873648451253, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id),movie.revenue),movie.title))", "score": -0.4811494086960795, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(merge(filter(getData(person),person.death_day,=,1981-08-01),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.revenue),movie.title))", "score": -0.4818939183793135, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}, {"orig_question": "Which movies with an actor that died on 1981-08-01 has the lowest popularity?", "inferred_code": "done(extractValues(min(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,=,1981-08-01),movie.popularity),movie.release_date))", "score": -0.4861978710876049, "correct_code": "done(extractValues(min(merge(merge(filter(getData(person),person.death_day,=,1981-08-01),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),movie.popularity),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 144, "beams": [{"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.17183531082870082, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.17677410370976818, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.death_place))", "score": -0.19358956608733555, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),movie.release_date))", "score": -0.29150584109405425, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),company.name))", "score": -0.2964446339751216, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),production_company.company_id))", "score": -0.30744474898403146, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,>,2000-01-01), company.name),person.death_place))", "score": -0.313260096352689, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.3152980767314294, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),company.name))", "score": -0.32023686961249676, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),person.birth_place))", "score": -0.32981928610662375, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.death_day,>,2000-01-01), company.name),person.death_place))", "score": -0.3370523319900641, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),person.birth_day,>,2000-01-01), company.name),movie.title))", "score": -0.35829292339064733, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),person.birth_day,>,2000-01-01), company.name),movie.release_date))", "score": -0.3642492312238894, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,>,2000-01-01), company.name),movie.release_date))", "score": -0.3647947034995507, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}, {"orig_question": "How many companies released a movie after 2000-01-01?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),person.birth_day,>,2000-01-01), company.name),company.name))", "score": -0.36918802410495677, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2000-01-01), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 145, "beams": [{"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.060216630110517144, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.release_date))", "score": -0.2951117365155369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.release_date),movie.release_date))", "score": -0.301038226345554, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.gender,=,50.0736), movie.release_date),movie.release_date))", "score": -0.4051150886807591, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.popularity),movie.release_date))", "score": -0.5207501372788101, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.popularity))", "score": -0.5694846017286181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))", "score": -0.6233103488048073, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,50.0736), movie.release_date),movie.release_date))", "score": -0.7210965551203117, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.popularity),movie.release_date))", "score": -0.7556452436838299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,50.0736), movie.popularity),movie.release_date))", "score": -0.761571733513847, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.birth_day,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7742019204888493, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,50.0736), movie.release_date),movie.release_date))", "score": -0.7803984193596989, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), person.gender),movie.release_date))", "score": -0.7815957686398178, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,50.0736), movie.release_date),movie.popularity))", "score": -0.8043797081336379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}, {"orig_question": "What are the release dates of movies that have popularity of 50.0736?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),person.gender))", "score": -0.8076916439458728, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,50.0736), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 146, "beams": [{"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.14199167362676235, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.2718300210617599, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.vote_average))", "score": -0.3604747044228134, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),person.name))", "score": -0.4537901865624008, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),person.name))", "score": -0.4540444003723678, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),person.name))", "score": -0.4637080390311894, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),oscar.year))", "score": -0.5187751638077316, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.popularity))", "score": -0.5643270301006851, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.popularity),person.name))", "score": -0.5792157935284195, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), language.name),language.name))", "score": -0.5836285339973983, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.gender),language.name))", "score": -0.5838827478073654, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),movie.revenue))", "score": -0.5913821446083602, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),person.death_day,<,2016-12-24), person.name),language.name))", "score": -0.593546386466187, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), person.name),keyword.name))", "score": -0.5974971043251571, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}, {"orig_question": "What are the name of the person with a death day before 2016-12-24?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<,2016-12-24), movie.vote_average),person.name))", "score": -0.6236462878368911, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,2016-12-24), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 147, "beams": [{"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.12279435273209138, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.14747414750865187, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.15838350423517503, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.20581719120605818, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.35415202799518253, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,!=,Colombiana), keyword.name),keyword.name))", "score": -0.3704281534821355, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.title,=,Colombiana), keyword.name),keyword.name))", "score": -0.37161970655210963, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.title,=,Colombiana),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3803434105429797, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<=,Colombiana), keyword.name),keyword.name))", "score": -0.3965820179237071, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.41078481137700495, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.4119229050420123, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,<,Colombiana), keyword.name),keyword.name))", "score": -0.4139053960504334, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,!=,Colombiana),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.41527712908027203, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),keyword.name,=,Colombiana), keyword.name),keyword.name))", "score": -0.41808369983088395, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}, {"orig_question": "Which keywords exist for movies called Colombiana?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Colombiana),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.4216073266915812, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.title,=,Colombiana), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 148, "beams": [{"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.revenue)", "score": -0.1505043443934448, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)", "score": -0.26438897140879647, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,=,Rumored), movie.id),movie.revenue)", "score": -0.29534601108328884, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,Rumored), movie.id),movie.revenue)", "score": -0.3613142510164232, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.status,!=,Rumored), movie.id),movie.revenue)", "score": -0.47519887803177496, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.popularity,!=,Rumored), movie.id),movie.revenue)", "score": -0.5061559177062673, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.revenue),movie.revenue))", "score": -0.584170144626114, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Rumored), movie.revenue),movie.revenue))", "score": -0.6397868810381624, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,<,Rumored), movie.id),movie.revenue)", "score": -0.6713738568484606, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,Rumored), movie.id),movie.revenue)", "score": -0.6987998372888338, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.original_language,=,Rumored), movie.id),movie.revenue)", "score": -0.6989302763625422, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.budget)", "score": -0.777953330490376, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,Rumored),movie.revenue),movie.revenue))", "score": -0.7926236820203485, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,Rumored), movie.id),movie.vote_count)", "score": -0.8090344906071886, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}, {"orig_question": "Which is the average revenue of the movies that are rumored?", "inferred_code": "avg(filter(getData(movie),movie.vote_average,<,Rumored),movie.revenue)", "score": -0.8186052464366737, "correct_code": "avg(distinct(filter(getData(movie),movie.status,=,Rumored), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 149, "beams": [{"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.048670766584109515, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.30947865144116804, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.35816623538258197, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.birth_place),person.birth_place))", "score": -0.39188584658688314, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.44599270702014143, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.gender))", "score": -0.48257124301744625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.49979489270630395, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.death_place),person.birth_place))", "score": -0.5388296173769049, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id), person.birth_place),person.birth_place))", "score": -0.5421097486007905, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,oscar_winner.person_id),person.gender,=,m), person.birth_place),person.birth_place))", "score": -0.5726033134403378, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,=,m),getData(crew),person.id,crew.person_id),getData(person),oscar_winner.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5917747337984158, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.birth_place),person.birth_place))", "score": -0.5918201413407546, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.death_place))", "score": -0.598552702635061, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,=,m), person.gender),person.birth_place))", "score": -0.6082418527215034, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of male persons?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.gender,=,m),person.birth_place), person.birth_place))", "score": -0.6115494570985902, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,m), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 150, "beams": [{"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)", "score": -0.07318881373010173, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.id),movie.vote_count)", "score": -0.39637311431072814, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.vote_count),movie.vote_count))", "score": -0.4528200410932186, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,7.4), movie.id),movie.vote_count)", "score": -0.5137603667189518, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,7.4), movie.id),movie.vote_count)", "score": -0.5936611184824411, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,7.4), movie.vote_count),movie.vote_count))", "score": -0.6109889306753757, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.revenue)", "score": -0.6505375831805281, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,7.4),movie.vote_count),movie.vote_count))", "score": -0.6528784336423996, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,7.4), movie.id),movie.vote_count)", "score": -0.6676316470059123, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>=,7.4), movie.id),movie.vote_count)", "score": -0.6711607590380319, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,7.4), movie.id),movie.vote_count)", "score": -0.7108099021839309, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_average)", "score": -0.7132807170162202, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.revenue),movie.vote_count))", "score": -0.7657464452713612, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.vote_average,=,7.4),movie.vote_average),movie.vote_count))", "score": -0.7855453979591402, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}, {"orig_question": "Find the total vote count for the movies having the average vote of 7.4. ", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.runtime)", "score": -0.802917572618795, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,=,7.4), movie.id),movie.vote_count)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 151, "beams": [{"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.06598594168099225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.3685504499626404, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,5.4), movie.vote_average),movie.vote_average))", "score": -0.4350263507840282, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.runtime),movie.vote_average))", "score": -0.4644417477575189, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.popularity),movie.vote_average))", "score": -0.5037708593335992, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_count))", "score": -0.5131660992083198, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.title))", "score": -0.5200926357683784, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.revenue))", "score": -0.5205223256525642, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.popularity))", "score": -0.5295788937983161, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.5554555658054596, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.runtime))", "score": -0.561993777173484, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.status))", "score": -0.5819006556448585, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.status),movie.vote_average))", "score": -0.6047478033033258, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.id),movie.vote_average))", "score": -0.6120778633085138, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}, {"orig_question": "What are the movies with an average rating of 5.4?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.vote_average),movie.vote_average))", "score": -0.6343027835609973, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,5.4), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 152, "beams": [{"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.042251198770827614, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.34725317705306225, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.4139158578909701, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.5622082271002, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.popularity))", "score": -0.5931050523504382, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,!=,Post Production),movie.release_date), movie.release_date))", "score": -0.6042342368818936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.6047607513464754, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),person.gender))", "score": -0.6577068909391528, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),crew.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.712510802998257, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), person.gender),movie.release_date))", "score": -0.7193248190305894, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.7278264451015275, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),crew.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.vote_average,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.7321306082194095, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,!=,Post Production), movie.release_date),movie.release_date))", "score": -0.8021280022658175, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.popularity),movie.release_date))", "score": -0.8107359229761641, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}, {"orig_question": "What are all release dates of movies that are not in Post Production?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.budget),movie.release_date))", "score": -0.8202703513525194, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,!=,Post Production), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 153, "beams": [{"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.12816267671886752, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>,17500000), country.name),country.name))", "score": -0.19223695951301537, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<,17500000), country.name),country.name))", "score": -0.19286323092858976, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.19860337618281912, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.2021690909365919, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,!=,17500000), country.name),country.name))", "score": -0.25364455393489777, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,<,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.2602828648057777, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.299998019053923, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,17500000),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3029634925875559, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,>=,17500000), country.name),country.name))", "score": -0.3162765332071033, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.revenue,<=,17500000), country.name),country.name))", "score": -0.3234612661799248, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,<=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.34139847321059247, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))", "score": -0.37821383040632855, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,17500000),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38201216963743523, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}, {"orig_question": "how many production countries are there for movies with a revenue of 17500000.0?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id),movie.revenue,=,17500000), country.name),country.name))", "score": -0.4003774704870099, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.revenue,=,17500000), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 154, "beams": [{"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.20030518048592888, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.21460915121625945, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.22362872297571584, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_place),person.death_place))", "score": -0.2360822943883691, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.2421561161610982, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.2834656191663055, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,<,ro), person.death_place),person.death_place))", "score": -0.2972417180949228, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_place),person.death_place))", "score": -0.2977695898966361, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,!=,ro), person.death_place),person.death_place))", "score": -0.3410704392563197, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,<,ro), person.death_day),person.death_place))", "score": -0.35785988755503995, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,=,ro), person.death_day),person.death_place))", "score": -0.37031345896769324, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id),movie.original_language,!=,ro), person.death_day),person.death_place))", "score": -0.3763873006760601, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),movie.original_language,=,ro), person.death_place),person.death_place))", "score": -0.38259947273897826, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.birth_place))", "score": -0.39070924082699793, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Show the place of death for crew members who have died except those where the original movie language is Romanian ", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,<,ro),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.death_day),person.death_place))", "score": -0.39646860338709844, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,ro),getData(crew),movie.id,crew.movie_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 155, "beams": [{"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.09805983642741296, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.16451013902425968, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.18411258337118017, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),language.name,=,af), genre.name),genre.name))", "score": -0.21153001785720385, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.24198119920095443, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2634403740550762, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.original_language,=,af),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.2832292521442243, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,af), genre.name),genre.name))", "score": -0.29930497411948465, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.31467658295115153, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.338690515751388, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.original_language,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3626570065835073, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39339010475184005, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.title,=,af),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.40089157527611585, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,af), genre.name),genre.name))", "score": -0.40186665341396444, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Is there any genre of a movie with af as original language?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),movie.original_language,=,af), genre.name),genre.name))", "score": -0.4133441123177333, "correct_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,af),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 156, "beams": [{"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.12929258942414795, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.14549766329543873, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>=,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.17001194386162424, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.18723862615443354, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))", "score": -0.2931505956867996, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>=,5.93923), language.name),language.name))", "score": -0.2945471671120136, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.3066908801591547, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,5.93923),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))", "score": -0.32975077137549763, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),language.name))", "score": -0.33054941757660566, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.revenue,>,5.93923), language.name),language.name))", "score": -0.3524932038422992, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), language.name),movie.original_language))", "score": -0.38564301354442854, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.3881576734417002, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),movie.original_language))", "score": -0.3975711311280218, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id),movie.popularity,>=,5.93923), movie.original_language),language.name))", "score": -0.4023384874714697, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}, {"orig_question": "Are there any languages in movies when the movie popularity was 5.93923 or more?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.popularity,>,5.93923), language.name),language.name))", "score": -0.4137520225200227, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>=,5.93923),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),movie.id,spoken_language.movie_id), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 157, "beams": [{"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.07375611494626355, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.24472315366710973, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.original_language))", "score": -0.38460148535068583, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.45797755250042715, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.4831585561796601, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.original_language))", "score": -0.5034045137424636, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5392494239770657, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>=,857611174), movie.original_language),movie.title))", "score": -0.555568524071532, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.5645900428800692, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.title),movie.original_language))", "score": -0.5778255387379235, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.popularity))", "score": -0.5819618335956032, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.584676385219102, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.vote_average))", "score": -0.5925939610969159, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), language.name),movie.original_language))", "score": -0.5947863193168814, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}, {"orig_question": "How many movies with different original languages with a movie revenue of 857611174.0 or less are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,oscar.id),movie.id,spoken_language.movie_id),movie.revenue,<=,857611174), movie.original_language),movie.title))", "score": -0.6100170041221056, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,<=,857611174), movie.original_language),movie.original_language))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 158, "beams": [{"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.04818940448240028, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),movie.budget))", "score": -0.27848075429574237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,<=,149), movie.budget),movie.budget))", "score": -0.4780342546910106, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),person.death_place))", "score": -0.5082867979690491, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,149), movie.budget),movie.budget))", "score": -0.5756592718571483, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,149), movie.budget),movie.budget))", "score": -0.6063417057193874, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_place),movie.budget))", "score": -0.6078188217397837, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.revenue),movie.budget))", "score": -0.6217433012243418, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.revenue))", "score": -0.6346199154540955, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,cast.movie_id),movie.vote_count,<=,149), movie.budget),movie.budget))", "score": -0.6402623520662065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.title))", "score": -0.653688216178125, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,149), movie.budget),movie.budget))", "score": -0.7083256045043527, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,>=,149), movie.budget),person.death_place))", "score": -0.7385781477823912, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), person.death_day),movie.budget))", "score": -0.7608336008306651, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}, {"orig_question": "Which budgets do movies with votes less than or equal 149 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),person.death_day))", "score": -0.7812764286682068, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,149), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 159, "beams": [{"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.021418578694110346, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,movie.revenue),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.5760062431112655, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(cast),movie.id,cast.movie_id),movie.vote_average,<,4.6), movie.id),movie.revenue)", "score": -0.5923564618043611, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.budget)", "score": -0.6326477736469927, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_count,<,4.6), movie.id),movie.revenue)", "score": -0.6677769202660122, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.popularity)", "score": -0.7079390838127341, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.revenue,<,4.6), movie.id),movie.revenue)", "score": -0.7533378832589077, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(filter(getData(movie),movie.vote_average,<,4.6),movie.revenue)", "score": -0.76030625805785, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.vote_count)", "score": -0.7991477146133195, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,!=,4.6), movie.id),movie.revenue)", "score": -0.8088632995180809, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.revenue),movie.revenue)", "score": -0.8146776818343213, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),cast.movie_id)", "score": -0.8272587426134012, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),person.death_day)", "score": -0.8286243802824576, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,>,4.6), movie.id),movie.revenue)", "score": -0.8371542521109614, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}, {"orig_question": "What is the sum of revenues for movies with a vote average of lower than 4.6?", "inferred_code": "sum(distinct(filter(getData(movie),movie.vote_average,<=,4.6), movie.id),movie.revenue)", "score": -0.8403034955313026, "correct_code": "sum(distinct(filter(getData(movie),movie.vote_average,<,4.6), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 160, "beams": [{"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))", "score": -0.11177301451543646, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.popularity),movie.status))", "score": -0.1901003701415975, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.status))", "score": -0.2085275377760184, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,New Zealand),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.status),movie.status))", "score": -0.22434567470815772, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.release_date),movie.status))", "score": -0.2703761242506094, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.release_date))", "score": -0.31249640753137464, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.runtime),movie.status))", "score": -0.331422591239361, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), person.gender),movie.status))", "score": -0.3325849541054869, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), country.name),movie.status))", "score": -0.3558987231212731, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.runtime))", "score": -0.3672257994423384, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.status))", "score": -0.3675272072178657, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.release_date))", "score": -0.37350320394805353, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(country),country.name,=,New Zealand),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.status),movie.original_language))", "score": -0.3867295192051418, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.popularity))", "score": -0.3870179715103233, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}, {"orig_question": "What are the statuses of movies wit New Zealand as production country?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.status,=,New Zealand), movie.status),movie.status))", "score": -0.39066953631934725, "correct_code": "done(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,New Zealand), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 161, "beams": [{"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.17973510641056137, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.2250631729152381, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<,2013-02-13), company.name),company.name))", "score": -0.23560193960976689, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.2575292178910408, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_keyword.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.26298888911596435, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,>=,2013-02-13), company.name),company.name))", "score": -0.27184233302660327, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,production_country.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.27401972937283137, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.release_date,<=,2013-02-13), company.name),company.name))", "score": -0.2894065513782513, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,spoken_language.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3126672934594846, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.3369878963757475, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),getData(production_company),movie.id,has_genre.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35066915552894273, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.3659166554099529, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,!=,Sloven\u0161?ina), company.name),company.name))", "score": -0.3805115673917792, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,has_keyword.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.3941280838221358, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}, {"orig_question": "How many companies produced movies with a spoken language other than Sloven\u0161?ina and a release date of 2013-02-13 or before?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,!=,2013-02-13),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,!=,2013-02-13), company.name),company.name))", "score": -0.40374763309673267, "correct_code": "count(extractValues(distinct(filter(filter(merge(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),spoken_language.movie_id,movie.id),movie.release_date,<=,2013-02-13),language.name,!=,Sloven\u0161?ina), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 162, "beams": [{"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.11705678128417418, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)", "score": -0.21381948228443157, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2608257228189425, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>=,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.26351439633416757, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.27323150929018464, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.2772608134882346, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.2913336118818906, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.30337386414545986, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(merge(filter(getData(person),person.death_day,>,1986-11-27),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3060625376606849, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(filter(merge(merge(getData(person),getData(cast),person.id,cast.person_id),getData(movie),cast.movie_id,movie.id),person.death_day,>,1986-11-27), movie.id),movie.popularity)", "score": -0.3107137500151675, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.birth_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.3113676926943188, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(cast),person.id,cast.person_id),person.death_day,>=,1986-11-27),filter(getData(person),person.birth_day,>=,1986-11-27),cast.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.3395904432615517, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3413738773781791, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,<=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.popularity)", "score": -0.34350251303596924, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}, {"orig_question": "What is the average popularity of movies that have a cast member who died on or after November 27th 1986?", "inferred_code": "avg(distinct(merge(filter(getData(person),person.death_day,>=,1986-11-27),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.popularity),movie.popularity)", "score": -0.35256015870919805, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.death_day,>=,1986-11-27), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 163, "beams": [{"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.3758502435781715, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.number)", "score": -0.38875092382084087, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)", "score": -0.39247038466721124, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.40747990260312733, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),person.name,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4157018716330005, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.41635399878722384, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.42657472773951355, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(movie),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.4315742480128806, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.year)", "score": -0.4327284661393619, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.year)", "score": -0.43743954134258817, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(person),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.oscar_id), oscar.id),oscar.number)", "score": -0.4393452251312864, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.44263217284401063, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,!=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.year),oscar.number)", "score": -0.4448121514207568, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id), oscar.id),oscar.number)", "score": -0.44667775207355204, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}, {"orig_question": "Find the average oscar years of oscars in which a personality named Akbar Kurtha was nominated for the Oscar.", "inferred_code": "avg(distinct(merge(merge(filter(getData(oscar),oscar.year,=,Akbar Kurtha),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.year)", "score": -0.4515062690281071, "correct_code": "avg(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_nominee.person_id),person.name,=,Akbar Kurtha), oscar.id),oscar.year)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 164, "beams": [{"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))", "score": -0.13620924661154277, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.status),movie.status))", "score": -0.22016840139622218, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,How She Move), movie.status),movie.status))", "score": -0.38716982761616237, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,How She Move), movie.status),movie.status))", "score": -0.41584472814793116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.popularity),movie.status))", "score": -0.4909175549655629, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,How She Move), movie.status),movie.status))", "score": -0.5418059126495791, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.sub_category,=,How She Move), movie.status),movie.status))", "score": -0.545340408480115, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),oscar.category,=,How She Move), movie.status),movie.status))", "score": -0.5510004059433413, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.popularity),movie.status))", "score": -0.5748767097502423, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.vote_average),movie.status))", "score": -0.5878814970164967, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,How She Move), movie.status),movie.status))", "score": -0.6559066073059512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.vote_average))", "score": -0.6635624416194332, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,How She Move), movie.vote_average),movie.status))", "score": -0.6718406518011761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(max(filter(getData(movie),movie.title,=,How She Move),movie.status),movie.status))", "score": -0.6945597554004053, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}, {"orig_question": "What is the status of the movie How She Move?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,How She Move), movie.popularity),movie.status))", "score": -0.7418781126871181, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,How She Move), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 165, "beams": [{"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.028798702865969972, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.popularity),movie.revenue))", "score": -0.49866295442370756, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))", "score": -0.4996309287198528, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_average))", "score": -0.5051801761092065, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.vote_count))", "score": -0.5539324840010522, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,2.2), movie.revenue),movie.revenue))", "score": -0.6238787069396494, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,2.2), movie.revenue),movie.revenue))", "score": -0.6452987685279368, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.budget),movie.revenue))", "score": -0.6595555304029403, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,2.2), movie.revenue),movie.revenue))", "score": -0.6916687979773997, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.popularity))", "score": -0.7033883889616845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.person_id),movie.revenue))", "score": -0.7232779620626388, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), cast.movie_id),movie.revenue))", "score": -0.7268976329305588, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),cast.person_id))", "score": -0.7368259390295862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.vote_average,<,2.2),movie.revenue), movie.revenue))", "score": -0.7432506672776071, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues do movies with an average rating of less than 2.2 have?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<=,2.2), movie.revenue),movie.revenue))", "score": -0.752081081032884, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,<,2.2), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 166, "beams": [{"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.09088874983128134, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.16004059825331363, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.21532164306358978, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.2643483855486497, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3154089672434593, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.31972643828479835, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),movie.release_date,>,1999-12-16),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32009764366304616, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.release_date,>,1999-12-16), genre.name),genre.name))", "score": -0.3403406498827557, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16), genre.name),person.death_place))", "score": -0.3629068172830087, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,1999-12-16), genre.name),genre.name))", "score": -0.3817666023409684, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.39539772569595233, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.budget,>,1999-12-16), genre.name),genre.name))", "score": -0.4007991645876381, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.4033101792223927, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,1999-12-16), genre.name),genre.name))", "score": -0.4122220192257661, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "Which genres do movies released after 1999-12-16 belong to?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.release_date,>,1999-12-16),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.43802431793153396, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.release_date,>,1999-12-16),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 167, "beams": [{"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.title))", "score": -0.3063830112296273, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.runtime))", "score": -0.39671516168891685, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.runtime),movie.title))", "score": -0.4314471309262444, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.popularity),movie.title))", "score": -0.4338843052464654, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.id),movie.title))", "score": -0.44779284048854606, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.title),movie.title))", "score": -0.4520605628567864, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.release_date))", "score": -0.46365236986457603, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.status),movie.title))", "score": -0.48460526514827507, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.release_date),movie.status))", "score": -0.5000016664344002, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.5519712354095894, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.title))", "score": -0.559383606784982, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.release_date))", "score": -0.5659013376191784, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.release_date))", "score": -0.573313708994571, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,af), movie.release_date),movie.title))", "score": -0.577280276262353, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}, {"orig_question": "How many movies in africaans exist?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),oscar.id,spoken_language.iso_639_1),language.name,=,af), movie.title),movie.title))", "score": -0.584692674218596, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,af), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 168, "beams": [{"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.0704110117820103, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.1902413352996879, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.22482526192036084, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.26007635379669863, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.27537700359898803, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))", "score": -0.3155205074464292, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3168280961359264, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.revenue,>=,141000000),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3385528688013587, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.3547531076001761, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,!=,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3654561062397097, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3655893945294722, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.3696677790893094, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3791960322189355, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.revenue,>=,141000000),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3796798966439183, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}, {"orig_question": "To which genres do movies with a revenue of over 141000000 Dollars belong?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.revenue,>,141000000),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>=,141000000), genre.name),genre.name))", "score": -0.4010149535569697, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.revenue,>,141000000), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 169, "beams": [{"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.14590165775984257, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2066060812255058, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.2369983021385482, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(country),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.23945605821891314, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.24693847808354508, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.2595526155530018, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.2912066103551751, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3063591251443271, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.34769529015878164, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,=,Sweden), movie.title),movie.title))", "score": -0.35228412513453905, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(company),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.3572721313195435, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),country.name,=,Sweden),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id), movie.title),movie.title))", "score": -0.3599410085641604, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_company.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3661239283190462, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),company.id,production_country.iso_3166_1),country.name,=,Sweden), movie.title),movie.title))", "score": -0.3732577041404047, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}, {"orig_question": "How many unique movie titles are from movies produced in Sweden?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),country.name,=,Sweden),merge(getData(production_company),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))", "score": -0.37808750996428864, "correct_code": "count(extractValues(distinct(merge(filter(getData(country),country.name,=,Sweden),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 170, "beams": [{"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.06493262694857549, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.35501659569126787, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.49484793217561673, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.revenue))", "score": -0.5259768774703844, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.533288980081551, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.5469224530097563, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6625941815291299, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.6890349963555605, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.popularity),movie.popularity))", "score": -0.7022694503773307, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.budget,!=,26500000), movie.id),movie.popularity)", "score": -0.7237704636234761, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.release_date))", "score": -0.7371493389800889, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.revenue),movie.popularity))", "score": -0.7525919017352862, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.vote_average))", "score": -0.7646103313163621, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,>=,26500000), movie.popularity),movie.popularity))", "score": -0.7953269039353472, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}, {"orig_question": "How much are the movie popularities from movies which don't have a budget of 26500000.0?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.revenue))", "score": -0.8020560955701512, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,26500000), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 171, "beams": [{"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.029121328763721976, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.4640449221842573, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.release_date))", "score": -0.554669613869919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.vote_average),movie.runtime))", "score": -0.6429006093312637, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.status))", "score": -0.6434914422352449, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6656062539332197, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6755998697262839, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.6913197603207664, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.release_date),movie.runtime))", "score": -0.7184229725171463, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "sum(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.id),movie.runtime)", "score": -0.7581657696238568, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.7668993409388349, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.release_date,=,2006-06-26),movie.runtime), movie.runtime))", "score": -0.7790620111627504, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))", "score": -0.7872109921372612, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.vote_average))", "score": -0.7880454016049043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}, {"orig_question": "Whats the different runtimes of movies released on 2006-06-26?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.status),movie.runtime))", "score": -0.801900827245845, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2006-06-26), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 172, "beams": [{"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.0528681942863136, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.24658784813146653, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.29993620219747, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.vote_average)", "score": -0.41607414889898947, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.45037865895545387, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.45874415207321756, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4760589929678638, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.49128202969740875, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(spoken_language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.4980198021697152, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5037270130214574, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),spoken_language.movie_id,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5079410953546, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,pt), movie.id),movie.runtime)", "score": -0.5120925061392211, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(language),getData(spoken_language),language.iso_639_1,spoken_language.movie_id),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5284927617260192, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),getData(spoken_language),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.runtime)", "score": -0.5427928794463815, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}, {"orig_question": "Whats the total length of all movies with original language pt?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,pt), movie.id),movie.vote_average)", "score": -0.5446303837634122, "correct_code": "sum(distinct(filter(getData(movie),movie.original_language,=,pt), movie.id),movie.runtime)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 173, "beams": [{"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.budget),movie.vote_average))", "score": -0.21945649064123177, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.29757459967553984, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.revenue),movie.vote_average))", "score": -0.3170071438360363, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.32552734532528205, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(keyword),keyword.name,!=,tape recorder),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.3486828770143303, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,tape recorder),movie.budget),movie.vote_average))", "score": -0.37121117607521614, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.37275670840025166, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.3797489131729582, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.revenue),movie.vote_average))", "score": -0.39524951834582545, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(filter(merge(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id),movie.budget,!=,tape recorder), movie.id),movie.vote_average)", "score": -0.4041116804130506, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.vote_count),movie.vote_average))", "score": -0.40770165882270043, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(filter(merge(getData(keyword),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),movie.vote_count),movie.vote_average))", "score": -0.4265514543874976, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(keyword),getData(has_keyword),keyword.id,has_keyword.keyword_id),keyword.name,!=,tape recorder),getData(movie),has_keyword.movie_id,movie.id),movie.budget),movie.vote_average))", "score": -0.4302294934136184, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "done(extractValues(min(merge(filter(getData(keyword),keyword.name,<,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))", "score": -0.4437770161697294, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}, {"orig_question": "What is the vote average of the movie with a maximum budget without the keyword name tape recorder?", "inferred_code": "avg(distinct(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.id),movie.vote_count)", "score": -0.44465246585558665, "correct_code": "done(extractValues(max(merge(filter(getData(keyword),keyword.name,!=,tape recorder),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),movie.budget),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 174, "beams": [{"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.13791689531696763, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.16238269945390255, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.1971089439636892, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.24769130430758898, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.24823643189966743, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.revenue)", "score": -0.2523898324676741, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.2692187415799861, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.id,crew.person_id),person.death_place,=,Edwell), movie.id),movie.budget)", "score": -0.27910656104921133, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.27971843022867043, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.29944052499402646, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.revenue)", "score": -0.31649282911144044, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.budget),movie.revenue)", "score": -0.351758286815417, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.death_place,=,Edwell),getData(movie),crew.movie_id,movie.id), movie.id),movie.budget)", "score": -0.3680061357330681, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,=,Edwell),merge(getData(crew),getData(movie),crew.movie_id,person.id),person.id,crew.person_id), movie.id),movie.budget)", "score": -0.37568487775816206, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}, {"orig_question": "How much is the sum of the movies revenue when the death place of the persons, which are crew members, Edwell was?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_place,=,Edwell),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id), movie.revenue),movie.budget)", "score": -0.38474912984771287, "correct_code": "sum(distinct(filter(merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),person.death_place,=,Edwell), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 175, "beams": [{"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.19752874009312432, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.3027973665336409, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3136783057494217, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3328430985563311, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.36766345401532846, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(person),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.36867759172226794, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id),person.birth_day,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3868282468222378, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.homepage,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.3937481339902845, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.4034059774919448, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),oscar_nominee.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.40403094400371153, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),movie.release_date,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.4064163093509319, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.release_date,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,crew.person_id), movie.id),movie.vote_average)", "score": -0.4065915364050966, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(merge(filter(getData(movie),movie.status,!=,2004-04-07),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), movie.id),movie.vote_average)", "score": -0.4119635904373544, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),crew.movie_id,movie.id),person.id,cast.person_id),person.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.4132063690545846, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}, {"orig_question": "How much is the average vote of the movies which where not released on April 7th 2004?", "inferred_code": "avg(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),country.name,!=,2004-04-07), movie.id),movie.vote_average)", "score": -0.42766757566038166, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,!=,2004-04-07), movie.vote_average),movie.vote_average))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 176, "beams": [{"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.19941079823183827, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.death_place))", "score": -0.2161399146716576, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.3135080917778224, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.34489751544321484, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.38778058741155486, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.39483585392250614, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4191700110769473, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4262252775878986, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,crew.person_id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4297935989263108, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.4346052335749846, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.birth_place),person.birth_place))", "score": -0.45133435001480393, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,<=,1975-10-25), person.death_place),person.death_place))", "score": -0.45358151217806153, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.death_place),person.birth_place))", "score": -0.4550852387361331, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(person),getData(cast),person.id,oscar_nominee.person_id),getData(person),oscar_nominee.person_id,person.id),person.death_day,=,1975-10-25), person.death_place),person.death_place))", "score": -0.4629384861785596, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}, {"orig_question": "Where died the person which died on 1975-10-25?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),person.id,oscar_nominee.person_id),person.death_day,=,1975-10-25), person.birth_place),person.death_place))", "score": -0.4673813595891534, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_day,=,1975-10-25), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 177, "beams": [{"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.17112040903726755, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.name,=,South Paris),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.24996523622829564, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,movie.id), genre.name),genre.name))", "score": -0.3014225514805699, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id),person.gender,=,South Paris), genre.name),genre.name))", "score": -0.31742196042879, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(has_genre),person.id,oscar_nominee.person_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.322192725704648, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(person),person.birth_place,=,South Paris),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id),person.id,oscar_nominee.person_id), genre.name),genre.name))", "score": -0.34120562034697033, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.34168570636584505, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.35901244448383474, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.37025518708147664, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.person_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3762425198299759, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),person.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3764585026514998, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,genre.id), genre.name),genre.name))", "score": -0.37683217777337547, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.oscar_id,has_genre.genre_id), genre.name),genre.name))", "score": -0.37785189704699906, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_place,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar_nominee.movie_id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3875819035456196, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}, {"orig_question": "How many distinct genre names are there in movies with oscar nominees that were born in \"South Paris\" ?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.name,=,South Paris),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),oscar.id,has_genre.genre_id), genre.name),genre.name))", "score": -0.3888733798215228, "correct_code": "count(extractValues(distinct(merge(merge(merge(merge(filter(getData(person),person.birth_place,=,South Paris),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 178, "beams": [{"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.0825918167899662, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.15926365080194999, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.17658228493476852, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,is), country.name),country.name))", "score": -0.29041532086508093, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),movie.original_language))", "score": -0.33705380328815415, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(spoken_language),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3519184663791798, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,spoken_language.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3795135694560284, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.38510624779948294, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),production_country.iso_3166_1))", "score": -0.3877408268592585, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.38929511688823004, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),spoken_language.iso_639_1,country.iso_3166_1), country.name),country.name))", "score": -0.39497455808648946, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,is),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,oscar_winner.movie_id), country.name),country.name))", "score": -0.4008994492365388, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,spoken_language.movie_id),movie.original_language,=,is), country.name),country.name))", "score": -0.4028866437770508, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),movie.original_language))", "score": -0.4034311984596066, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}, {"orig_question": "Which countries have made movies in which the original language is Icelandic?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,is),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), movie.original_language),country.name))", "score": -0.4075424448763019, "correct_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,=,is), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 179, "beams": [{"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.1230673837422143, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.1635446997705473, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.16569152534898415, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.id),movie.revenue)", "score": -0.20508546405454575, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.revenue),movie.revenue)", "score": -0.28255294930148706, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.31034612934480266, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)", "score": -0.3190505725647096, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3191025636562456, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.32573151189448113, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3260881149607751, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.3588181725498829, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.sub_category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.revenue)", "score": -0.3683642868512259, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,<,documentary (feature)),oscar_nominee.movie_id,movie.id), movie.revenue),movie.revenue)", "score": -0.36945169582589316, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.budget),movie.revenue)", "score": -0.3962298323844357, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}, {"orig_question": "What is the summed movie revenue of movies nominated in the oscar category \"documentary (feature)\" ?", "inferred_code": "sum(distinct(merge(filter(getData(oscar),oscar.category,=,documentary (feature)),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.revenue),movie.budget)", "score": -0.4015149216326629, "correct_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,documentary (feature)), movie.id),movie.revenue)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 180, "beams": [{"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.17880227420391748, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.23917898539366433, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.39539469968440244, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.4076291025048704, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.revenue,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.45252832773985574, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.release_date),movie.popularity))", "score": -0.4557714108741493, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.popularity),movie.release_date))", "score": -0.4585988130784244, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5189605653649778, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.birth_day,>,2010-03-26), movie.popularity),movie.release_date))", "score": -0.5189755242681713, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(person),movie.release_date,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5229470283156843, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.runtime),movie.release_date))", "score": -0.5378052201485843, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5412370860940428, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.birth_day,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5833237395054311, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>,2010-03-26), movie.status),movie.release_date))", "score": -0.5899453368401737, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}, {"orig_question": "How many movies are released later than 2010-03-26?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.popularity,>,2010-03-26), movie.release_date),movie.release_date))", "score": -0.5921037793523283, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,>=,2010-03-26), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 181, "beams": [{"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.20953451139738963, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(has_keyword),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.33543035213187417, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), movie.vote_count),movie.title))", "score": -0.3357778568791901, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),keyword.name))", "score": -0.3391381703267974, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.vote_count))", "score": -0.3554023724485353, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.3790549567282067, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.name),movie.original_language))", "score": -0.3836900501033683, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),getData(movie),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.408848511996256, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), oscar.number),movie.title))", "score": -0.4207866060654191, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,has_keyword.keyword_id), keyword.name),movie.title))", "score": -0.43311270070360597, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),movie.vote_average))", "score": -0.4449829222824043, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id),keyword.name),movie.title))", "score": -0.4520114850519786, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),keyword.name,=,horror),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),keyword.id,has_keyword.keyword_id), keyword.id),movie.title))", "score": -0.4541184962538881, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(has_keyword),movie.id,oscar_winner.movie_id),getData(oscar),has_keyword.keyword_id,person.id),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.5313715220531823, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}, {"orig_question": "Has any movie with the keyword horror won an oscar?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),keyword.name,=,horror),getData(has_keyword),keyword.id,has_keyword.keyword_id),merge(merge(getData(movie),getData(has_keyword),movie.id,oscar_winner.movie_id),getData(person),has_keyword.keyword_id,person.id),has_keyword.movie_id,movie.id), keyword.name),movie.title))", "score": -0.535833397680545, "correct_code": "isEmpty(extractValues(distinct(filter(merge(getData(keyword),merge(merge(getData(has_keyword),getData(movie),has_keyword.movie_id,movie.id),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),movie.id,oscar_winner.movie_id),keyword.id,has_keyword.keyword_id),keyword.name,=,horror), oscar.year),oscar.year))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 182, "beams": [{"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.12404259162430899, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.1276697932788156, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.22501797493287992, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Sardaarji),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.23171460546573383, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),person.death_place))", "score": -0.2966659590244645, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),company.name,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.2993611420683269, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.3237424104574431, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),company.name,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.33274397072400635, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),person.death_place))", "score": -0.33659426338444975, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Sardaarji), company.name),company.name))", "score": -0.34584174101195786, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Sardaarji), company.name),company.name))", "score": -0.3496780665430671, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3524542762648055, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),oscar.category,=,Sardaarji),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.3656371964411969, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,=,Sardaarji), company.name),company.name))", "score": -0.37834150881930145, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}, {"orig_question": "How many companies did produce the movie Sardaarji?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Sardaarji),getData(oscar_nominee),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.3794975517507995, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Sardaarji), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 183, "beams": [{"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.21228632483805288, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.24186045508679027, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.2499700008381535, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.2757285740602043, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.28884136993628523, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3207178788189342, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.35810569723087715, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.362635326590403, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.3631688995670318, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,>=,160),getData(has_genre),oscar.id,oscar_nominee.oscar_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3755246536655563, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(has_genre),oscar.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.38614392240361856, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.runtime,>,160), genre.name),genre.name))", "score": -0.3919738162042911, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.year,>=,160), genre.name),genre.name))", "score": -0.39703702836982274, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,>=,160), genre.name),genre.name))", "score": -0.3973640038403694, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "What are the genres of all movies that run at least 160 minutes?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),oscar.id,has_genre.genre_id),getData(genre),has_genre.genre_id,genre.id),movie.runtime,>=,160), genre.name),genre.name))", "score": -0.3977808624986247, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,160),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 184, "beams": [{"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,cs), movie.status),movie.status))", "score": -0.1254863593239861, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.runtime,=,cs), movie.status),movie.status))", "score": -0.20307074519587331, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,cs), movie.status),movie.status))", "score": -0.31428955527735525, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,cs), movie.status),movie.status))", "score": -0.4046580645699578, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.release_date,=,cs), movie.status),movie.status))", "score": -0.4664144966263848, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),person.death_day,=,cs), movie.status),movie.status))", "score": -0.5587421211857873, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar_nominee.movie_id,=,cs), movie.status),movie.status))", "score": -0.5661616477627831, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6135451378040546, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6296044724517054, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),oscar.number,=,cs), movie.status),movie.status))", "score": -0.630560651745327, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,!=,cs), movie.status),movie.status))", "score": -0.635460326771863, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),production_country.iso_3166_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6420703950994974, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),spoken_language.iso_639_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6530471801514139, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,cs),merge(getData(oscar_winner),getData(movie),oscar_winner.oscar_id,country.iso_3166_1),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.6558146320972914, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}, {"orig_question": "How many different status do movies have with the original_language cs?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,=,cs),merge(getData(oscar_winner),getData(movie),production_country.iso_3166_1,person.id),movie.id,oscar_winner.movie_id), movie.status),movie.status))", "score": -0.658129802013835, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.original_language,=,cs), movie.status),movie.status))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 185, "beams": [{"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.10863408031989129, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))", "score": -0.12340973996434353, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.13566869114952687, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.title,<=,Nine), company.name),company.name))", "score": -0.25427866555053286, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,=,Nine), company.name),company.name))", "score": -0.2553612423655795, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.31401042585989797, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.34598880927919806, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.original_language,=,Nine), company.name),company.name))", "score": -0.3488867064421812, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.title,<=,Nine), company.name),company.name))", "score": -0.3849822707731688, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,=,Nine),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.39072657601159944, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.runtime,=,Nine), company.name),company.name))", "score": -0.40308725769749804, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.status,=,Nine), company.name),company.name))", "score": -0.42462823707304503, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Nine),getData(production_company),movie.id,oscar_nominee.movie_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.43027715111536086, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Nine),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id), company.name),company.name))", "score": -0.43245361698040513, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}, {"orig_question": "Which company or companies were involved in producing the movie nine?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.title,=,Nine), company.name),company.name))", "score": -0.43682186856456884, "correct_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),movie.title,=,Nine),getData(company),production_company.company_id,company.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 186, "beams": [{"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.03660302627399266, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),movie.budget,<,7500000), company.name),company.name))", "score": -0.29607592618228884, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<=,7500000), company.name),company.name))", "score": -0.3011759451745036, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.32541679800646783, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.revenue,<,7500000), company.name),company.name))", "score": -0.33230386920279165, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3499768504273987, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),person.death_place))", "score": -0.36912539365982877, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), person.birth_place),company.name))", "score": -0.37673092142964976, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,country.iso_3166_1),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.3863524552445868, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),movie.title))", "score": -0.3884095879566706, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,keyword.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.38873576517105457, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), oscar.category),company.name))", "score": -0.38923813299835025, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.release_date,<,7500000), company.name),company.name))", "score": -0.3957299602400931, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,company.id),movie.budget,<,7500000), company.name),company.name))", "score": -0.39585472244521547, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}, {"orig_question": "Are there companies that produces movies with a budget of less than 7500000 Dollars?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_company),getData(country),production_company.company_id,company.id),movie.id,production_company.movie_id),movie.budget,<,7500000), company.name),company.name))", "score": -0.39653804249173985, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.budget,<,7500000),merge(getData(production_company),getData(company),production_company.company_id,company.id),movie.id,production_company.movie_id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 187, "beams": [{"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.1884324186307672, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.20479660440918376, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.2274397728880431, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.24129754685161892, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.26528187786447843, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.gender),person.birth_place))", "score": -0.26598239049500955, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.2785551008092917, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))", "score": -0.3025394318221512, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.3192898960601523, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id), person.birth_place),person.birth_place))", "score": -0.3293258869648197, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(person),oscar_nominee.person_id,person.id), person.birth_place),person.name))", "score": -0.34855680580940335, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),filter(merge(getData(crew),getData(person),oscar_nominee.person_id,person.id),movie.status,=,writing (original story)),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.36322584208633524, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),merge(getData(oscar_winner),getData(person),crew.person_id,person.id),oscar.id,oscar_nominee.oscar_id), person.birth_place),person.birth_place))", "score": -0.37696378593067803, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing (original story)), person.gender),person.birth_place))", "score": -0.37701664762775844, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}, {"orig_question": "Are there birth places of crew members of movies nominated for oscar in the sub category \"writing (original story)\" ?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.sub_category,=,writing (original story)),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(crew),getData(person),crew.person_id,person.id),movie.id,crew.movie_id),oscar.id,person.id), person.birth_place),person.birth_place))", "score": -0.4363678376045284, "correct_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(getData(movie),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id),oscar_nominee.movie_id,movie.id),oscar.sub_category,=,writing (original story)), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 188, "beams": [{"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.10010357083078802, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.19230939425115026, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.20975258130245905, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.25241123461266357, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.28437196093263023, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.id),oscar.number)", "score": -0.30195840472282126, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>=,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.id),oscar.number)", "score": -0.336100264259592, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.3414151904050304, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>=,135), oscar.number),oscar.number)", "score": -0.3446170580330258, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.number),oscar.number)", "score": -0.3620602450843346, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.3737063767870356, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(merge(filter(getData(movie),movie.runtime,>=,135),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id), oscar.number),oscar.number)", "score": -0.39314349373199214, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.category),oscar.number)", "score": -0.40011291784192937, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar_nominee),oscar_nominee.oscar_id,oscar.id),movie.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.4069712050196026, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar numbers of movies nominated for the oscar with a runtime over 135 ?", "inferred_code": "sum(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.oscar_id,oscar.id),oscar.id,oscar_nominee.movie_id),movie.runtime,>,135), oscar.id),oscar.number)", "score": -0.40923566145242585, "correct_code": "sum(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,135),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(oscar),oscar_nominee.oscar_id,oscar.id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 189, "beams": [{"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.09864367293630494, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))", "score": -0.19972265633259667, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),person.birth_place))", "score": -0.30459356988285435, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.birth_place))", "score": -0.4056725532791461, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_day,>,1909-11-09), person.birth_place),person.death_place))", "score": -0.6086915922860499, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.birth_place),company.name))", "score": -0.6269893565258826, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), company.name),person.death_place))", "score": -0.6275450673929299, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>=,1909-11-09), person.birth_place),person.death_place))", "score": -0.6378771942618187, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_day),person.death_place))", "score": -0.6638388720384683, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.6819040953587315, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.birth_day,>,1909-11-09),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.death_place),person.birth_place))", "score": -0.6883360896600585, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.name),person.death_place))", "score": -0.6897949663034524, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1909-11-09),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.death_place))", "score": -0.6912041811831691, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.birth_day,>,1909-11-09),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.6946589408222836, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}, {"orig_question": "Where died those people who were born after 1909-11-09?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_day,>,1909-11-09),person.birth_place), person.death_place))", "score": -0.7001484066713601, "correct_code": "done(extractValues(distinct(filter(getData(person),person.birth_day,>,1909-11-09), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 190, "beams": [{"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.09914215079459691, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.18487692444667686, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.1954065457359225, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.id),movie.popularity)", "score": -0.26036610343464156, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(getData(genre),genre.name,=,Family),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.popularity)", "score": -0.28339997681693996, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.3050030377850597, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.3063365116915078, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.revenue)", "score": -0.3110410323857758, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),has_genre.movie_id,movie.id), movie.popularity),movie.popularity)", "score": -0.31662996514974334, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,has_genre.genre_id), movie.popularity),movie.popularity)", "score": -0.33959056782076397, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id),getData(movie),genre.id,movie.id), movie.popularity),movie.popularity)", "score": -0.35121749518544765, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.release_date),movie.popularity)", "score": -0.366415994688704, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)", "score": -0.37598905990309867, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Family),getData(movie),has_genre.movie_id,movie.id), movie.id),movie.revenue)", "score": -0.3967758060378557, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}, {"orig_question": "What is the average movie popularity in the genre Family?", "inferred_code": "avg(distinct(merge(filter(getData(genre),genre.name,=,Family),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id), movie.release_date),movie.popularity)", "score": -0.4027059830395008, "correct_code": "avg(distinct(filter(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),genre.name,=,Family), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 191, "beams": [{"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.13917745533682482, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.16917582335978892, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.17455195859063108, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.23640321379784945, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.25265932336584795, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,<=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.25691477461859213, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,<=,887),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.2735032363458027, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.29231742777167635, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,<=,887), keyword.name),keyword.name))", "score": -0.2984742919259521, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3006300015097521, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.33811674549735005, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.39101359665145086, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,887),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,keyword.id), keyword.name),keyword.name))", "score": -0.3954305488713017, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,<=,887),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.41482360370829996, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}, {"orig_question": "what are the keyword names of all movies with a vote count greater or equal than 887.0?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,887), keyword.name),keyword.name))", "score": -0.4152971366170003, "correct_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,887),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 192, "beams": [{"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.13830686195536135, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.2309922692670022, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.23781358663849023, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id), country.name),country.name))", "score": -0.28861126256689607, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(country),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.2912916659506008, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.292115500605151, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id), country.name),country.name))", "score": -0.31046355243183815, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,Released),getData(production_country),country.iso_3166_1,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.3169755377334597, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.movie_id),movie.original_language,!=,Released), country.name),country.name))", "score": -0.3304989939501311, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(company),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.3312957748756183, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))", "score": -0.33479894896169093, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),country.iso_3166_1,production_country.iso_3166_1), country.name),country.name))", "score": -0.34086773029740547, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.movie_id),movie.status,!=,Released), country.name),country.name))", "score": -0.34339489341742235, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,Released),merge(getData(production_country),getData(country),production_country.iso_3166_1,country.iso_3166_1),movie.id,production_country.iso_3166_1), country.name),country.name))", "score": -0.3627200111636221, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}, {"orig_question": "In how many countries are unreleased movies produced?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(production_country),country.iso_3166_1,production_country.movie_id),country.name,!=,Released), country.name),country.name))", "score": -0.40071747740718167, "correct_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.status,!=,Released),getData(production_country),movie.id,production_country.movie_id),getData(country),production_country.iso_3166_1,country.iso_3166_1), country.name),country.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 193, "beams": [{"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.15042936701744522, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2209248927904777, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.23547094389026801, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.number),oscar.number)", "score": -0.2800558102003488, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.2804826547991014, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.id),oscar.number)", "score": -0.2851017231627398, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_nominee),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.2870167538612417, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.number),oscar.number)", "score": -0.2897796203726378, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(merge(getData(person),getData(oscar_winner),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.id),oscar.number)", "score": -0.2942401436477628, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_place,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.33571627412250926, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(merge(filter(getData(person),person.death_day,!=,2008-02-21),getData(oscar_winner),person.id,oscar_winner.person_id),getData(oscar),oscar_winner.oscar_id,oscar.id), oscar.category),oscar.number)", "score": -0.34295562921096684, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_place,!=,2008-02-21), oscar.number),oscar.number)", "score": -0.3682342806601519, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id),person.death_day,!=,2008-02-21), oscar.number),oscar.number)", "score": -0.37285334448689417, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_nominee.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)", "score": -0.38843842764100633, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}, {"orig_question": "What is the sum of the oscar number os oscars with an oscar winner that did not die in 2008-02-21 ?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), person.death_day),oscar.number)", "score": -0.39409591269369665, "correct_code": "sum(distinct(merge(filter(getData(person),person.death_day,!=,2008-02-21),merge(getData(oscar_winner),getData(oscar),oscar_winner.oscar_id,oscar.id),person.id,oscar_winner.person_id), oscar.id),oscar.number)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 194, "beams": [{"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.2887430679093086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.33830522410971753, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), keyword.name),movie.title))", "score": -0.41193031184775464, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),keyword.name))", "score": -0.42767518423897855, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), language.name),movie.title))", "score": -0.4584392201195442, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.vote_average),movie.vote_count))", "score": -0.4585902657399856, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),keyword.name))", "score": -0.4772373404393875, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), person.name),movie.vote_count))", "score": -0.5081524219403946, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.original_language),movie.title))", "score": -0.5284814428578102, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), keyword.name),keyword.name))", "score": -0.5508624281774246, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.budget,!=,260000000),merge(getData(cast),getData(person),cast.person_id,person.id),movie.id,cast.movie_id), movie.vote_count),movie.title))", "score": -0.5519730946738802, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.566583601014169, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.budget,!=,260000000), movie.vote_average),movie.title))", "score": -0.5860337572804395, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,cast.movie_id),movie.title,!=,260000000), person.name),movie.title))", "score": -0.6030012311111328, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}, {"orig_question": "What are the Names of the Movie Titles Where the Movie Budget is not 260000000", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),spoken_language.iso_639_1,language.iso_639_1),movie.id,has_genre.movie_id),movie.budget,!=,260000000), person.name),movie.title))", "score": -0.6095171406033111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,260000000), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 195, "beams": [{"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.45175869019294623, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.45420769714110065, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.45488672704959754, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.47089342029357795, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.47402145715022925, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.47891142331354786, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_count))", "score": -0.5023562323331134, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.5102159455564106, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5133439824130619, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_count))", "score": -0.5270599585055606, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_count),movie.vote_average))", "score": -0.5293506756570423, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5324787125136936, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.revenue),movie.vote_count))", "score": -0.553191952421912, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_average,=,Whipped), movie.vote_average),movie.vote_average))", "score": -0.5643608879327076, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}, {"orig_question": "Are there votes for Whipped?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.vote_average,!=,Whipped), movie.revenue),movie.vote_count))", "score": -0.5723266825225437, "correct_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.title,=,Whipped), movie.vote_count),movie.vote_count))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 196, "beams": [{"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.13474237926986207, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,!=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.19188627502714753, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,!=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.19866674650055252, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,>=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.21336718568702098, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.28571398254666663, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.29821261736098104, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,>=,362),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.30462573115969227, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,!=,362), keyword.name),keyword.name))", "score": -0.31373739035004844, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.vote_count,>=,362), keyword.name),keyword.name))", "score": -0.32825956771121045, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,keyword.id), keyword.name),keyword.name))", "score": -0.3488030741224475, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.35067906916295843, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.vote_count,>=,362),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3687755024700089, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(oscar),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3814727500731945, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.name), keyword.name),keyword.name))", "score": -0.38550626564277574, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}, {"orig_question": "How many keyword names are there where the movie vote count is not 362?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.vote_count,!=,362),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),oscar.number))", "score": -0.3872555696799791, "correct_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.vote_count,!=,362), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 197, "beams": [{"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.title))", "score": -0.09527600013097981, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.release_date),movie.title))", "score": -0.31934105806431035, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.budget),movie.title))", "score": -0.3451111262329505, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.title))", "score": -0.37298756294330815, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.id),movie.title))", "score": -0.433923239041178, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.runtime))", "score": -0.447192662548332, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.budget))", "score": -0.5262629922144697, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.5674546881877092, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.vote_count,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5807575580329285, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.budget,=,Imagine Me & You), movie.title),movie.title))", "score": -0.5993921455592499, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,<=,Imagine Me & You), movie.title),movie.title))", "score": -0.6298287575264112, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.title),movie.release_date))", "score": -0.6321199472658918, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6325324994228274, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Imagine Me & You),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.title),movie.title))", "score": -0.6351179655766448, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}, {"orig_question": "How many movies with the title Imagine Me & You are there?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,movie.id),person.death_day,=,Imagine Me & You), movie.title),movie.title))", "score": -0.6726273738789644, "correct_code": "count(extractValues(distinct(filter(getData(movie),movie.title,=,Imagine Me & You), movie.runtime),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 198, "beams": [{"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.02986343586962903, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.43747671777313957, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.5019921695860957, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,!=,tr), movie.popularity),movie.popularity))", "score": -0.5134492005236098, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.5154508335263492, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.5443223798023715, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.5657490324182369, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.movie_id),language.name,=,tr), movie.popularity),movie.popularity))", "score": -0.6056471228211852, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.6088378316153276, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.iso_639_1), movie.popularity),movie.popularity))", "score": -0.6107416957912858, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),movie.id,spoken_language.movie_id), movie.popularity),movie.popularity))", "score": -0.6610399450760357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.revenue))", "score": -0.669885591349157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.original_language,=,tr),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1), movie.revenue),movie.popularity))", "score": -0.6828444222210485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))", "score": -0.6906428138026968, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}, {"orig_question": "What is the movie popularity from movies with original language tr?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.title,=,tr), movie.popularity),movie.popularity))", "score": -0.7147759067374864, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,tr), movie.popularity),movie.popularity))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 199, "beams": [{"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.popularity))", "score": -0.18060518013953697, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.release_date))", "score": -0.2913347552967025, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),person.birth_day))", "score": -0.30870789992331993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.revenue))", "score": -0.3492096732807113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.popularity))", "score": -0.36923827561258804, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.runtime))", "score": -0.44503516661643516, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.popularity))", "score": -0.4597866568219615, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.release_date))", "score": -0.47996785076975357, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),person.birth_day))", "score": -0.497340995396371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), person.birth_day),movie.revenue))", "score": -0.5378427687537624, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.popularity),movie.vote_average))", "score": -0.5417996119213058, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))", "score": -0.570516231979127, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.runtime),movie.popularity))", "score": -0.5758001837384654, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,<=,27000000), movie.popularity),movie.popularity))", "score": -0.5764232315559639, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}, {"orig_question": "At which dates were movies with a budget of 27000000 Dollars relased?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),person.birth_day))", "score": -0.5878893766057445, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,=,27000000), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 200, "beams": [{"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.14957351017578038, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.17803974912311754, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.24536476580922112, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.2633586193056876, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.original_language,!=,sl),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.26800856638472575, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),language.name,!=,sl), person.death_place),person.death_place))", "score": -0.2738310047565583, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.2814421654515869, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_day),person.death_place))", "score": -0.2918248582530248, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.2997963957652687, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.original_language,!=,sl),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id), person.death_place),person.death_place))", "score": -0.30071658513498595, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(oscar),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), movie.budget),person.death_place))", "score": -0.30990840439892403, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.status,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.3172643028357417, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_day))", "score": -0.3243194926336406, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),language.name,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))", "score": -0.33766580774162347, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}, {"orig_question": "Is there any death place of a person nominated for an oscar in a movie with a original language other than sl?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl), person.death_place),person.death_place))", "score": -0.349661044012257, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,oscar_nominee.movie_id),movie.original_language,!=,sl),getData(person),oscar_nominee.person_id,person.id), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 201, "beams": [{"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))", "score": -0.03049767269840231, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<=,69), movie.revenue),movie.revenue))", "score": -0.3895821810801863, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.popularity),movie.revenue))", "score": -0.5011190662262379, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.budget))", "score": -0.5707130224545836, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_count))", "score": -0.5762723476727842, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,<,69), movie.revenue),movie.revenue))", "score": -0.5828498543341993, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.budget),movie.revenue))", "score": -0.6586683282730519, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,69), movie.revenue),movie.revenue))", "score": -0.6712771759703173, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),person.death_day))", "score": -0.7355027587254881, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.person_id))", "score": -0.7807975799878477, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),cast.movie_id))", "score": -0.7846337349255919, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,>=,69), movie.revenue),movie.revenue))", "score": -0.8016192854483961, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,!=,69), movie.revenue),movie.revenue))", "score": -0.8077917636474012, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.vote_average))", "score": -0.831256607278192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}, {"orig_question": "What revenues did movies with a runtime of 69 minutes make?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), cast.movie_id),movie.revenue))", "score": -0.837498117434734, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.runtime,=,69), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 202, "beams": [{"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.18046995053149276, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.188929107572298, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),language.name,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2958951011284614, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.title,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.30493799232116126, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.32256665727605555, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3261432732770984, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),oscar.category,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.373693498087506, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.vote_average,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.3916111661814172, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),oscar.year,=,Thor: The Dark World),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39186274506988855, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.39366038359734645, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),genre.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.3954740698567897, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),language.name,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4042983703028734, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),oscar.number,=,Thor: The Dark World), genre.name),genre.name))", "score": -0.4059309495347272, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,spoken_language.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.4102620301683029, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}, {"orig_question": "Are there genres associated to Thor: The Dark World?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),language.name))", "score": -0.5021695818430364, "correct_code": "isEmpty(extractValues(distinct(merge(filter(getData(movie),movie.title,=,Thor: The Dark World),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 203, "beams": [{"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.13819461027146962, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.16701890956834226, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.23319345100523317, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.294350461694922, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(filter(merge(getData(genre),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),genre.name,=,Foreign),movie.budget),movie.runtime))", "score": -0.29941794930306054, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.3025674155456881, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(genre),genre.name,=,Foreign),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.4210282535863289, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.revenue),movie.runtime))", "score": -0.4239518999974016, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),person.death_place,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.4286330548020906, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),has_genre.movie_id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.4377287903238982, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),filter(merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),movie.budget,=,Foreign),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.45108019584007686, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.release_date))", "score": -0.4633806502184485, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),oscar_nominee.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.4682478576853043, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),getData(movie),has_genre.movie_id,movie.id),movie.budget),movie.runtime))", "score": -0.4853997726592004, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}, {"orig_question": "How long is the runtime of the movie with the highest budget  in the genre Foreign?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(genre),getData(has_genre),genre.id,has_genre.genre_id),genre.name,=,Foreign),getData(movie),has_genre.movie_id,movie.id),merge(getData(oscar_nominee),getData(person),oscar_nominee.oscar_id,person.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))", "score": -0.5168821342935478, "correct_code": "done(extractValues(max(merge(filter(getData(genre),genre.name,=,Foreign),merge(getData(has_genre),getData(movie),has_genre.movie_id,movie.id),genre.id,has_genre.genre_id),movie.budget),movie.runtime))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 204, "beams": [{"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.020354534215584863, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "isEmpty(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))", "score": -0.5287817921780515, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_count))", "score": -0.5357058101290022, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.vote_average))", "score": -0.6816668563478743, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(distinct(extractValues(filter(getData(movie),movie.status,=,Released),movie.revenue), movie.revenue))", "score": -0.6894116457478958, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "sum(distinct(filter(getData(movie),movie.status,=,Released), movie.id),movie.revenue)", "score": -0.7088094906517209, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.popularity),movie.revenue))", "score": -0.7411388378313859, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.original_language,=,Released), movie.revenue),movie.revenue))", "score": -0.7538898193233763, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<=,Released), movie.revenue),movie.revenue))", "score": -0.7717891928114113, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.budget),movie.revenue))", "score": -0.7868333082369645, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,<,Released), movie.revenue),movie.revenue))", "score": -0.820374071256083, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.budget))", "score": -0.8207086973779951, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_count),movie.revenue))", "score": -0.8250123481921037, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.vote_average),movie.revenue))", "score": -0.8655960183314164, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}, {"orig_question": "Find the revenue of the movies having the status released.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,=,Released), movie.revenue),movie.revenue))", "score": -0.8728642665737425, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.status,=,Released), movie.revenue),movie.revenue))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 205, "beams": [{"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.05883942778746132, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.377659631164625, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.3825224382547671, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.38783701347780275, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.3926998205679449, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4400879528175767, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.44156701765558104, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.death_place),person.death_place))", "score": -0.45654020445541815, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),crew.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.46023233895714516, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),crew.movie_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.4607937791689145, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.gender,!=,m),getData(cast),person.id,crew.person_id),getData(person),crew.person_id,person.id), person.death_place),person.death_place))", "score": -0.4627483215445014, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.movie_id,movie.id),person.id,crew.person_id),person.gender,!=,m), person.death_place),person.death_place))", "score": -0.462859600773347, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(filter(merge(getData(crew),getData(movie),crew.movie_id,movie.id),person.gender,!=,m),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.death_place),person.death_place))", "score": -0.4631359237130028, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.4926832555080396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}, {"orig_question": "What are the death places from the persons where the gender is not male?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.gender,!=,m),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.death_place),person.death_place))", "score": -0.49416232034604396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.gender,!=,m), person.death_place),person.death_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 206, "beams": [{"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.15021984932869062, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(company),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.16711364137203866, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.1691371900233101, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))", "score": -0.22648282455253177, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.263550475865844, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.26948853589893057, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(movie),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.35974209106005767, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.company_id,movie.id),company.id,production_company.company_id), movie.title),movie.title))", "score": -0.36568012982232545, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,Entropy), movie.title),movie.title))", "score": -0.3771185331390895, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.name),movie.title))", "score": -0.38333465023240104, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.39193534705669536, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(getData(company),company.name,=,Entropy),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.39541329343030135, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id),movie.title),movie.title))", "score": -0.39561661823457606, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.40592634002958244, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}, {"orig_question": "What is the movie title of movies from the Entropy production company?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,Entropy),getData(movie),production_company.movie_id,movie.id),movie.title),movie.title))", "score": -0.43279580726437644, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(company),company.name,=,Entropy),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 207, "beams": [{"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.027047848387155682, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>=,75000000), movie.budget),movie.budget))", "score": -0.5106470357277431, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.revenue),movie.budget))", "score": -0.5484299481031485, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.59838901348879, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,!=,75000000), movie.budget),movie.budget))", "score": -0.6019351315335371, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6087389586825718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6276189202672656, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6354896784072939, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),movie.revenue,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6380771655363909, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),language.iso_639_1,movie.id),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.645839659872861, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),movie.revenue,movie.id),language.iso_639_1,movie.revenue),movie.revenue,!=,75000000), movie.budget),movie.budget))", "score": -0.6484271107301726, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.budget,!=,75000000), movie.budget),movie.budget))", "score": -0.6995561551884748, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.title))", "score": -0.7271964633255266, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,>,75000000), movie.budget),movie.budget))", "score": -0.7281914423801936, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}, {"orig_question": "What are the movie budgets of the movies which don't have a revenue of 75000000?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.release_date))", "score": -0.7484332406311296, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.revenue,!=,75000000), movie.budget),movie.budget))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 208, "beams": [{"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(movie),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.28679470364607845, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,cinematography), movie.release_date),movie.release_date))", "score": -0.2970609528252956, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.29961243536191445, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,cinematography),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.299657050712496, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),getData(person),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.3038638979609971, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3282558799583272, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3442800563798566, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(movie),oscar_nominee.movie_id,movie.id),oscar.number,!=,15843608), movie.release_date),movie.release_date))", "score": -0.35565632790470736, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3559035358110056, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,cinematography),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),filter(getData(person),movie.release_date,!=,15843608),oscar_nominee.movie_id,movie.id), movie.release_date),movie.release_date))", "score": -0.3633446438599571, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar_nominee.movie_id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.371927712232535, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.37423489919853054, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.number,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),movie.release_date))", "score": -0.3843447897858085, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,>,15843608),oscar.id,movie.id), movie.release_date),movie.release_date))", "score": -0.39025907562005996, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}, {"orig_question": "Is there any release date for movies in which oscar nominated persons in category cinematography were involved and in which the revenue of the movie was not 15843608?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,!=,cinematography),filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.id,oscar_nominee.oscar_id), movie.release_date),None))", "score": -0.40144620932213204, "correct_code": "isEmpty(extractValues(distinct(filter(filter(merge(getData(oscar),merge(getData(oscar_nominee),merge(merge(getData(person),getData(crew),person.id,crew.person_id),getData(movie),crew.movie_id,movie.id),oscar_nominee.person_id,person.id),oscar.id,oscar_nominee.oscar_id),movie.revenue,!=,15843608),oscar.category,=,cinematography), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 209, "beams": [{"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)", "score": -0.176241402131057, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.3043197937219381, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.3713289143514562, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,!=,6.6), movie.id),movie.budget)", "score": -0.3770321012599124, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),movie.vote_average,!=,6.6), movie.id),movie.budget)", "score": -0.3830207179161782, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(oscar_winner),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4258278547586118, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),person.name,=,6.6), movie.id),movie.budget)", "score": -0.4271495864313989, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4290701136450152, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),oscar.year,=,6.6), movie.id),movie.budget)", "score": -0.4355445837539671, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),cast.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.43865433603492704, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),person.id,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.441441748288456, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),oscar.year,!=,6.6), movie.id),movie.budget)", "score": -0.44404119367560785, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(spoken_language),getData(movie),oscar_winner.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4510104173203097, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(getData(movie),person.name,=,6.6), movie.id),movie.budget)", "score": -0.45217734863194303, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}, {"orig_question": "Whats the average budget for movies with an avarage voting of 6.6?", "inferred_code": "avg(distinct(filter(merge(getData(language),merge(getData(cast),getData(movie),spoken_language.movie_id,movie.id),language.iso_639_1,spoken_language.iso_639_1),language.name,=,6.6), movie.id),movie.budget)", "score": -0.4613537714986131, "correct_code": "avg(distinct(filter(getData(movie),movie.vote_average,=,6.6), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 210, "beams": [{"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.popularity)", "score": -0.033925612057800564, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>,42000000), movie.id),movie.popularity)", "score": -0.528486207525593, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,!=,42000000), movie.id),movie.popularity)", "score": -0.5361031612623937, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.popularity),movie.popularity)", "score": -0.5403911876981486, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.6176509272489484, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,<=,42000000), movie.id),movie.popularity)", "score": -0.669098840815564, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,movie.revenue),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.6840799718650507, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,cast.movie_id),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.7206850288279555, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.revenue,movie.revenue),movie.revenue,>=,42000000), movie.id),movie.popularity)", "score": -0.7364616993845755, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.release_date)", "score": -0.8113235656468544, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.revenue)", "score": -0.8175195780497744, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(filter(getData(movie),movie.budget,>,42000000),movie.popularity)", "score": -0.826209194819528, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.release_date,>=,42000000), movie.id),movie.popularity)", "score": -0.8513861578414257, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.status),movie.popularity)", "score": -0.8758649853725009, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}, {"orig_question": "What is the average popularity among all movies with a budget of at least 42000000 Dollars?", "inferred_code": "avg(distinct(filter(getData(movie),movie.budget,>=,42000000), movie.id),movie.vote_average)", "score": -0.8761907606003165, "correct_code": "avg(filter(getData(movie),movie.budget,>=,42000000),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 211, "beams": [{"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.13102160121663287, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.2489223355105608, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.budget))", "score": -0.2624736221804116, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11), movie.budget),movie.budget))", "score": -0.2705085617860563, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11),movie.budget),movie.budget))", "score": -0.2952742525924858, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.category,=,11),oscar.number),movie.budget))", "score": -0.29741241279471037, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(getData(oscar),oscar.number,=,11),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number),movie.budget))", "score": -0.30419740099661774, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.sub_category,=,11),oscar.number),movie.budget))", "score": -0.33736640795649636, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.year),movie.budget))", "score": -0.36530741262312294, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),movie.runtime),movie.budget))", "score": -0.3718706144320194, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(merge(filter(getData(oscar),oscar.number,=,11),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number),movie.budget))", "score": -0.3844114949372506, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),getData(movie),oscar_winner.movie_id,movie.id),oscar.number,=,11),oscar.number),movie.budget))", "score": -0.40213713596703515, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),oscar.category),movie.budget))", "score": -0.4023637406832092, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(merge(filter(merge(getData(oscar),getData(oscar_winner),oscar.id,oscar_winner.oscar_id),oscar.number,=,11),getData(movie),oscar_winner.movie_id,movie.id),movie.runtime),movie.budget))", "score": -0.40337869891795985, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}, {"orig_question": "Whats the budget of the movie which won the oscar number 11?", "inferred_code": "done(extractValues(min(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.id,=,11),oscar.number),movie.budget))", "score": -0.40456581018896254, "correct_code": "avg(distinct(filter(merge(getData(oscar),merge(getData(oscar_winner),getData(movie),oscar_winner.movie_id,movie.id),oscar.id,oscar_winner.oscar_id),oscar.number,=,11), movie.id),movie.budget)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 212, "beams": [{"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.1775515159009533, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.1960857423290257, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(getData(country),country.name,!=,Germany),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.29244276556642385, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.33486895308732223, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3541726064221631, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.37250481957488973, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3753252730222137, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(production_company),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.37650987866988955, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(country),country.name,!=,Germany),getData(spoken_language),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.37794141694743183, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.3861537752101178, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),movie.revenue),movie.release_date))", "score": -0.3925264325361297, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(getData(company),country.name,!=,Germany),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.3994202174840759, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),getData(movie),country.iso_3166_1,production_country.iso_3166_1),movie.revenue),movie.release_date))", "score": -0.4011078456472764, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(filter(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),company.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.4022486868362507, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}, {"orig_question": "What is the release date of the movie with the maximum revenue between all the movies not produced in Germany ?", "inferred_code": "done(extractValues(max(merge(merge(filter(merge(merge(getData(country),getData(production_country),country.iso_3166_1,production_country.iso_3166_1),getData(movie),production_country.movie_id,movie.id),country.name,!=,Germany),getData(movie),production_country.movie_id,movie.id),merge(getData(movie),getData(movie),crew.movie_id,movie.id),production_country.movie_id,movie.id),movie.revenue),movie.release_date))", "score": -0.42966802359933787, "correct_code": "done(extractValues(max(filter(merge(getData(country),merge(getData(production_country),getData(movie),production_country.movie_id,movie.id),country.iso_3166_1,production_country.iso_3166_1),country.name,!=,Germany),movie.revenue),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 213, "beams": [{"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.0543667864476447, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.birth_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.3384631578301196, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "count(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.5008238708178396, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5040596766215087, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.name),person.name))", "score": -0.5563819277861215, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.name))", "score": -0.5566016604796417, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.death_place,=,Middletown, Rhode Island),person.name), person.name))", "score": -0.5716695205774158, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,=,Middletown, Rhode Island),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id), person.name),person.name))", "score": -0.6080523719386588, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),company.name,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6322769824837451, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6445138239723747, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(distinct(extractValues(filter(getData(person),person.birth_place,=,Middletown, Rhode Island),person.name), person.name))", "score": -0.6580991165246814, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.birth_day),person.name))", "score": -0.6613735462960904, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.birth_place))", "score": -0.6656658296196838, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),movie.release_date,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.6715678278778796, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}, {"orig_question": "Who died in Middletown, Rhode Island?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.gender,=,Middletown, Rhode Island), person.name),person.name))", "score": -0.684294075188518, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,=,Middletown, Rhode Island), person.name),person.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 214, "beams": [{"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.11269115512576862, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.1938629554850398, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(getData(movie),movie.runtime,<=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id), keyword.name),keyword.name))", "score": -0.21679128112025334, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.2205565485321745, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,>=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.253524664159938, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.2903001388046725, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(merge(filter(getData(movie),movie.runtime,<=,199),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3006254370552876, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.30932256488706766, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(oscar_nominee),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.32985901303483667, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(merge(filter(merge(getData(movie),getData(movie),movie.id,has_keyword.movie_id),movie.runtime,>=,199),getData(keyword),has_keyword.keyword_id,keyword.id), keyword.name),keyword.name))", "score": -0.3684386010268096, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(filter(getData(movie),movie.runtime,>=,199),merge(getData(has_keyword),getData(keyword),has_keyword.keyword_id,keyword.id),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.39288434273142886, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.39892058237293265, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,>=,199), keyword.name),keyword.name))", "score": -0.40744177612610566, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.4300944812581144, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}, {"orig_question": "How many different keywords do movies have with a movie runtime of 199 or above?", "inferred_code": "count(extractValues(distinct(filter(merge(getData(movie),getData(keyword),movie.id,has_keyword.movie_id),movie.runtime,<=,199), keyword.name),keyword.name))", "score": -0.4386156746677281, "correct_code": "count(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_keyword),movie.id,has_keyword.movie_id),getData(keyword),has_keyword.keyword_id,keyword.id),movie.runtime,>=,199), keyword.name),keyword.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 215, "beams": [{"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.3922341488570522, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.42768322149808163, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.45470317865620447, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.46063802245277247, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.4656049467338151, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),language.name))", "score": -0.48732494813660593, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,<,4.5), genre.name),genre.name))", "score": -0.48767303323248834, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(movie),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.49015225129723383, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), genre.name),genre.name))", "score": -0.4956765361392659, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,oscar_winner.oscar_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.4960870950938019, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,!=,4.5),getData(spoken_language),oscar.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.5007748025042487, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id),oscar.number,=,4.5), genre.name),genre.name))", "score": -0.5010539551377894, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(filter(merge(getData(oscar),merge(getData(spoken_language),getData(language),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.iso_639_1),movie.vote_count,=,4.5), language.name),genre.name))", "score": -0.515137477585574, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(merge(filter(getData(oscar),movie.runtime,>=,4.5),getData(spoken_language),oscar.id,spoken_language.movie_id),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),genre.name))", "score": -0.5175147918797959, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}, {"orig_question": "Are there films that have been translated into different languages with an average number of votes of 4.5?", "inferred_code": "isEmpty(extractValues(distinct(merge(filter(getData(oscar),movie.runtime,!=,4.5),merge(getData(spoken_language),getData(genre),spoken_language.iso_639_1,language.iso_639_1),oscar.id,spoken_language.movie_id), language.name),genre.name))", "score": -0.5212617109598764, "correct_code": "isEmpty(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,spoken_language.movie_id),movie.vote_average,=,4.5),getData(language),spoken_language.iso_639_1,language.iso_639_1), language.name),language.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 216, "beams": [{"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.4064922734609599, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),person.death_day)", "score": -0.4639398467870915, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(getData(person),person.birth_day,>=,1894-05-10), movie.id),movie.revenue)", "score": -0.48714090719406455, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),person.death_day)", "score": -0.5182441215463889, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.5331765235708831, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.budget)", "score": -0.538192697376489, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5447382497841012, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),movie.budget)", "score": -0.5497544235897073, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),person.death_day)", "score": -0.5584564715998447, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),person.death_day)", "score": -0.5634726454054506, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),person.death_day)", "score": -0.5700181978130628, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.revenue)", "score": -0.574723567014343, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), movie.id),person.death_day)", "score": -0.5750343716186689, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id),person.birth_day,>=,1894-05-10), person.id),movie.revenue)", "score": -0.5797397408199491, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "What is the sum of the movie populartiy where the crews birthday is later or the same as 1894-05-10?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,>=,1894-05-10),merge(getData(cast),getData(movie),cast.movie_id,movie.id),person.id,cast.person_id), person.id),movie.budget)", "score": -0.5806342101074373, "correct_code": "sum(distinct(merge(filter(merge(getData(person),getData(crew),person.id,crew.person_id),person.birth_day,>=,1894-05-10),getData(movie),crew.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 217, "beams": [{"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.06323629480175441, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<=,424), movie.release_date),movie.release_date))", "score": -0.3464422901379294, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.popularity),movie.release_date))", "score": -0.45678894829325145, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,<,424), movie.release_date),movie.release_date))", "score": -0.46613348324171966, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5447708432074458, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5543341369948023, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5601065407846157, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5696698345719722, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), person.gender),movie.release_date))", "score": -0.5749144167857594, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.movie_id),movie.vote_count,=,424), movie.release_date),movie.release_date))", "score": -0.5905832685893141, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.runtime))", "score": -0.6234733017845429, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,424),merge(getData(cast),getData(movie),cast.movie_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.budget),movie.release_date))", "score": -0.7179527821753043, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,424),merge(getData(cast),getData(movie),cast.person_id,movie.id),movie.id,oscar_nominee.oscar_id), movie.budget),movie.release_date))", "score": -0.722502298225815, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,424),merge(getData(cast),getData(movie),cast.movie_id,person.id),movie.id,oscar_nominee.oscar_id), movie.budget),movie.release_date))", "score": -0.73410792500616, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}, {"orig_question": "Find the release date of the movie which received the vote count of 424.", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.vote_count,=,424),merge(getData(cast),getData(movie),cast.person_id,person.id),movie.id,oscar_nominee.oscar_id), movie.budget),movie.release_date))", "score": -0.7386572995690192, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.vote_count,=,424), movie.release_date),movie.release_date))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 218, "beams": [{"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.16165417379735583, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.title,=,writing), company.name),company.name))", "score": -0.2692961036127387, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(oscar),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id),movie.runtime,=,writing), company.name),company.name))", "score": -0.2931689323884366, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),movie.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.29667284812306505, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.movie_id),oscar.category,=,writing), company.name),company.name))", "score": -0.30436417444773955, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(oscar),oscar.category,=,writing),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id), company.name),company.name))", "score": -0.3122990999329918, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.sub_category,=,writing), company.name),company.name))", "score": -0.33291557843966313, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.person_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.33931837589192926, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3413685269965784, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),person.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3424914649048825, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.person_id),oscar.category,=,writing), company.name),company.name))", "score": -0.34632208219837474, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),oscar_nominee.oscar_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3491729249170764, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),getData(company),production_company.company_id,company.id), company.name),company.name))", "score": -0.35751930962958695, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(getData(oscar_nominee),getData(company),production_company.company_id,company.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), person.death_place),company.name))", "score": -0.3757947806792034, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}, {"orig_question": "What are the names of the companies that have released films and have been nominated for the Oscar, with the exception of the Writing category?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(oscar),merge(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),merge(getData(production_company),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id),oscar.id,oscar_nominee.oscar_id),oscar.category,=,writing), company.name),company.name))", "score": -0.3948552979800005, "correct_code": "done(extractValues(distinct(merge(merge(filter(getData(oscar),oscar.category,!=,writing),getData(oscar_nominee),oscar.id,oscar_nominee.oscar_id),merge(merge(getData(movie),getData(production_company),movie.id,production_company.movie_id),getData(company),production_company.company_id,company.id),oscar_nominee.movie_id,movie.id), company.name),company.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 219, "beams": [{"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.08625393358670408, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.popularity))", "score": -0.2721633314868086, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.release_date))", "score": -0.3329592309673899, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.status))", "score": -0.4084444045802229, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.release_date))", "score": -0.4739262424191111, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.popularity),movie.popularity))", "score": -0.5188686288674944, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.5259941988406354, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.id))", "score": -0.5534468590994948, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.title))", "score": -0.5666750967284315, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.release_date),movie.original_language))", "score": -0.5702283084174269, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.original_language),movie.release_date))", "score": -0.5943265221794718, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.status),movie.release_date))", "score": -0.5978411696632975, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<=,2010-01-01), movie.release_date),movie.release_date))", "score": -0.6170906596598797, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.popularity,<,2010-01-01), movie.release_date),movie.release_date))", "score": -0.6434541654089116, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}, {"orig_question": "Which movies were released before 2010?", "inferred_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.id),movie.release_date))", "score": -0.6526010893066996, "correct_code": "done(extractValues(distinct(filter(getData(movie),movie.release_date,<,2010-01-01), movie.title),movie.title))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 220, "beams": [{"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.044087650916480925, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.43112076655173853, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.43401099101533464, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.4349785585833555, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,cast.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4525419548949501, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.45502191279336424, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.45791213725696034, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.gender))", "score": -0.46004551622172585, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,cast.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.4612849556881211, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),cast.person_id,person.id),person.id,crew.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.4764431011365758, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(cast),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.49947862869546783, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(person),merge(getData(crew),getData(person),cast.person_id,person.id),person.id,oscar_nominee.person_id),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))", "score": -0.5023688481751545, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),merge(getData(crew),getData(person),crew.person_id,person.id),person.id,cast.person_id), person.birth_place),person.birth_place))", "score": -0.5202906891359373, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien),getData(cast),person.id,crew.person_id),getData(person),cast.person_id,person.id), person.birth_place),person.birth_place))", "score": -0.5244413941738977, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}, {"orig_question": "What are the birth places of people not died in Moorpark, Kalifornien?", "inferred_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.death_place))", "score": -0.5292152759720921, "correct_code": "done(extractValues(distinct(filter(getData(person),person.death_place,!=,Moorpark, Kalifornien), person.birth_place),person.birth_place))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 221, "beams": [{"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.149457236770724, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.2020537137303149, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,>=,1920-05-11), movie.id),movie.popularity)", "score": -0.2738729877134722, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.2804216036601769, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.2937749501438573, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.30950891262902636, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.3117966513847517, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.32368218091471057, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.popularity),movie.popularity)", "score": -0.3330180806197678, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(person),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.3463714271034482, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(merge(filter(getData(person),person.birth_day,<=,1920-05-11),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id), movie.id),movie.popularity)", "score": -0.34743964138175987, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.person_id,movie.id),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.35565195034966474, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.id,oscar_nominee.person_id),person.death_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.36210540915398165, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(merge(getData(person),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,=,1920-05-11), movie.id),movie.popularity)", "score": -0.38633513610165304, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}, {"orig_question": "Whats the sum of movie popularities with an oscar nomineed person born before 1920-05-11?", "inferred_code": "sum(distinct(filter(merge(getData(person),filter(merge(getData(oscar_nominee),getData(movie),oscar_nominee.movie_id,movie.id),person.birth_day,<,1920-05-11),person.id,oscar_nominee.person_id),person.birth_day,<=,1920-05-11), movie.id),movie.popularity)", "score": -0.397186186792131, "correct_code": "sum(distinct(merge(merge(filter(getData(person),person.birth_day,<,1920-05-11),getData(oscar_nominee),person.id,oscar_nominee.person_id),getData(movie),oscar_nominee.movie_id,movie.id), movie.id),movie.popularity)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 222, "beams": [{"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.13461360755756877, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.17093911913028673, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.2587017238628438, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.292791773410153, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_count),movie.vote_average)", "score": -0.2970304592257025, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.3034399181183863, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.33017743497750157, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.title),movie.vote_average)", "score": -0.33197298021984595, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(getData(company),company.name,=,IMAX),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)", "score": -0.33902591562656803, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.vote_average),movie.vote_average)", "score": -0.3454961603383656, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(production_company),company.id,production_company.company_id), movie.title),movie.vote_average)", "score": -0.3484700614131923, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,IMAX),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.3486936108959327, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(filter(merge(merge(getData(company),getData(production_company),company.id,production_company.company_id),getData(movie),production_company.movie_id,movie.id),company.name,=,IMAX), movie.id),movie.vote_average)", "score": -0.34917381349110876, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(filter(getData(company),company.name,=,IMAX),merge(getData(production_company),getData(movie),production_company.movie_id,movie.id),company.id,production_company.company_id), company.id),movie.vote_average)", "score": -0.362697194402665, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}, {"orig_question": "What is the average movie vote for all movies produced by company IMAX?", "inferred_code": "avg(distinct(merge(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id),getData(movie),production_company.movie_id,production_company.company_id), movie.id),movie.vote_average)", "score": -0.3642674883440921, "correct_code": "avg(distinct(merge(filter(merge(getData(company),getData(production_company),company.id,production_company.company_id),company.name,=,IMAX),getData(movie),production_company.movie_id,movie.id), movie.id),movie.vote_average)"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
{"index": 223, "beams": [{"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.06732230086645583, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.16918568132933343, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(merge(filter(getData(movie),movie.popularity,>,0.293587),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.19127448868244792, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.2050780924001566, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),person.death_place))", "score": -0.3310628866772254, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.3335362139997729, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))", "score": -0.33867202187598006, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,cast.movie_id), genre.name),genre.name))", "score": -0.3941251174377174, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(filter(merge(getData(movie),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id),movie.popularity,>,0.293587), genre.name),person.death_place))", "score": -0.3968102646271354, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,!=,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.3975458934596336, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),has_genre.genre_id))", "score": -0.4235616587630621, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(language),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43913018769956047, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(has_genre),has_genre.genre_id,genre.id),movie.id,has_genre.movie_id), genre.name),genre.name))", "score": -0.43921680583063377, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(merge(getData(movie),getData(spoken_language),movie.id,has_genre.movie_id),movie.popularity,>,0.293587),getData(genre),has_genre.genre_id,genre.id), genre.name),genre.name))", "score": -0.45528127068623736, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}, {"orig_question": "What are the genres names when the movie popularity is more than 0.293587?", "inferred_code": "done(extractValues(distinct(merge(filter(getData(movie),movie.popularity,>,0.293587),merge(getData(has_genre),getData(genre),has_genre.genre_id,genre.id),movie.id,genre.id), genre.name),genre.name))", "score": -0.4600468667957183, "correct_code": "done(extractValues(distinct(filter(merge(merge(getData(movie),getData(has_genre),movie.id,has_genre.movie_id),getData(genre),has_genre.genre_id,genre.id),movie.popularity,>,0.293587), genre.name),genre.name))"}], "gold_nubia_score": -1, "db_name": "moviedata_beta"}
